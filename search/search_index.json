{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! Welcome to the official Wiki for Mindustry ! This site is still very limited, and under construction. You can view the progress on the Wiki Planner . Contribution is highly encouraged. If you find anything in the game that is not listed in these articles and would like to help, please feel free to hop onto the GitHub Repo and open a Pull Request with the changes. If you are new to Markdown, I strongly advise you to visit this beautiful guide by CommonMark. It has a tutorial (Click \"Try our 10-minute Markdown Tutorial\") to help you learn Markdown, and a quick reference for the most important aspects of Markdown. To get started with Mindustry, head on over to here !","title":"Welcome!"},{"location":"#welcome","text":"Welcome to the official Wiki for Mindustry ! This site is still very limited, and under construction. You can view the progress on the Wiki Planner . Contribution is highly encouraged. If you find anything in the game that is not listed in these articles and would like to help, please feel free to hop onto the GitHub Repo and open a Pull Request with the changes. If you are new to Markdown, I strongly advise you to visit this beautiful guide by CommonMark. It has a tutorial (Click \"Try our 10-minute Markdown Tutorial\") to help you learn Markdown, and a quick reference for the most important aspects of Markdown. To get started with Mindustry, head on over to here !","title":"Welcome!"},{"location":"GettingStarted/","text":"Getting Started Getting started with Mindustry is easy. This article covers how to install Mindustry on different platforms and situations. Typical Setup This is your typical, run-of-the-mill setup process. Desktop Steam As of recently, you can now buy the game on Steam if you would like to support Anuke! Itch.io Visit the game's itch.io page , then download a copy of the game from there. Once the .zip file is downloaded, unzip it. Usually that is just done by opening it like normal. When it's done, navigate to the folder it extracted into. Windows : simply open desktop-release.exe . MacOS : run Mindustry.app. Linux : run Mindustry . If you have JRE already installed (which is recommended), you can also run desktop-release.jar on Windows and Linux. Android Play Store There are two different versions of Mindustry on the Play Store; Mindustry and Mindustry Classic. If you want to get the latest releases of Mindustry, go get Mindustry . Otherwise, if you want the old classic version, you can get Mindustry Classic . F-Droid F-Droid is an open source app repository that makes sure all apps are secure and not tampered with. First, you will have to download the F-Droid app here. After it has installed, you can install Mindustry from there. Notice: You will usually get the latest updates through the Play Store before F-Droid. iOS The latest released builds are available on iOS devices only for purchase. For Contributors If you would like to contribute to the game's source code, the best way to go is to compile the game yourself. To compile it yourself: If you haven't already, install at least JRE and JDK 8. Open a terminal in the root directory, then run these commands: For Windows: Running: gradlew desktop:run Building: gradlew desktop:dist For Linux: Running: ./gradlew desktop:run Building: ./gradlew desktop:dist For Server builds, replace desktop with server . Example: ./gradlew server:run","title":"Getting Started"},{"location":"GettingStarted/#getting-started","text":"Getting started with Mindustry is easy. This article covers how to install Mindustry on different platforms and situations.","title":"Getting Started"},{"location":"GettingStarted/#typical-setup","text":"This is your typical, run-of-the-mill setup process.","title":"Typical Setup"},{"location":"GettingStarted/#desktop","text":"","title":"Desktop"},{"location":"GettingStarted/#steam","text":"As of recently, you can now buy the game on Steam if you would like to support Anuke!","title":"Steam"},{"location":"GettingStarted/#itchio","text":"Visit the game's itch.io page , then download a copy of the game from there. Once the .zip file is downloaded, unzip it. Usually that is just done by opening it like normal. When it's done, navigate to the folder it extracted into. Windows : simply open desktop-release.exe . MacOS : run Mindustry.app. Linux : run Mindustry . If you have JRE already installed (which is recommended), you can also run desktop-release.jar on Windows and Linux.","title":"Itch.io"},{"location":"GettingStarted/#android","text":"","title":"Android"},{"location":"GettingStarted/#play-store","text":"There are two different versions of Mindustry on the Play Store; Mindustry and Mindustry Classic. If you want to get the latest releases of Mindustry, go get Mindustry . Otherwise, if you want the old classic version, you can get Mindustry Classic .","title":"Play Store"},{"location":"GettingStarted/#f-droid","text":"F-Droid is an open source app repository that makes sure all apps are secure and not tampered with. First, you will have to download the F-Droid app here. After it has installed, you can install Mindustry from there. Notice: You will usually get the latest updates through the Play Store before F-Droid.","title":"F-Droid"},{"location":"GettingStarted/#ios","text":"The latest released builds are available on iOS devices only for purchase.","title":"iOS"},{"location":"GettingStarted/#for-contributors","text":"If you would like to contribute to the game's source code, the best way to go is to compile the game yourself. To compile it yourself: If you haven't already, install at least JRE and JDK 8. Open a terminal in the root directory, then run these commands: For Windows: Running: gradlew desktop:run Building: gradlew desktop:dist For Linux: Running: ./gradlew desktop:run Building: ./gradlew desktop:dist For Server builds, replace desktop with server . Example: ./gradlew server:run","title":"For Contributors"},{"location":"characteristics/","text":"Characteristics NOTICE: A lot of the content on this page is not up-to-date and refers to an older version of the game. Cost [Items] Cost is how much time an item adds to the time it takes to build a block that uses it. One cost = one tick added to build time. For example, the Battery requires 8CP , 30LE , and 4SI . The build time is processed like this: (0.6 * 8) + (0.9 * 30) + (0.9 * 8) = 39 Therefore, it takes 39 ticks to build a Battery by yourself. Hardness [Items] The time it takes to mine one item is partially dependent on the hardness of an item. Sand is the least hardest, while Thorium is the hardest. [needs correction] For example, mining Copper with your Mining Laser gets you copper much faster than when mining Thorium. That is because Thorium is harder than Copper. Radioactivity [Items] Radioactivity is the potency of the material in nuclear-based blocks like the RTG. In said block, Thorium generates more electricity than Phase because it is much more radioactive. Flammability [Items, Liquids] As it suggests, it is the measure of flammability of an item or liquid. It is also the speed at which it burns and the speed at which it spreads across blocks that are made of it, and enemies which are hit by it as a projectile. For example, Plastanium burns slower than coal , which burns much slower than Pyratite . Furthermore, when Pyratite is used as ammo, it will burn enemies faster and stronger than Blast Compound . When Lava is used as an ammo in the Wave, it will burn enemies unlike Cryofluid or Oil . Tip: Make sure distribution blocks (Conveyors, Vaults, Bridges) that contain flammable or explosive materials are protected and kept away from potential damage, like a Reactor or enemy path. For example, if a Reactor explodes near a conveyor with Coal, the majority of the conveyor will immediately explode because of the Coal on it. Explosiveness [Items, Liquids] As it suggests, it is the measure of explosiveness of an item or liquid. That is most useful in an ammunition application, where the most explosive item (not liquid) will deal the largest damage over the largest area. Blast Compound is the most explosive item as its name, \"Blast\", suggests. Oil is the most and only explosive liquid. If shot from a Wave and set on fire using Pyratite or Lava, it will burn and explode enemies that are around it. The same thing goes for Liquid Tanks and the such that are filled with it. Tip: Keep explosive material protected and separate from your Core or any exposed lines, unless it is needed. It is highly explosive and when triggered, will deal damage to surrounding blocks as well. Read the previous tip, too. Heat Capacity [Liquids] Heat capacity is the measure of the effectiveness of a liquid in absorbing and dissipating heat. The higher the Heat Cap., the faster it will cool things like the Thorium Reactor down. Temperature [Liquids] The temperature of a liquid. Viscosity [Liquids] Viscosity determines the speed at which a liquid flows. A higher viscosity means it flows slower, while a lower one means it flows much faster. Status Effect [Liquids] The status effect of the liquid is passed on to an entity that is hit by it or is standing on it. Melting Lava has the \"melting\" status effect, which means that enemies that are hit by it (from a Wave) or are standing on a puddle of it will start burning and melting. Tarred With the \"tarred\" status effect, enemies will move slower and be more susceptible to fire. Freezing Enemies will move extremely slow as they freeze. This is useful for slowing down swift air enemies to make them easier to shoot.","title":"Characteristics"},{"location":"characteristics/#characteristics","text":"NOTICE: A lot of the content on this page is not up-to-date and refers to an older version of the game.","title":"Characteristics"},{"location":"characteristics/#cost-items","text":"Cost is how much time an item adds to the time it takes to build a block that uses it. One cost = one tick added to build time. For example, the Battery requires 8CP , 30LE , and 4SI . The build time is processed like this: (0.6 * 8) + (0.9 * 30) + (0.9 * 8) = 39 Therefore, it takes 39 ticks to build a Battery by yourself.","title":"Cost [Items]"},{"location":"characteristics/#hardness-items","text":"The time it takes to mine one item is partially dependent on the hardness of an item. Sand is the least hardest, while Thorium is the hardest. [needs correction] For example, mining Copper with your Mining Laser gets you copper much faster than when mining Thorium. That is because Thorium is harder than Copper.","title":"Hardness [Items]"},{"location":"characteristics/#radioactivity-items","text":"Radioactivity is the potency of the material in nuclear-based blocks like the RTG. In said block, Thorium generates more electricity than Phase because it is much more radioactive.","title":"Radioactivity [Items]"},{"location":"characteristics/#flammability-items-liquids","text":"As it suggests, it is the measure of flammability of an item or liquid. It is also the speed at which it burns and the speed at which it spreads across blocks that are made of it, and enemies which are hit by it as a projectile. For example, Plastanium burns slower than coal , which burns much slower than Pyratite . Furthermore, when Pyratite is used as ammo, it will burn enemies faster and stronger than Blast Compound . When Lava is used as an ammo in the Wave, it will burn enemies unlike Cryofluid or Oil . Tip: Make sure distribution blocks (Conveyors, Vaults, Bridges) that contain flammable or explosive materials are protected and kept away from potential damage, like a Reactor or enemy path. For example, if a Reactor explodes near a conveyor with Coal, the majority of the conveyor will immediately explode because of the Coal on it.","title":"Flammability [Items, Liquids]"},{"location":"characteristics/#explosiveness-items-liquids","text":"As it suggests, it is the measure of explosiveness of an item or liquid. That is most useful in an ammunition application, where the most explosive item (not liquid) will deal the largest damage over the largest area. Blast Compound is the most explosive item as its name, \"Blast\", suggests. Oil is the most and only explosive liquid. If shot from a Wave and set on fire using Pyratite or Lava, it will burn and explode enemies that are around it. The same thing goes for Liquid Tanks and the such that are filled with it. Tip: Keep explosive material protected and separate from your Core or any exposed lines, unless it is needed. It is highly explosive and when triggered, will deal damage to surrounding blocks as well. Read the previous tip, too.","title":"Explosiveness [Items, Liquids]"},{"location":"characteristics/#heat-capacity-liquids","text":"Heat capacity is the measure of the effectiveness of a liquid in absorbing and dissipating heat. The higher the Heat Cap., the faster it will cool things like the Thorium Reactor down.","title":"Heat Capacity [Liquids]"},{"location":"characteristics/#temperature-liquids","text":"The temperature of a liquid.","title":"Temperature [Liquids]"},{"location":"characteristics/#viscosity-liquids","text":"Viscosity determines the speed at which a liquid flows. A higher viscosity means it flows slower, while a lower one means it flows much faster.","title":"Viscosity [Liquids]"},{"location":"characteristics/#status-effect-liquids","text":"The status effect of the liquid is passed on to an entity that is hit by it or is standing on it.","title":"Status Effect [Liquids]"},{"location":"characteristics/#melting","text":"Lava has the \"melting\" status effect, which means that enemies that are hit by it (from a Wave) or are standing on a puddle of it will start burning and melting.","title":"Melting"},{"location":"characteristics/#tarred","text":"With the \"tarred\" status effect, enemies will move slower and be more susceptible to fire.","title":"Tarred"},{"location":"characteristics/#freezing","text":"Enemies will move extremely slow as they freeze. This is useful for slowing down swift air enemies to make them easier to shoot.","title":"Freezing"},{"location":"faq/","text":"Frequently Asked Questions Where do I download the game? For PC, you can get the game on itch.io or Steam. For Android, you can get the game on Google Play. For iOS, you can buy it on the App Store. How do I play multiplayer with my friends/enemies? If you're on the same wifi or hotspot network, it should be easy. Start playing a game, open the pause menu and press \"host game\" button. This will make your game available to everyone in the same network. To join this game from another device, click \"join game\" from the main menu. If another player is hosting, the game should pop up in the list of servers. I can't find my friend's multiplayer game! If you are sure that you are on the same network, and you still can't find their game, considering using a wifi hotspot instead of a public network. Some public wifi networks simply do not allow server discovery. If you're using a wifi hotspot and you still can't find a friend's game, you could try connecting directly via IP. Instead of looking for the game, find the internal IP of the hosting device (look up how to find it for the specific device you're using), and have the other player type in that IP in the \"add server\" dialog. How can I play with someone across networks? You need to port forward and share your IP with the other players. See the guide here. Consider using a public server from #servers. How do I set up a dedicated server? / How do I port forward? See this guide. Can PC players play with iOS/Android players? Yes, Mindustry is fully cross-platform. As long as all the devices are running the same version of Mindustry, any device can connect to any other device. How do I import a map? First of all, you need to make sure that the map is compatible with your game version. If you're running Mindustry 4.0, you need a .msav map file. Once you download the file onto your device, open the Mindustry main menu. Select Editor -> Import Map (on the top of the screen). Find the directory that the map is in, select the file and press \"open\". Note that the file chooser will only display files with an .msav extension. If you can't find the file, make sure that you're looking in the right place and that the extension is correct. Note that Discord may sometimes remove the extension from files when downloading, so you'll need to open your file browser of choice and add the extension manually. How do I export a map file? Open your map in the editor. Open the menu (esc on PC, or the hamburger button on mobile), then press \"export\". Select a directory, type in a filename and press \"save\". I don't like Mindustry 4.0 for some reason, what do I do? Just download Mindustry Classic for the old experience. It's identical to build 3.5 40, albeit with some minor bugfixes. PC/Android APK: https://anuke.itch.io/mindustry-classic You can also find it by searching \"mindustry classic\" on the Google Play store. Does Mindustry run on a Raspberry Pi? While the game itself could theoretically support it, no, it does not support the Raspberry Pi. However, the dedicated server will run on a Pi as long as you have the right version of Java installed. Note that the 3.5/Classic dedicated server will not run on a Pi; only 4.0 and above is supported. What is an IP and how do I find out what mine is? In extremely simplified terms, an IP as a unique identifier of your computer on the internet. You can connect to someone's Mindustry server by their IP. The simplest way to find your IP is to google my ip. Where is the game's source code? On GitHub: https://github.com/Anuken/Mindustry Did Anuke make the game alone? For the most part, yes. Music, graphics and programming are done by me. Translations are made by contributors from the community. Some people also contribute to the game's code by submitting pull requests on GitHub. These people are marked with a Contributor role on Discord. There are many people who contribute to the wiki/documentation as well. How do I join the Google Play beta program? Open the Google Play page for Mindustry, scroll to the bottom of the page and tap 'join beta'. Beta builds can take some time to become available after tapping the button. Be patient. I do not control how fast this happens; it is handled automatically by Google. I can't connect to servers / My game is out of date. What do I do? If you're using Google Play on Android, wait for an update to become available. I always upload builds before the announcement is made, but Google may take hours to process it. Be patient. If you're on iOS, it's the same deal, except you may need to wait a bit longer. iOS builds take a longer time to release, and Apple takes 1-2 days to verify each release even after I upload it. If you're using the desktop version, just go on itch.io using the links at the top of this channel and download the game again. Updating should not reset progress. Are Anuke and Anuken different people? They are very well the same person. Anuke(n) uses \"Anuken\" when \"Anuke\" is taken. I usually use Anuken when Anuke is taken as a username. -Anuken Why are you charging for the game on Steam and iOS when it is available for free? The game is being charged for on Steam and iOS because it is one way of supporting Anuke, and it has features not available on the free versions, such as: A map, mod, and schematic browser Secure, seamless multiplayer using Steam Multiplayer (eliminates the need to port-forward) Publicly visible servers at startup Achievements Stat tracking Cloud saves and progress transfer using Steam Steam community On the App Store, distributing the game there costs a lot, as a developer will need a Mac, and a $100/year developer license to do so. Such expenses are covered by charging for the game on there. How can I contribute to the game? The easiest way is to give constructive feedback and discussion (preferably about the game) in our Discord Server. Report bugs that you find on the GitHub repository. Please remember to use the templates properly , as doing so will make your issue more organized and follow a common pattern, making Anuke's job easier. If you know how to program in Java, feel free to help Anuke out and fix said bugs, then open a PR. Donations to Anuke are open on the Itch.io page if you would like to give a monetary contribution. You can also buy the game on Steam. If you are fluent in a language that Mindustry doesn't support yet, or if you want to contribute to the ones already there, stop by the #translations channel, and ask about it. You can contribute to the current bundles and open a PR in the game's repo. If you want to contribute to this wiki, please contact Anuke or Luxray5474. They'll let you know what you should do and how we roll.","title":"Frequently Asked Questions"},{"location":"faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"faq/#where-do-i-download-the-game","text":"For PC, you can get the game on itch.io or Steam. For Android, you can get the game on Google Play. For iOS, you can buy it on the App Store.","title":"Where do I download the game?"},{"location":"faq/#how-do-i-play-multiplayer-with-my-friendsenemies","text":"If you're on the same wifi or hotspot network, it should be easy. Start playing a game, open the pause menu and press \"host game\" button. This will make your game available to everyone in the same network. To join this game from another device, click \"join game\" from the main menu. If another player is hosting, the game should pop up in the list of servers.","title":"How do I play multiplayer with my friends/enemies?"},{"location":"faq/#i-cant-find-my-friends-multiplayer-game","text":"If you are sure that you are on the same network, and you still can't find their game, considering using a wifi hotspot instead of a public network. Some public wifi networks simply do not allow server discovery. If you're using a wifi hotspot and you still can't find a friend's game, you could try connecting directly via IP. Instead of looking for the game, find the internal IP of the hosting device (look up how to find it for the specific device you're using), and have the other player type in that IP in the \"add server\" dialog.","title":"I can't find my friend's multiplayer game!"},{"location":"faq/#how-can-i-play-with-someone-across-networks","text":"You need to port forward and share your IP with the other players. See the guide here. Consider using a public server from #servers.","title":"How can I play with someone across networks?"},{"location":"faq/#how-do-i-set-up-a-dedicated-server-how-do-i-port-forward","text":"See this guide.","title":"How do I set up a dedicated server? / How do I port forward?"},{"location":"faq/#can-pc-players-play-with-iosandroid-players","text":"Yes, Mindustry is fully cross-platform. As long as all the devices are running the same version of Mindustry, any device can connect to any other device.","title":"Can PC players play with iOS/Android players?"},{"location":"faq/#how-do-i-import-a-map","text":"First of all, you need to make sure that the map is compatible with your game version. If you're running Mindustry 4.0, you need a .msav map file. Once you download the file onto your device, open the Mindustry main menu. Select Editor -> Import Map (on the top of the screen). Find the directory that the map is in, select the file and press \"open\". Note that the file chooser will only display files with an .msav extension. If you can't find the file, make sure that you're looking in the right place and that the extension is correct. Note that Discord may sometimes remove the extension from files when downloading, so you'll need to open your file browser of choice and add the extension manually.","title":"How do I import a map?"},{"location":"faq/#how-do-i-export-a-map-file","text":"Open your map in the editor. Open the menu (esc on PC, or the hamburger button on mobile), then press \"export\". Select a directory, type in a filename and press \"save\".","title":"How do I export a map file?"},{"location":"faq/#i-dont-like-mindustry-40-for-some-reason-what-do-i-do","text":"Just download Mindustry Classic for the old experience. It's identical to build 3.5 40, albeit with some minor bugfixes. PC/Android APK: https://anuke.itch.io/mindustry-classic You can also find it by searching \"mindustry classic\" on the Google Play store.","title":"I don't like Mindustry 4.0 for some reason, what do I do?"},{"location":"faq/#does-mindustry-run-on-a-raspberry-pi","text":"While the game itself could theoretically support it, no, it does not support the Raspberry Pi. However, the dedicated server will run on a Pi as long as you have the right version of Java installed. Note that the 3.5/Classic dedicated server will not run on a Pi; only 4.0 and above is supported.","title":"Does Mindustry run on a Raspberry Pi?"},{"location":"faq/#what-is-an-ip-and-how-do-i-find-out-what-mine-is","text":"In extremely simplified terms, an IP as a unique identifier of your computer on the internet. You can connect to someone's Mindustry server by their IP. The simplest way to find your IP is to google my ip.","title":"What is an IP and how do I find out what mine is?"},{"location":"faq/#where-is-the-games-source-code","text":"On GitHub: https://github.com/Anuken/Mindustry","title":"Where is the game's source code?"},{"location":"faq/#did-anuke-make-the-game-alone","text":"For the most part, yes. Music, graphics and programming are done by me. Translations are made by contributors from the community. Some people also contribute to the game's code by submitting pull requests on GitHub. These people are marked with a Contributor role on Discord. There are many people who contribute to the wiki/documentation as well.","title":"Did Anuke make the game alone?"},{"location":"faq/#how-do-i-join-the-google-play-beta-program","text":"Open the Google Play page for Mindustry, scroll to the bottom of the page and tap 'join beta'. Beta builds can take some time to become available after tapping the button. Be patient. I do not control how fast this happens; it is handled automatically by Google.","title":"How do I join the Google Play beta program?"},{"location":"faq/#i-cant-connect-to-servers-my-game-is-out-of-date-what-do-i-do","text":"If you're using Google Play on Android, wait for an update to become available. I always upload builds before the announcement is made, but Google may take hours to process it. Be patient. If you're on iOS, it's the same deal, except you may need to wait a bit longer. iOS builds take a longer time to release, and Apple takes 1-2 days to verify each release even after I upload it. If you're using the desktop version, just go on itch.io using the links at the top of this channel and download the game again. Updating should not reset progress.","title":"I can't connect to servers / My game is out of date. What do I do?"},{"location":"faq/#are-anuke-and-anuken-different-people","text":"They are very well the same person. Anuke(n) uses \"Anuken\" when \"Anuke\" is taken. I usually use Anuken when Anuke is taken as a username. -Anuken","title":"Are Anuke and Anuken different people?"},{"location":"faq/#why-are-you-charging-for-the-game-on-steam-and-ios-when-it-is-available-for-free","text":"The game is being charged for on Steam and iOS because it is one way of supporting Anuke, and it has features not available on the free versions, such as: A map, mod, and schematic browser Secure, seamless multiplayer using Steam Multiplayer (eliminates the need to port-forward) Publicly visible servers at startup Achievements Stat tracking Cloud saves and progress transfer using Steam Steam community On the App Store, distributing the game there costs a lot, as a developer will need a Mac, and a $100/year developer license to do so. Such expenses are covered by charging for the game on there.","title":"Why are you charging for the game on Steam and iOS when it is available for free?"},{"location":"faq/#how-can-i-contribute-to-the-game","text":"The easiest way is to give constructive feedback and discussion (preferably about the game) in our Discord Server. Report bugs that you find on the GitHub repository. Please remember to use the templates properly , as doing so will make your issue more organized and follow a common pattern, making Anuke's job easier. If you know how to program in Java, feel free to help Anuke out and fix said bugs, then open a PR. Donations to Anuke are open on the Itch.io page if you would like to give a monetary contribution. You can also buy the game on Steam. If you are fluent in a language that Mindustry doesn't support yet, or if you want to contribute to the ones already there, stop by the #translations channel, and ask about it. You can contribute to the current bundles and open a PR in the game's repo. If you want to contribute to this wiki, please contact Anuke or Luxray5474. They'll let you know what you should do and how we roll.","title":"How can I contribute to the game?"},{"location":"modding/","text":"Modding Mindustry mods are simply directories of assests. There are many ways to use the modding API, depending on exactly what you want to do, and how far you're willing to go to do it. You could just resprite existing game content, you can create new game content with the simpler Json API (which is the main focus of this documentation), you can add custom sounds (or reuse existing ones). It's possible to add maps to campaign mode, and add scripts to program special behavior into your mod, like custom effects. Sharing your mod is as simple as giving someone your project directory; mods are also cross platfrom to any platform that supports them. Realistically speaking you'll want to use GitHub , you should also checkout the Example Mod repository on GitHub: https://github.com/Anuken/ExampleMod To make mods all you really need is any computer with a text editor. Directory Structure Your project directory should look something like this: project \u251c\u2500\u2500 mod.json \u251c\u2500\u2500 content \u2502 \u251c\u2500\u2500 items \u2502 \u251c\u2500\u2500 blocks \u2502 \u251c\u2500\u2500 mechs \u2502 \u251c\u2500\u2500 liquids \u2502 \u251c\u2500\u2500 units \u2502 \u2514\u2500\u2500 zones \u251c\u2500\u2500 maps \u251c\u2500\u2500 bundles \u251c\u2500\u2500 sounds \u251c\u2500\u2500 schematics \u251c\u2500\u2500 scripts \u251c\u2500\u2500 sprites-override \u2514\u2500\u2500 sprites mod.json (required) metadata file for your mod, content/* directories for game Content , maps/ directory for Zone maps, bundles/ directory for Bundles , sounds/ directory for Sound files, schematics/ directory for Schematic files, scripts/ directory for Scripts , sprites-override/ Sprites directory for overriding ingame content, sprites/ Sprites directory for your content, Every platform has a different user application data directory, and this is where your mods should be placed: Linux: ~/.local/share/Mindustry/mods/ Steam: steam/steamapps/common/Mindustry/mods/ Windows: %appdata%/Mindustry/mods/ Apple: ~/Library/Application Support/Mindustry/mods/ Note that your filenames should be lowercased and hyphen separated: correct: my-custom-block.json incorrect: My Custom Block.json Hjson Mindustry uses Hjson , which for anyone who knows Json, is simply a superset of the very popular serialization language known as Json . \u2013 This means that any valid Json will work, but you get extra useful stuff: # single line comment // single line comment /* multiline comment */ key1: single line string key2: ''' multiline string ''' key3: [ value 1 value 2 value 3 ] key4: { key1: string key2: 0 } If you don't know any of those words. \u2013 A serialization language, is simply a language which encodes information for a program, and encode means to translate informantion from one form to another, and in this case, to translate text into Java data structures. mod.json At the root of your project directory, you must have a mod.json which defines the basic metadata for your project. This file can also be (optionally) named mod.hjson to potentially help your text editor pick better syntax highlighting. name: Mod Name displayName: Mod [red]Name[] author: Yourself description: This is a useless description. version: \"1.0\" minGameVersion: \"100.3\" dependencies: [ ] name will be used to reference to your mod, so name it carefully; displayName this will be used as a display name for the UI, which you can use to add formatting to said name; description of the mod will be rendered in the ingame mod manager, so keep it short and to the point; dependencies is optional, if you want to know more about that, go to the dependencies section; minGameVersion is the minimum build version of the game. Content At the root of your project directory you can have a content/ directory, and this is where all the Json/Hjson data goes. Inside of content/ you have subdirectories for the various kinds of content, these are the current common ones: content/items/ for items , like copper and surge-alloy ; content/blocks/ for blocks , like turrets and floors; content/mechs/ for mechs , like tau and glaive ; content/liquids/ for liquids , like water and slag ; content/units/ for flying or ground units , like reaper and dagger ; content/zones/ for zones , configuration of campaign maps. Note that each one of these subdirectories needs a specific content type. The filenames of these files is important, because the stem name of your path (filename without the extension) is used to reference it. Furthermore the files within these content/<content-type>/* directories may be arbitrarly nested into other sub-directories of any name, to help you organize them further, for example: content/items/metals/iron.hjson , which would respectively create an item named iron . The content of these files will tend to look something like this: type: TypeOfThing name: Name Of Thing description: Description of thing. # ... more fields here ... field type notes type String Content type of this object. name String Displayed name of content. description String Displayed description of content. Other fields included will be the fields of the type itself. Types Types have numerous fields, but the important one is type ; this is a special field used by the content parser, that changes which type your object is. A Router type can't be a Turret type , as they're just completely different. Types extend each other, so if MissileBulletType extends BasicBulletType , you'll have access to all the fields of BasicBulletType inside of MissileBulletType like damage , lifetime and speed . Fields are case sensitive: hitSize =/= hitsize . What you can expect a field to do is up to the specific type, some types do absolutely nothing with their fields, and work mostly as a base types will extend from. One such type is Block . type can be refer to the actual type field of the object. A type may also refer to other things like float is a type so it means you can type 0.3 in a field. Here you can see, the type of the top level object is Revenant , but the type of the bullet is BulletType so you can use MissileBulletType , because MissileBulletType extends BulletType . type: Revenant weapon: { bullet: { type: MissileBulletType damage: 9000 } } Tech Tree Much like type there exist another magical field known as research which can go at the root of any block object to put it in the techtree. research: duo This would put your block after duo in the techtree, and to put it after your own mods block you would write your <block-name> , a mod name prefix is only required if you're using the content from another mod. Research cost will be 40 + round(requirements ^ 1.25) * 6 rounded down to the nearest 10 , where requirements is the build cost of your block. (in otherwords you can't set requirements and research cost individually) Sprites All you need to make sprites, is an image editor that supports transparency (aka: not paint). Block sprites should be 32 * size , so a 2x2 block would require a 64x64 image. Images must be .png files with 32 bit depth. Sprites can simply be dropped in the sprites/ subdirectory. The content parser will look through it recursively, so you can organize them how ever you feel. Content is going to look for sprites relative to it's own name. content/blocks/my-hail.json has the name my-hail and similarly sprites/my-hail.png has the name my-hail , so it'll be used by this content. Content may look for multiple sprites. my-hail could be a turret, and it could look for the suffix <name>-heat and what this means is it'll look for my-hail-heat . You can find all the vanilla sprites here: https://github.com/Anuken/Mindustry/tree/master/core/assets-raw/sprites Another thing to know about sprites is that some of them are modified by the game. Turrets specifically have a black border added to them, so you must account for that while making your sprites, leaving transparent space around turrets for example: Ripple To override ingame content sprites, you can simply put them in sprites-override/ . Sound Custom sounds can be added through the modding system by dropping them in the sounds/ subdirectory. It doesn't matter where you put them. Two formats are needed: .ogg required for Desktop/Android .mp3 required for iOS Just like any other assets, you reference them by the stem of your filenames, so pewpew.ogg and pewpew.mp3 can be referenced with pewpew from a field of type Sound . Here's a list of built-in sounds: artillery back bang beam bigshot boom break build buttonClick click conveyor corexplode door drill empty explosionbig explosion fire flame2 flame laserbig laser machine message missile pew place press release respawning respawn shootBig shoot shootSnap shotgun spark splash spray thruster unlock wave windowHide Dependencies You can add dependencies to your mod by simple adding other mods name in your mod.json : dependencies: [ other-mod-name not-a-mod ] The name of dependencies are lower-cased and spaces are replaced with - hyphens, for example Other MOD NamE becomes other-mod-name . To reference the other mods assets, you must prefix the asset with the other mods name: other-mod-name-not-copper would reference not-copper in other-mod-name other-mod-name-angry-dagger would reference angry-dagger in other-mod-name not-a-mod-angry-dagger would reference angry-dagger in not-a-mod Bundles An optional addition to your mod is called bundles. The main use of bundles are give translations of your content, but there's no reason you couldn't use them in English. These are plaintext files which go in the bundles/ subdirectory, and they should be named something like bundle_ru.properties (for Russian). The contents of this file is very simple: block.example-mod-silver-wall.name = \u0421\u0435\u0440\u0435\u0431\u0440\u044f\u043d\u0430\u044f \u0421\u0442\u0435\u043d\u0430 block.example-mod-silver-wall.description = \u0421\u0442\u0435\u043d\u0430 \u0438\u0437 \u0441\u0435\u0440\u0435\u0431\u0440\u0430. If you've read the first few sections of this guide, you'll spot it right away: <content type>.<mod name>-<content name>.name <content type>.<mod name>-<content name>.description Notes: mod/content names are lowercased and hyphen separated. List of content type: item block mech bullet liquid status unit weather effect zone loadout typeid List of filenames relative to languages: English bundle.properties Czech bundle_cs.properties German bundle_de.properties Spanish bundle_es.properties Estonian bundle_et.properties Basque bundle_eu.properties French BE bundle_fr_BE.properties French bundle_fr.properties Bergabung bundle_in_ID.properties Italian bundle_it.properties Japanese bundle_ja.properties Korean bundle_ko.properties Dutch BE bundle_nl_BE.properties Dutch bundle_nl.properties Polish bundle_pl.properties Portuguese BR bundle_pt_BR.properties Portuguese bundle_pt.properties Russian bundle_ru.properties Danish bundle_sv.properties Turkman bundle_tk.properties Turkish bundle_tr.properties Ukrainian bundle_uk_UA.properties Chinese CN bundle_zh_CN.properties Chinese TW bundle_zh_TW.properties Markup The text renderer uses a simple makeup language for coloring text. [name] sets the color by name, there's a few built-in colors ; [#rrggbb] / [#rrggbbaa] sets the color by hex value, with each value being anything from 00 to ff : rr is the red value, gg is the green value, bb is the blue value, aa is the alpha value; [] sets the color back to the previous color; [[ escapes the left bracket, so you can write [[red] to write and it'll render as [red] . Notes: erros/unknown colors will be silently ignored. Example: [red]red [#ff0000]full-red [#ff000066]half-red [#ff000033]half-half-red [#00ff00]green []half-half-red Built-in Colors [clear]clear [black]black [white]white [lightgray]lightgray [gray]gray [darkgray]darkgray [blue]blue [navy]navy [royal]royal [slate]slate [sky]sky [cyan]cyan [teal]teal [green]green [acid]acid [lime]lime [forest]forest [olive]olive [yellow]yellow [gold]gold [goldenrod]goldenrod [orange]orange [brown]brown [tan]tan [brick]brick [red]red [scarlet]scarlet [coral]coral [salmon]salmon [pink]pink [magenta]magenta [purple]purple [violet]violet [maroon]maroon Schematic Fields that require the type Schematic can either take a built-in loadout (see the Zone section) a base64 string, or the stem name of a .msch file in the schematics/ subdirectory. As of now, the only purpose of schematics is to give a zone a loadout. Scripts Scripting in Mindustry is done with the Rhino JavaScript runtime. Scripts may be added to your mod by putting them in scripts/ . Using the built-in extendContent function, you can extend existing Java types from JS, using allowed classes which are injected into your namespace. For example: scripts/silo.js // create a simple shockwave effect const siloLaunchEffect = newEffect(20, e => { // color goes from white to light gray Draw.color(Color.white, Color.lightGray, e.fin()); // line thickness goes from 3 to 0 Lines.stroke(e.fout() * 3); // draw a circle whose radius goes from 0 to 100 Lines.circle(e.x, e.y, e.fin() * 100); }); // create the block type const silo = extendContent(Block, \"scatter-silo\", { // override the method to build configuration buildConfiguration(tile, table) { table.addImageButton( Icon.arrowUpSmall, Styles.clearTransi, // configure the tile to signal that it has been // pressed (this sync on client to server) run(() => tile.configure(0)) ).size(50); }, // override configure event configured(tile, value) { // make sure this silo has the items it needs to fire if (tile.entity.cons.valid()) { // make this effect occur at the tile location Effects.effect(siloLaunchEffect, tile); // create 10 bullets at this tile's location with // random rotation and velocity/lifetime for (var i = 0; i < 10; i++) { Calls.createBullet( Bullets.flakExplosive, tile.getTeam(), tile.drawx(), tile.drawy(), Mathf.random(360), Mathf.random(0.5, 1.0), Mathf.random(0.2, 1.0) ); } // triggering consumption makes it use up the // items it requires tile.entity.cons.trigger(); } } }); content/blocks/scatter-silo.hjson localizedName: \"Scatter Silo\" description: \"A player-activatable block that scatters bullets everywhere upon use.\" category: turret size: 2 update: true solid: true hasItems: true configurable: true requirements: [ \"graphite/75\" \"titanium/30\" ] consumes: { items: { items: [ \"scrap/10\" ] } } More examples: entity-lib GitHub Once you have a mod of some kind, you'll want to actually share it, and you may even want to work with other people on it, and to do that you can use GitHub . If you don't know what Git (or GitHub) is at all, then you should look into GitHub Desktop , otherwise simply use your favorite command line tool or text editor plugin. All you need understand is how to open repositories on GitHub, stage and commit changes in your local repository, and push changes to the GitHub repository. Once your project is on GitHub, there are three ways to share it: with the endpoint, for example Anuken/ExampleMod , which could then be typed in the ingame GitHub interface, and that would download it; with the zip file, for example https://github.com/Anuken/ExampleMod/archive/master.zip , which would download the repository as a zip file, and put in mod directory (unzipping is not required); add the typic/tags mindustry-mod on your repository, which should cause the #mods Discord bot to pick it up and render it in it's listh. FAQ time in game is calculated through ticks ; ticks sometimes called frames , are assumed to be 60/1 second; tilesize is 8 units internally; to calculate range out of lifetime and speed you can do lifetime * speed = range ; Abstract what is abstract ? all you need to know about abstract types, is this is a Java specific term, which means you cannot instantiate/initialize this specific type by itself. If you do so you'll probably get an \"initialization exception\" of some kind; what is a NullPointerException ? This is an error message that indicates a field is null and shouldn't be null, meaning one of the required fields may be missing; bleeding-edge what is bleeding-edge ? This is the developer version of Mindustry, specifically it's refering to the Github master branch. Changes on bleeding-edge usually make it into Mindustry in the next release. Change Log This is a log of changes done on the Mindustry Master branch that affected the modding API. The sections are ordered by date commited, and provide a description of what was changed, with a link to the diff on Github. 2020 Mar 5 [ commit Tech tree balance ] updated research cost formula Feb 11 [ commit improved battery brightness display ] added <name>-top region for battery; Jan 24 [ commit fixed #1436 / fixed crawlers not exploding ] added instantDisappear to BulletType ; Jan 23 [ commit implemented #1093 ] added attribute to ThermalGenerator ; Jan 22 [ commit added default ore flags for modded ores ] added oreDefault , oreThreshold and oreScale to Floor ; Jan 19 [ commit cleanup of scripts ] added killShooter attribute for BulletType ; Jan 14 [ commit visual tweaks ] added -spinner region to Separator ; removed spinnerRadius , spinnerLength , spinnerThickness , color from Separator ; Jan 08 [ commit make rebuildable a block attribute (#1338) ] added rebuildable to Block ; Jan 07 [ commit cleanup ] added drawCell , drawItems and drawLight to Mech ; Jan 04 [ commit merge remote-tracking branch 'origin/master' ] added targetDistance to Weapon ; Jan 03 [ commit use findAll to iterate through mod content ] content/ support for organizing .hjson files into directories; 2019 Dec 12 [ commit add liquid void block ] added LiquidVoid block; Dec 09 [ commit Removed unnecessary unit types ] changed unit types names: Draug \u2192 MinerDrone ; Spirit \u2192 RepairDrone ; Phantom \u2192 BuilderDrone ; [ Dagger Crawler Titan Fortress Eruptor ] \u2192 GroundUnit ; [ Wraith Ghoul ] \u2192 FlyingUnit ; Revenant \u2192 HoverUnit ; Dec 08 [ commit Merge branches master and rhino-js-suffering ] scripts/ sub-directory and Rhino JS runtime was added; displayName can now be used as field name in mod.json Dec 04 [ commit Added experimental server block syncing ] sync field for Block type was added; Nov 26 [ commit Texture overrides / Potential mod texture binding optimizations ] sprites-override/ subdirectory can now be used to override existing ingame sprites; Nov 22 [ commit Switched to hjson extension ] .hjson can now be used as a file extension; Nov 22 [ commit Added optional mod minimum game version ] minGameVersion can now be used within mod.json ; Nov 20 [ commit Better mod parsing ] liquid/amount can now be used as a string for LiquidStack ; item/amount can now be used as a string for ItemStack ; mod.json now supports hjson; World Block Extends BlockStorage Block is the base type of all blocks in the game. All blocks have at least one sprite, which is picked relative to the blocks name. Fields for all objects that are blocks. field type default notes update boolean whether this block has a tile entity that updates destructible boolean whether this block has health and can be destroyed unloadable boolean true whether unloaders work on this block solid boolean whether this is solid solidifes boolean whether this block CAN be solid. rotate boolean whether this is rotateable breakable boolean whether you can break this with rightclick rebuildable boolean true whether to add this block to brokenblocks or not (like ShockMine or NuclearReactor ) placeableOn boolean true whether this floor can be placed on. insulated boolean false whether this block has insulating properties. health int -1 tile entity health baseExplosiveness float 0 base block explosiveness floating boolean false whether this block can be placed on edges of liquids. size int 1 multiblock size; 1 makes the block 1x1, 2 makes the block 2x2, and so on. expanded boolean false Whether to draw this block in the expanded draw range. timers int 0 Max of timers used. cacheLayer CacheLayer normal Cache layer. Only used for 'cached' rendering. fillesTile true Special flag; if false, floor will be drawn under this block even if it is cached. alwaysReplace boolean false whether this block can be replaced in all cases group BlockGroup none Unless canReplace is overriden, blocks in the same group can replace each other. priority TargetPriority base Targeting priority of this block, as seen by enemies. configurable boolean Whether the block can be tapped and selected to configure. consumesTap boolean Whether this block consumes touchDown events when tapped. drawLiquidLight boolean true Whether to draw the glow of the liquid for this block, if it has one. posConfig boolean Whether the config is positional and needs to be shifted. sync boolean Whether to periodically sync this block across the network. targetable boolean true Whether units target this block. canOverdrive boolean true Whether the overdrive core has any effect on this block. outlineColor Color 404049 Outlined icon color. outlineIcon boolean false Whether the icon region has an outline added. hasShadow boolean true Whether this block has a shadow under it. breakSound Sound boom Sounds made when this block breaks. activeSound Sound none The sound that this block makes while active. One sound loop. Do not overuse. activeSoundVolume float 0.5 Active sound base volume. idleSound Sound none The sound that this block makes while idle. Uses one sound loop for all blocks. idleSoundVolume float 0.5 Idle sound base volume. requirements [ ItemStack ] Cost of constructing and researching this block. category Category distribution Category in place menu. buildCost float Cost of building this block; do not modify directly! buildVisibility BuildVisibility hidden Whether this block is visible and can currently be built. buildCostMultiplier float 1 Multiplier for speed of building this block. instantTransfer boolean false Whether this block has instant transfer. alwaysUnlocked boolean false layer Layer null Layer to draw extra stuff on. layer2 Layer null Extra layer to draw extra stuff on. Sprites: <name> the main sprite for the block. Consumers This type is commonly used in block type with it's field consumes , it's a type that allows your block to consume something, and how this field works is up to the specific type extension you're using. field type notes item String shorthand for items items ConsumeItems consume a number of different items liquid ConsumeLiquid consume a single liquid power float or ConsumePower consume or buffer power powerBuffered float amount of power buffered Notes: you shouldn't have power and powerBuffered . For example with ConsumeItems and ConsumeLiquid : items: { items: [ copper/10 surge-alloy/5 ] booster: true optional: true } liquid: { water/1.0 } Consume Abstract type which defines a type of resource that a block can consume. field type default notes optional boolean consumer will not influence consumer validity. booster boolean consumer will be displayed as a boost input. update boolean true ConsumeItems Extends Consume Type to consume ItemStacks. field type items [ ItemStack ] ConsumeLiquid Extends Consume Type to consume a LiquidStack. field type default notes liquid String the name of liquid type consumed amount float amount used per frame timePeriod float 60 how much time is taken to use this liquid, example: a normal ConsumeLiquid with 10/s and a 10 second timePeriod would display as 100 seconds , but without a time override it would display as 10 liquid/second . This is used for generic crafters. ConsumePower Extends Consume Type to consume or buffer power. field type notes usage float The maximum amount of power which can be processed per tick. This might influence efficiency or load a buffer capacity float The maximum power capacity in power units. buffered boolean True if the module can store power. BlockStorage Abstract type that extends Content Type for blocks which may store a buffer of items or liquid. field type default hasItems boolean hasLiquids boolean hasPower boolean outputsLiquid boolean false consumesPower boolean true outputsPower boolean false itemCapacity int 10 liquidCapacity float 10 item float 10 liquidPressure float 1 consumes Consumers Environment Environmental blocks are blocks that must be placed from the editor, and they're the ones that will generally dictate how the game can or will be played. These blocks wont appear on a map unless you've built a map to support them. Floor Extends Block Type used for floors themselves or extended to make ores and other things. field type default notes variants int 3 number of different variant regions to use. edge String stone edge fallback, used mainly for ores. speedMultiplier float 1 multiplies unit velocity by this when walked on. dragMultiplier float 0 multiplies unit drag by this when walked on. damageTaken float 0 damage taken per tick on this tile. drownTime float 0 how many ticks it takes to drown on this. walkEffect Effect ripple effect when walking on this floor . drownUpdateEffect Effect bubble effect displayed when drowning on this floor . status StatusEffect none status effect applied when walking on. statusDuration float 60 intensity of applied status effect. liquidDrop Liquid liquids that drop from this block, used for pumps. itemDrop Item item that drops from this block, used for drills. isLiquid boolean whether this block can be drowned in. playerUnmineable boolean false block cannot be mined by players if true. blendGroup Block this group of blocks that this block does not draw edges on. updateEffect Effect none effect displayed when randomly updated. attributes Attributes array of affinities to certain things. oreDefault boolean false whether this ore generates in maps by default. oreScale float 24 ore generation param, for example thorium is 25.38 , copper is 23.47 . oreThreshold float 0.828 ore generation param, for example thorium is 0.882 , copper is 0.81 . Notes: this type requires a sprite to be visible from the map editor. Sprites: <name><1..> for variant sprites of the floor; <name>-edge optional edge sprite. OverlayFloor Extends Floor For example: tendrils DoubleOverlayFloor Extends OverlayFloor For example: pebbles OreBlock Extends OverlayFloor field default variants 3 Rock Extends Block field type variants int Defaults: field default breakable true alwaysReplace true StaticWall Extends Rock Defaults: field default breakable false alwaysReplace false solid true variants 2 Sprites: <name>-large.png which is a 2x2 variant of the block. StaticTree Extends StaticWall For example: spore-pine snow-pine pine shrubs TreeBlock Extends Block Defaults: field default solid true layer power expanded true Crafting GenericCrafter Extends Block field type default notes outputItem ItemStack one item stack outputLiquid LiquidStack one liquid stack craftTime float 80 craftEffect Effect none updateEffect Effect none updateEffectChance float 0.04 Defaults: field default update true solid true hasItems true health 60 idleSound machine idleSoundVolume 0.03 sync true GenericSmelter Extends GenericCrafter A GenericCrafter with a new glowing region drawn on top. field type default flameColor Color ffc999 Sprite suffix: <name>-top Separator Extends Block Separator takes liquid as an input, and will produce items from it's stack randomly, using the amount of items in the stack as probability. Separator can't accept items as input, as it will output all the items you put in it, regardless of what you put in results . field type default notes results [ ItemStack ] [required] craftTime float spinnerSpeed float 3 color Color 858585 Defaults: field default update true solid true hasItems true hasLiquids true Sprite suffixes: <name>-liquid <name>-spinner Sandbox PowerVoid Extends PowerBlock Deafults: field default consumesPower PowerSource Extends PowerNode Defaults: field default maxNodes 100 outputsPower true consumesPower false ItemSource Extends Block Defaults: field default hasItems true update true solid true group transportation configurable true ItemVoid Extends Block Defaults: field default update true solid true LiquidSource Extends Block Defaults: field default hasLiquids true update true solid true liquidCapacity 100 configurable true outputsLiquid true LiquidVoid Extends Block Defaults: field default hasLiquids true solid true update true Logic MessageBlock Extends Block field type default maxTextLength int 220 maxNewlines int 24 Defaults: field default solid true configurable true destructible true Defense Wall Extends Block field type default variants int 0 Defaults: field default solid true destructible true group walls buildCostMultiplier 5 DeflectorWall Extends Wall \u2013 Wall that deflects low damage bullets. field type default hitTime float 10 maxDamageDeflect float 10 SurgeWall Extends Wall \u2013 Wall that creates lightning when shot. field type default lightningChance float 0.05 lightningDamage float 15 lightningLength int 17 Door Extends Wall field type default openfx Effect dooropen closefx Effect doorclose Defaults: field default solid false solidfies true consumesTap true Sprites: <name>-open MendProjector Extends Block field type default color Color 84f491 phase Color ffd59e reload float 250 range float 60 healPercent float 12 phaseBoost float 12 phaseRangeBoost float 50 useTime float 400 Sprites: <name>-top OverdriveProjector Extends Block field type default color Color feb380 phase Color ffd59e reload float 60 range float 80 speedBoost float 1.5 speedBoostPhase float 0.75 useTime float 400 phaseRangeBoost float 20 Defaults: field default solid true update true hasPower true hasItems true canOverdrive false Sprites: <name>-top ForceProjector Extends Block field type default phaseUseTime float 350 phaseRadiusBoost float 80 radius float 101.7 breakage float 550 cooldownNormal float 1.75 cooldownLiquid float 1.5 cooldownBrokenBase float 0.35 basePowerDraw float 0.2 Defaults: field default update true solid true hasPower true canOverdrive false hasLiquids true hasItems true consumes cold-liquid Sprites: <name>-top cold-liquid temperature less then 0.5 flammability less then 0.1 booster true optional true update false ShockMine Extends Block field type default cooldown float 80 tileDamage float 5 damage float 13 length int 10 tendrils int 6 Defaults: field default update false destructible true solid false targetable false layer overlay rebuildable false Turrets This section is for turret types. All turrets shoot BulletType , and this means LiquidTurret can shoot MissileBulletType and ItemTurret can shoot LiquidBulletType . Turret Abstract type which extends Block The purpose of a turret type is to be a Block that shoots bullets. Turret is the base type for all turrets, it's abstract meaning it shouldn't be used directly, but everything which extends it will get it's fields. field type default notes heatColor Color turretHeat The color of the -heat sprite. shootEffect Effect none An effect fired on tile in the direction the turret is aiming when it shoots. smokeEffect Effect none An effect fired on tile in the direction the turret is aiming when it shoots. ammoUseEffect Effect none An effect fired on the tile, when ammo is consumed. shootSound Sound shoot A sound created from the tile when a bullet is fired. ammoPerShot int 1 The amount of ammo used per shot. ammoEjectBack float 1 The eject angle of shells in radians. range float 50 The range at which the turret can target enemies. Range is in tilesize so 8 is 1 tile. reload float 10 The amount of ticks it takes to reload. inaccuracy float 0 The degrees of inaccuracy. shots int 1 The numbers of bullets fired at once. spread float 4 The angular spread of multiple bullets when shot. recoil float 1 The recoil of the turret when fired. restitution float 0.02 The restitution from recoil after shooting. (time taken to recenter) cooldown float 0.02 The amount of time it takes for the -heat sprite to become transparent. rotatespeed float 5 The degrees per tick at which the turret can rotate. shootCone float 8 The angle used to determine whether the turret should be shooting. shootShake float 0 The amount of camera shake. xRand float 0 The random x axis multiplier, to make bullets appear to come out of multiple places. Used in Swarmer for example. targetAir boolean true Whether this target can target air units. targetGround boolean true Whether this turret can target ground units or blocks. Defaults: field default priority turret update true solid true layer turret group turrets outlineIcon true Sprites: <name> the turret sprite, <name>-heat the heat map. Sprites-Override: block-<1..> global turret base override, where the number is the turrets size. Can be used to override existing turret bases, as well as adding larger ones. CooledTurret Extends Turret \u2013 This is a base type that turrets which use Liquid to cool themselves extend from. field type default notes coolantMultiplier float 5 How much reload is lowered by for each unit of liquid of heat capacity. coolEffect Effect shoot Notes: doesn't take flammable fluid doesn't take hot fluid ItemTurret Extends CooledTurret This type is a turret that uses items as ammo. The key to the ammo field should be the name of an Item , while the value may be any Built-in Bullets or a BulletType itself. type: ItemTurret ammo: { copper: standardCopper metaglass: { type: MissileBulletType damage: 2 } surge-alloy: { type: LiquidBulletType damage: 3 } } Here we're using copper to shoot standardCopper (built-in bullet) and metalglass to shoot a custom bullet of type MissileBulletType . field type default notes maxAmmo int 30 ammo { String: BulletType } String is the name of an Item , which will be used to select the type of bullet which will be shot. Defaults: field default hasItems true LiquidTurret Extends Turret This type is just a turret that uses liquid as ammo. The key to ammo must be the name of a Liquid , while the value may either be the name of any Built-in Bullets or a BulletType itself. For example you could do something like this: type: LiquidTurret ammo: { water: { type: MissileBulletType damage: 9000 } slag: { type: LiquidBulletType damage: 0 } } fields type notes ammo { String: BulletType } object with Liquid names to bullet types. Defaults: fields default hasLiquids true activeSound spray DoubleTurret Extends ItemTurret ItemTurret that shoots from two side-by-side barrels. field type default shotWidth float 2 Default: field default shots 2 ArtilleryTurret Extends ItemTurret \u2013 Artillery turrets have special shooting calculations done to hit targets. field default targetAir false BurstTurret Extends ItemTurret \u2013 Turrets capable of bursts of specially spaced bullets, separated by long reload times. field type default burstSpacing float 5 PowerTurret Extends CooledTurret \u2013 Turret which uses power has ammo to shoot. field type default notes shootType BulletType [required] powerUse float 1 Defaults: field default hasPower true ChargeTurret Extends PowerTurret field type default chargeTime float 30 chargeEffects int 5 chargeMaxDelay float 10 chargeEffect Effect none chargeBeginEffect Effect none LaserTurret Extends PowerTurret field type default notes firingMoveFract float 0.25 rotatespeed fraction when turret is shooting shootDuration float 100 Defaults: field default canOverdrive false coolantMultiplier 1 Doesn't update shoot if: liquid temperature greater or equal to 0.5 liquid flammability greater then 0.1 Distribution Conveyor Extends Block field type default speed float 0 Default: field default rotate true update true layer overlay group transportation hasItems true itemCapacity 4 idleSound conveyor idleSoundVolume 0.004 unloadable false Sprite suffix: -<0..4>-<0..3> example: Conveyors-sprites ArmoredConveyor Extends Conveyor -A type of conveyor don't accept item coming from side Router Extends Block Defaults: field default solid true update true hasItems true itemCapacity 1 group transportation uploadable false Junction Extends Block field type default notes speed float 26 frames taken to go through this junction capacity capacity 6 Defaults: field default update true solid true group transportation unloadable false ItemBridge Extends Block field type default range int transportTime float 2 Defaults: field default update true solid true hasPower true layer power expanded true itemCapacity 10 posConfig true configurable true hasItems true unloadable false group transportation Sprites: <name>-end example: bridge-conveyor-end <name>-bridge example: bridge-conveyor-bridge <name>-arrow example: bridge-conveyor-arrow ExtendingItemBridge Extends ItemBridge Defaults: field default hasItems true BufferedItemBridge Extends ExtendingItemBridge field type default speed float 40 bufferCapacity int 50 Defaults: field default hasItems true hasPower false Sorter Extends Block field type default notes invert boolean [optional] Defaults: field default update true solid true instantTransfer true group transportation configurable true unloadable false OverflowGate Extends Block Type used for overflow and underflow gates. field type default notes speed float 1 delta time multiplier for whether an item can be moved after an update cycle invert boolean false true makes it underflow Defaults: field default hasItems true solid true update true group transportation unloadable false MassDriver Extends Block \u2013 Uses driverBolt to transfer items. field type default range float rotateSpeed float 0.04 translation float 7 minDistribute int 10 knockback float 4 reloadTime float 100 shootEffect Effect shootBig2 smokeEffect Effect shootBigSmoke2 recieveEffect Effect mineBig shake float 3 Notes: range is limited by driverBolt 's max range, which is hard coded, so you cannot change it. Defaults: field default update true solid true posConfig true configurable true hasItems true layer turret hasPower true outlineIcon true Sprites: <name>-base Liquid Blocks LiquidBlock Extends Block \u2013 For blocks that can carry liquids. Apart from the better defaults, it also fetches extra sprites. Defaults: field default update true solid true hasLiquids true group liquids outputsLiquid true Sprites: <name>-liquid <name>-top <name>-bottom Pump Extends LiquidBlock field type default pumpAmount float 1 field default layer overlay group liquids floating true Conduit Extends LiquidBlock field type leakResistance float Defaults: field default rotate true solid false floating true Sprites: <name>-top-<0..6> ArmoredConduit Extends Conduit Defaults: field default leakResistance 10 Sprites: <name>-cap LiquidOverflowGate Extends LiquidBlock Defaults: field default rotate true Sprites: <name>-top LiquidRouter Extends LiquidBlock LiquidTank Extends LiquidRouter LiquidJunction Extends LiquidBlock LiquidBridge Extends LiquidBridge field default hasItems false hasLiquids true outputsLiquid true group liquids LiquidExtendingBridge Extends ExtendingItemBridge field default hasItems false hasLiquids true outputsLiquid true group liquids Power PowerBlock Abstract type which extends Block Defaults: field default update true solid true hasPower true group power PowerNode Extends PowerBlock field type default laserRange float 6 maxNodes int 3 Defaults: field default expanded true layer power configurable true consumesPower false outputsPower false PowerDistributor Extends PowerBlock Defaults: field default consumesPower false outputsPower true Battery Extends PowerDistributor field type default emptyLightColor Color f8c266 fullLightColor Color fb9567 Defauts: field default outputsPower true consumesPower true Sprites: <name>-top light region on top of the battery. PowerGenerator Extends PowerDistributor Power generators will produce power with their Consumers type. field type notes powerProduction float Power produced per tick at 100% ( 1.0 ) efficiency; 1 powerProduction is approximately 60 pu/s . Defaults: field default baseExplosiveness 5 sync true ThermalGenerator Extends PowerGenerator \u2013 Generates power with the attribute of a tile. Power production is powerProduction * attribute , and attribute must be greater then 0.01 . field type default notes generateEffect Effect none attribute Attribute heat The attribute used to vary efficiency. ItemLiquidGenerator Extends PowerGenerator \u2013 Base of power generation blocks. Notes: item efficiency is always 0.0 liquid efficiency is always 0.0 (this type doesn't produce power) field type default notes minItemEfficiency float 0.2 itemDuration float 70 number of ticks during which a single item will produce power. minLiquidEfficiency float 0.2 maxLiquidGenerate float 0.4 Maximum liquid used per frame. generateEffect Effect generatespark explodeEffect Effect generatespark heatColor Color ff9b59 randomlyExplode boolean true defaults boolean false Extra sprites: <name>-top if hasItems is true <name>-liquid SingleTypeGenerator Extends ItemLiquidGenerator \u2013 Generates power from an item. BurnerGenerator Extends ItemLiquidGenerator \u2013 Generates power from item flamability. DecayGenerator Extends ItemLiquidGenerator \u2013 Generates power from item radioactivity. Defaults: field default hasItems true hasLiquids false SolarGenerator Extends PowerGenerator \u2013 A generator that always produces 100% efficiency power. Notes: Lower targetting priority then other generators. NuclearReactor Extends PowerGenerator \u2013 Generates power relative to how many items are in storage, and explodes if it runs out of coolant. field type default notes lightColor Color 7f19ea coolColor Color ffffff00 hotColor Color ff9575a3 itemDuration float 120 time to consume 1 fuel heating float 0.01 heating per frame * fullness smokeThreshold float 0.3 heat at which blocks start smoking explosionRadius int 40 explosionDamage int 1350 flashThreshold float 0.46 heat at which lights start flashing coolantPower float 0.5 Defaults: field default itemCapacity 30 liquidCapacity 30 hasItems true hasLiquids true rebuildable false Extra Sprites: <name>-center top region <name>-lights lights region ImpactReactor Extends PowerGenerator \u2013 Generator that uses power and has a startup time. field type default notes plasmas int 4 number of plasma sprites warmupSpeed float 0.001 itemDuration float 60 explosionRadius int 50 explosionDamage int 2000 plasma1 Color ffd06b plasma2 Color ff361b Defaults: field default hasPower true hasLiquids true liquidCapacity 30 hasItems true outputsPower true consumesPower true Sprites: <name>-bottom bottom region <name>-plasma-<i> plasma regions, where i is 0 to plasmas - 1 . PowerDiode Extends Block Defaults: field default rotate true update true solid true insulated true Sprites: <name>-arrow LightBlock Extends Block field type default brightness float 0.9 radius float 200 Defaults: field default hasPower true update true configurable true Sprites: <name>-top Production Drill Extends Block \u2013 Types which can be placed on ore blocks to extract the OreBlock 's item. field type default notes tier int Maximum tier of blocks this drill can mine. drillTime float 300 Base time to drill one ore, in frames. liquidBoostIntensity float 1.6 How many times faster the drill will progress when boosted by liquid. warmupSpeed float 0.02 Speed at which the drill speeds up. drawMineItem boolean false Whether to draw the item this drill is mining. drillEffect Effect mine Effect played when an item is produced. This is colored. rotateSpeed float 2 Speed the drill bit rotates at. updateEffect Effect pulverizeSmall Effect randomly played while drilling. updateEffectChance float 0.02 Chance the update effect will appear. drawRim boolean false heatColor Color ff5512 Defaults: field default update true solid true layer overlay group drills hasLiquids true liquidCapacity 5 hasItems true idleSound drill idleSoundVolume 0.003 Sprites: <name>-rim <name>-rotator <name>-top SolidPump Extends Pump \u2013 Pump that makes liquid from solids and takes in power. Only works on solid floor blocks. field type default result Liquid water updateEffect Effect none updateEffectChance float 0.02 rotateSpeed float 1 attribute Attribute Defaults: field default hasPower true Sprites: <name>-liquid Cultivator Extends GenericCrafter field type default recurrence float 6 Defaults: field default craftEffect none Sprites: <name>-middle <name>-top Fracker Extends SolidPump field default itemUseTime 100 Defaults: field default hasItems true Sprites: <name>-liquid <name>-rotater <name>-top Incinerator Extends Block field type default effect Effect fuelburn flameColor Color ffad9d Defaults: field default hasPower true hasLiquid true update true solid true Unit Blocks RepairPoint Extends Block \u2013 Block which can repair units within range, with a laser. field type default repairRadius float 50 repairSpeed float 0.3 powerUse float Defaults: field default update true solid true hasPower true outlineIcon true layer turret layer2 power Extra sprites: <name>-base UnitFactory Extends block \u2013 A block can produce units field type default produceTime float 1000 launchVelocity float 0 maxSpawn int 4 unitType UnitType none Defaults: field default update true hasPower true hasItems true solid false flags producer Sprite suffix: -top CommandCenter Extends Block \u2013 A block which can issue commands to your unit. field type default topColor Color command bottomColor Color 5e5e5e effect Effect commandSend Defaults: field default flags comandCenter destructible true solid true configurable true MechPad Extends Block \u2013 A block which will spawn a player in a mech. field type default mech Mech none buildTime float 60 * 5 Defaults: field default update true solid true hasPower true layer overlay flags mechpad Storage StorageBlock Abstract type which extends Block Defaults: field default hasItems true CoreBlock Extends StorageBlock field type default mech Mech starter Defaults: field default solid true update true hasItems true activeSound respawning activeSoundVolume 1 layer overlay Vault Extends StorageBlock Defaults: field default solid true destructible true update false Unloader Extends Block A block which can take items from StorageBlock , like Vault , CoreBlock or Crafters . field type default speed float 1 Defaults: field default solid true health 70 update false hasItems true confugurable true Sprites: <name>-center LaunchPad Extends StroageBlock A block which can launch materials. field type default launchTime float none Defaults: field default update true hasItems true solid true Attributes An object with an array of attribute . Used in the Floor type to give a tile specific properties, like hottness or sporness for efficiency of various systems, like ThermalPumps and WaterExtractors. array has 4 items: index 0 is heat , index 1 is spores , index 2 is water , index 3 is oil . For example, this would give you 100 heat, 1 spores, 0.5 water and 0.1 oil. { \"array\": [ 100, 1, 0.5, 0.1] } You could use it inside of Floor type as such: { \"type\": \"Floor\", \"name\": \"magma\", \"attributes\": { \"array\": [ 0.75, 0, 0, 0 ] } } Attribute New attributes cannot be added. List of built-in attributes: heat spores water oil BuildVisibility A flag used by the game to change a few special-case things. It may be one of the following strings: hidden shown debugOnly sandboxOnly campaignOnly lightingOnly BlockGroup Groups for blocks to build on top of each other: none walls turrets transportation power liquids drills Type Item Extends Content \u2013 It's the object that can ride conveyors, sorters and be stored in containers, and is commonly used in crafters. field type default notes color Color black hex string of color type ItemType resource used for tabs and core acceptance explosiveness float 0 how explosive this item is. flammability float 0 flammability above 0.3 makes this eleigible for item burners. radioactivity float how radioactive this item is. 0=none, 1=chernobyl ground zero hardness int 0 drill hardness of the item cost float 1 used for calculating place times; 1 cost = 1 tick added to build time alwaysUnlocked boolean false If true, item is always unlocked. ItemType resource can't go in the core; material can go in the core. ItemStack A ItemStack can be a string or an object. It's used to describe the type and amount of items to a machine. As a string : copper/5 As an object : item: copper amount: 5 field type notes item string The name of an Item . amount int The amount of said item. Liquid Extends Content Type which defines the properties of a liquid. Like Item this will go into it's own subdirectory content/liquids/liquid-name.json , and from it's stem name you can reuse it from your other mod content. field type default notes color Color [required] color of liquid barColor Color [optional] color used in bars. lightColor Color Color used to draw lights. Note that the alpha channel is used to dictate brightness. flammability float 0 to 1; 0 is completely inflammable, above that may catch fire when exposed to heat. temperature float 0.5 0.5 is 'room' temperature, 0 is very cold, 1 is molten hot heatCapacity float 0.5 used in cooling; water is 0.4, cryofluid is 0.9. viscosity float 0.5 how thick this liquid is; water is 0.5, oil is 0.7. explosiveness float explosiveness when heated; 0 is nothing, 1 is nuke effect StatusEffect none the associated status effect. Sprites: <name> , the sprite used when displaying the liquid from a menu. LiquidStack A LiquidStack can be a string or an object. It's used to describe the type and amount of liquid to a machine. As a string : water/0.5 As an object : liquid: water amount: 0.5 field type notes liquid string The name of a Liquid . amount float The amount of said liquid. Weapon Weapons are used by units and mechs alike. A weapon is a type used to shoot bullets bullets just like turrets (except that they don't have an ammo mapping) . Weapons can only shoot one type of bullet, which you define in the bullet field. field type default notes name String used to fetch the sprite of the weapon nimPlayerDist float 20 minimum cursor distance from player, fixes 'cross-eyed' shooting. sequenceNum int 0 bullet BulletType bullet shot ejectEffect Effect none shell ejection effect reload float weapon reload in frames shots int 1 amount of shots per fire spacing float 12 spacing in degrees between multiple shots, if applicable inaccuracy float 0 inaccuracy of degrees of each shot shake float 0 intensity and duration of each shot's screen shake recoil float 1.5 visual weapon knockback. length float 3 shoot barrel y offset width float 4 shoot barrel x offset. velocityRnd float 0 fraction of velocity that is random alternate bool false shoot one arm after another, rather than all at once lengthRand float 0 randomization of shot length shotDelay float 0 delay in ticks between shots ignoreRotation boolean false whether shooter rotation is ignored when shooting. targetDistance float 1 if turnCursor is false for a mech, how far away will the weapon target. shootSound Sound pew Sprite: <name> or <name>-equip UnitType Extends Content field type default type BaseUnit health float 60 hitsize float 7 hitsizeTile float 4 speed float 0.4 range float 0 attackLength float 150 rotatespeed float 0.2 baseRotateSpeed float 0.1 shootCone float 15 mass float 1 flying boolean targetAir boolean true rotateWeapon boolean false drag float 0.1 maxVelocity float 5 retreatPercent float 0.6 itemCapacity int 30 buildPower float 0.3 minePower float 0.7 weapon Weapon weaponOffsetY float engineOffset float engineSize float Sprites: <name> <name>-leg <name>-base Mech Extends Content Mechs are the player controlled entities. They shoot bullets just like turrets from their weapon . field type default notes flying boolean speed float 1.1 maxSpeed float 10 boostSpeed float 0.75 drag float 0.4 mass float 1 shake float 0 health float 200 hitsize float 6 cellTrnsY float 0 mineSpeed float 1 drillPower int -1 buildPower float 1 engineColor Color boostTo itemCapacity int 30 turnCursor boolean true canHeal boolean false compoundSpeed float 5 compoundSpeedBoost float 5 drawCell boolean true draw the health and team indicator drawItems boolean true draw the items on its back drawLight boolean true draw the engine light if it's flying/boosting weaponOffsetY float 5 engineOffset float 5 engineSize float 2.5 weapon Weapon null Sprites: <name> <name>-leg <name>-base Category Categories for building menu: turret Offensive turrets; production Blocks that produce raw resources, such as drills; distribution Blocks that move items around; liquid Blocks that move liquids around; power Blocks that generate or transport power; defense Walls and other defensive structures; crafting Blocks that craft things; units Blocks that create units; upgrade Things that upgrade the player such as mech pads; effect Things for storage or passive effects. Zone Extends Content A Zone is a type that takes a map (named the same as the json's filename) and puts it into campaign. (a zone isn't a map) Every Zone has a Generator , which once initialized, MapGenerator will run through the map and do initialization related stuff. One of those notable things, is deleting all cores on in your map and placing a loadout on top of a random one of them. This allows your campaign map to have multiple core locations. (it doesn't matter which core was previously on the map, loadout will dictate that) It is entirely possible to produce a custom schematic, but take note that this schematic must contain a CoreBlock within it. field type default notes baseLaunchCost [ ItemStack ] launchCost [ ItemStack ] startingItems [ ItemStack ] Items you start with on the map. conditionWave int alwaysUnlocked boolean false Whether this map is always unlocked launchPeriod int 10 Rate of waves at which the core may be launched. loadout Schematic basicShard Core layout placed by MapGenerators. resources [ String ] Array of item names. requirements [ Objective ] An array of requirements to unlock configuration. configureObjective Objective ZoneWave 15 defaultStartingItems [ ItemStack ] Sprites: zone-<name> preview <name>-zone preview Built-in loadouts: basicShard bXNjaAB4nD2K2wqAIBiD5ymibnoRn6YnEP1BwUMoBL19FuJ2sbFvUFgYZDaJsLeQrkinN9UJHImsNzlYE7WrIUastuSbnlKx2VJJt+8IQGGKdfO/8J5yrGJSMegLg+YUIA== advancedShard bXNjaAB4nD2LjQqAIAyET7OMIOhFfJqeYMxBgSkYCL199gu33fFtB4tOwUTaBCP5QpHFzwtl32DahBeKK1NwPq8hoOcUixwpY+CUxe3XIwBbB/pa6tadVCUP02hgHvp5vZq/0b7pBHPYFOQ= basicFoundation bXNjaAB4nD1OSQ6DMBBzFhVu8BG+0X8MQyoiJTNSukj8nlCi2Adbtg/GA4OBF8oB00rvyE/9ykafqOIw58A7SWRKy1ZiShhZ5RcOLZhYS1hefQ1gRIeptH9jq/qW2lvc1d2tgWsOfVX/tOwE86AYBA== basicNucleus bXNjaAB4nD2MUQqAIBBEJy0s6qOLdJXuYNtCgikYBd2+LNmdj308hkGHtkId7M4YFns4mk/yfB4a48602eDI+mlNznu0FMPFd0wYKCaewl8F0EOueqM+yKSLVfJrNKWnSw/FZGzEGXFG9sy/px4gEBW1 Built-in zones: nuclearComplexe desolateRift tarFields overgrowth stainedMountains frozenForest saltFlats desertWastes groundZero StatusEffect Extends Content Not be be confused with Effect , a status effect will give an entity special properties. Status effects are used as transitions between intermediate effects. If some a wet unit gets shocked it then gets 20 damage. field type default notes damageMultiplier float 1 armorMultiplier float 1 speedMultiplier float 1 color Color white damage float Damage (or healing) per frame. effect Effect none Random effect (0.15% per frame), on affected units. opposites: effect which reduces anothers lifetime. Built-in status effects: none \u2013 Does nothing. burning field value damage 0.06 effect burning opposites: wet freezing tarred: 1 damage and keeps burning freezing field value speedMultiplier 0.6 armorMultiplier 0.8 effect freezing opposites: melting burning wet field value speedMultiplier 0.9 effect wet opposites: burning shocked: 20 damage melting field value speedMultiplier 0.8 armorMultiplier 0.8 damage 0.3 effect melting opposites: wet freezing tarred: keeps melting tarred field value speedMultiplier 0.6 effect oily burning: keeps burning melting: keeps burning overdrive field value armorMultiplier 0.95 speedMultiplier 1.15 damageMultiplier 1.4 damage -0.01 effect overdriven shielded field value armorMultiplier 3 boss field value armorMultiplier 3 damageMultiplier 3 speedMultiplier 1.1 shocked \u2013 Does nothing. corroded field value damage 0.1 Graphics Layer Layers is an enumeration type, which the renderer will use to group rendering order: block , base block layer; placement , for placement; overlay , first overlay stuff like conveyor items; turret , \"high\" blocks like turrets; power power lasers Color Color is a hexadecimal string, <rr><gg><bb> for example: ff0000 is red, 00ff00 is green, 0000ff is blue, ffff00 is yellow, 00ffff is cyan, ect.. CacheLayer Flags used by for cache render: normal normal layer; walls walls layer; water water layer, adding tile water shaders, and giving wave reflections; tar tar layer, adding tar shaders, making it darker and giving it some bubble reflections; Entities BulletType Abstract type which extends Content BulletType can either be an object {} or a \"string\" , where a string would be reusing Built-in Bullets and an object would be making a custom one. There are two major categories of bullet types: BasicBulletType and, other special bullets. Here's an example of a custom bullet: { \"type\": \"MissileBulletType\", \"lifetime\": 1000, \"speed\": 2, \"splashDamageRadius\": 2, \"splashDamage\": 9, \"frontColor\": \"ffff00\", \"backColor\": \"00ffff\", \"homingPower\": 1, \"homingRange\": 20, \"fragBullets\": 3, \"fragBullet\": { \"type\": \"LiquidBulletType\", \"liquid\": \"oil\", \"lifetime\": 2, \"speed\": 1, \"fragBullets\": 2, \"fragBullet\": { \"type\": \"LiquidBulletType\", \"liquid\": \"slag\", \"lifetime\": 1, \"speed\": 2, \"damage\": 1, } } } field type default notes lifetime float amount of ticks the bullet will last speed float inital speed of bullet damage float collision damage hitSize float 4 collision radius drawSize float 40 drag float 0 decelleration per tick pierce boolean whether it can collide hitEffect Effect created when bullet hits something despawnEffect Effect created when bullet despawns shootEffect Effect created when shooting smokeEffect Effect created when shooting hitSound Sound made when hitting something or getting removed inaccuracy float 0 extra inaccuracy ammoMultiplier float 2 how many bullets get created per item/liquid reloadMultiplier float 1 multiplied by turret reload speed recoil float recoil from shooter entities killShooter float whether to kill the shooter when this is shot. (for suicide bombers) knockback float Knockback in velocity. hitTiles boolean true Whether this bullet hits tiles. status StatusEffect none Status effect applied on hit. statusDuration float 600 Intensity of applied status effect in terms of duration. collidesTiles boolean true Whether this bullet type collides with tiles. collidesTeam boolean false Whether this bullet type collides with tiles that are of the same team. collidesAir boolean true Whether this bullet type collides with air units. collides boolean true Whether this bullet types collides with anything at all. keepVelocity boolean true Whether velocity is inherited from the shooter. fragBullets int 9 Number of frag bullets created. fragVelocityMin float 0.2 Minimum random multiplier. fragVelocityMax float 1 Maximum random multiplier. fragBullet BulletType null The frag bullet that will be created, may be a string, an object or null. If field is null, no frag bullet is created. instantDisappear boolean Whether to instantly make the bullet disappear. (used in crawlers to make sure they explode) splashDamage float 0 Area of effect damage when the bullet despawns or hits a target. Damage is calculated with linear interpolation , also known as lerp. splashDamageRadius float -1 Use a negative value to disable splash damage. splashDamageRadius is a value used in the equation lerp(1 - distance / radius, 1, 0.4) which is a multiplier for splashDamage . incendAmount int 0 incendSpread float 8 incendChance float 1 homingPower float 0 Doesn't do anything complicated; if homingPower larger then 0.01 it gets rendered in the UI, if homingPower is larger then 0.0001 it allows homingRange to work. homingRange float 50 How close the bullet needs from a target in order to home/seek said target. lightining int lightningLength int 5 hitShake float 0 BasicBulletType Extends BulletType This types purpose is to give basic bullets their sprites. The bulletSprite will be used as the shape of the bullet. The visible pixels in your sprites will be tinted with backColor and frontColor respectively. For example if you had sprites router.png and router-back.png where Test Mod was your mods name, you could do this to include your bulletSprite : { \"type\": \"BasicBulletType\", \"bulletSprite\": \"test-mod-router\" } field type default bulletWidth float 5 bulletHeight float 7 bulletShrink float 0.5 Used to squishify the bullet as it gets closer to the target, where 0 is no shrink -0.5 is stretching and 0.5 is shrinking. frontColor Color bulletYellow Color of front sprite. backColor Color bulletYellowBack Color of back sprite. bulletSprite String bullet Mapping sprite used to make the shape of the bullet. Sprites: <mod-name>-<sprite-name> top layer bulletSprite <mod-name>-<sprite-name>-back bottom layer bulletSprite Built-in bulletSprites : bullet bullet-back missile missile-back shell shell-back ArtilleryBulletType Extends BasicBulletType Makes special calculations to give the effect that the bullet is going up and back down. field type default trailEffect Effect artilleryTrail Defaults: field default collidesTiles false collides false collidesAir false hitShake 1 hitSound explosion bulletSprite shell FlakBulletType Extends BasicBulletType field type default notes explodeRange float 30 The range at which the bullets explode from enemies. Defaults: field type splashDamage 15 splashDamageRadius 34 hitEffect flakExplosionBig bulletWidth 8 bulletHeight 10 MissileBulletType Extends BasicBulletType Weave is simple a sin wave with the following equation. rotation = sin(time/scale) * magnitude field type default notes trailColor Color missileYellowBack Color of the trail effect. weaveScale float 0 A larger weaveScale means a longer wave. weaveMag float -1 A higher weaveMag means a higher (wider) wave. Defaults: field default bulletSprite missile BombBulletType Extends BasicBulletType Defaults: field default collidesTiles false collides false bulletShrink 0.7 lifetime 30 drag 0.05 keepVelocity false collidesAir false hitSound explosion HealBulletType Extends BulletType \u2013 Bullets that can heal blocks of the same team as the shooter. field type default healPercent float 3 Defaults: field default shootEffect shootHeal smokeEffect hitLaser hitEffect hitLaser despawnEffect hitLaser collidesTeam true LiquidBulletType Extends BulletType field type default notes liquid String null [required] name of Liquid Defaults: field default lifetime 74 statusDuration 90 despawnEffect none hitEffect hitLiquid smokeEffect none shootEffect none drag 0.009 knockback 0.55 MassDriverBolt Extends BulletType Defaults: field default collidesTiles false lifetime 200 despawnEffect smeltsmoke hitEffect hitBulletBig drag 0.005 Built-in Bullets artillery: artilleryDense artilleryPlastic artilleryPlasticFrag artilleryHoming artlleryIncendiary artilleryExplosive artilleryUnit flak: flakScrap flakLead flakPlastic flakExplosive flakSurge flakGlass glassFrag missiles: missileExplosive missileIncendiary missileSurge missileJavelin missileSwarm missileRevenant standard: standardCopper standardDense standardThorium standardHoming standardIncendiary standardMechSmall standardGlaive standardDenseBig standardThoriumBig standardIncendiaryBig electric: lancerLaser meltdownLaser lightning arc damageLightning liquid: waterShot cryoShot slagShot oilShot environment & misc: fireball basicFlame pyraFlame driverBolt healBullet healBulletBig frag eruptorShot bombs: bombExplosive bombIncendiary bombOil BaseUnit There are a few useful base unit types: FlyingUnit HoverUnit BuilderDrone MinerDrone RepairDrone GroundUnit Effect Type should be a string . You can't currently create custom effects. List of built-in effects are as follows: none placeBlock breakBlock smoke spawn tapBlock select vtolHover unitDrop unitPickup unitLand pickup healWave heal landShock reactorsmoke nuclearsmoke nuclearcloud redgeneratespark generatespark fuelburn plasticburn pulverize pulverizeRed pulverizeRedder pulverizeSmall pulverizeMedium producesmoke smeltsmoke formsmoke blastsmoke lava doorclose dooropen dooropenlarge doorcloselarge purify purifyoil purifystone generate mine mineBig mineHuge smelt teleportActivate teleport teleportOut ripple bubble launch healBlock healBlockFull healWaveMend overdriveWave overdriveBlockFull shieldBreak hitBulletSmall hitFuse hitBulletBig hitFlameSmall hitLiquid hitLaser hitLancer hitMeltdown despawn flakExplosion blastExplosion plasticExplosion artilleryTrail incendTrail missileTrail absorb flakExplosionBig plasticExplosionFlak burning fire fireSmoke steam fireballsmoke ballfire freezing melting wet oily overdriven dropItem shockwave bigShockwave nuclearShockwave explosion blockExplosion blockExplosionSmoke shootSmall shootHeal shootSmallSmoke shootBig shootBig2 shootBigSmoke shootBigSmoke2 shootSmallFlame shootPyraFlame shootLiquid shellEjectSmall shellEjectMedium shellEjectBig lancerLaserShoot lancerLaserShootSmoke lancerLaserCharge lancerLaserChargeBegin lightningCharge lightningShoot unitSpawn spawnShockwave magmasmoke impactShockwave impactcloud impactsmoke dynamicExplosion padlaunch commandSend coreLand TargetPriority A higher ordinal means a higher priority. Higher priority blocks will always get targeted over those of lower priority, regardless of distance. base turret Objective Objective is a trait, which a few types implement, which is used by Zone to give campaign maps objectives. Types which implement Objective are as follows: ZoneWave \u2013 complete if best wave within zone is heigher then target wave field type notes zone String target Zone name wave int target wave to reach Launched \u2013 complete if core launched from zone field type notes zone String target Zone name Unlock \u2013 complete if block is unlocked field type notes block String target Block name Other Mindustry Source Structure core/src/io/anuke/mindustry/ \u251c\u2500\u2500 ai \u2502 \u251c\u2500\u2500 BlockIndexer.java \u2502 \u251c\u2500\u2500 Pathfinder.java \u2502 \u2514\u2500\u2500 WaveSpawner.java \u251c\u2500\u2500 ClientLauncher.java \u251c\u2500\u2500 content \u2502 \u251c\u2500\u2500 Blocks.java \u2502 \u251c\u2500\u2500 Bullets.java \u2502 \u251c\u2500\u2500 Fx.java \u2502 \u251c\u2500\u2500 Items.java \u2502 \u251c\u2500\u2500 Liquids.java \u2502 \u251c\u2500\u2500 Loadouts.java \u2502 \u251c\u2500\u2500 Mechs.java \u2502 \u251c\u2500\u2500 StatusEffects.java \u2502 \u251c\u2500\u2500 TechTree.java \u2502 \u251c\u2500\u2500 TypeIDs.java \u2502 \u251c\u2500\u2500 UnitTypes.java \u2502 \u2514\u2500\u2500 Zones.java \u251c\u2500\u2500 core \u2502 \u251c\u2500\u2500 ContentLoader.java \u2502 \u251c\u2500\u2500 Control.java \u2502 \u251c\u2500\u2500 FileTree.java \u2502 \u251c\u2500\u2500 GameState.java \u2502 \u251c\u2500\u2500 Logic.java \u2502 \u251c\u2500\u2500 NetClient.java \u2502 \u251c\u2500\u2500 NetServer.java \u2502 \u251c\u2500\u2500 Platform.java \u2502 \u251c\u2500\u2500 Renderer.java \u2502 \u251c\u2500\u2500 UI.java \u2502 \u251c\u2500\u2500 Version.java \u2502 \u2514\u2500\u2500 World.java \u251c\u2500\u2500 ctype \u2502 \u251c\u2500\u2500 Content.java \u2502 \u251c\u2500\u2500 ContentList.java \u2502 \u251c\u2500\u2500 ContentType.java \u2502 \u251c\u2500\u2500 MappableContent.java \u2502 \u2514\u2500\u2500 UnlockableContent.java \u251c\u2500\u2500 editor \u2502 \u251c\u2500\u2500 DrawOperation.java \u2502 \u251c\u2500\u2500 EditorTile.java \u2502 \u251c\u2500\u2500 EditorTool.java \u2502 \u251c\u2500\u2500 MapEditorDialog.java \u2502 \u251c\u2500\u2500 MapEditor.java \u2502 \u251c\u2500\u2500 MapGenerateDialog.java \u2502 \u251c\u2500\u2500 MapInfoDialog.java \u2502 \u251c\u2500\u2500 MapLoadDialog.java \u2502 \u251c\u2500\u2500 MapRenderer.java \u2502 \u251c\u2500\u2500 MapResizeDialog.java \u2502 \u251c\u2500\u2500 MapSaveDialog.java \u2502 \u251c\u2500\u2500 MapView.java \u2502 \u251c\u2500\u2500 OperationStack.java \u2502 \u2514\u2500\u2500 WaveInfoDialog.java \u251c\u2500\u2500 entities \u2502 \u251c\u2500\u2500 bullet \u2502 \u2502 \u251c\u2500\u2500 ArtilleryBulletType.java \u2502 \u2502 \u251c\u2500\u2500 BasicBulletType.java \u2502 \u2502 \u251c\u2500\u2500 BombBulletType.java \u2502 \u2502 \u251c\u2500\u2500 BulletType.java \u2502 \u2502 \u251c\u2500\u2500 FlakBulletType.java \u2502 \u2502 \u251c\u2500\u2500 HealBulletType.java \u2502 \u2502 \u251c\u2500\u2500 LiquidBulletType.java \u2502 \u2502 \u251c\u2500\u2500 MassDriverBolt.java \u2502 \u2502 \u2514\u2500\u2500 MissileBulletType.java \u2502 \u251c\u2500\u2500 Damage.java \u2502 \u251c\u2500\u2500 effect \u2502 \u2502 \u251c\u2500\u2500 Decal.java \u2502 \u2502 \u251c\u2500\u2500 Fire.java \u2502 \u2502 \u251c\u2500\u2500 GroundEffectEntity.java \u2502 \u2502 \u251c\u2500\u2500 ItemTransfer.java \u2502 \u2502 \u251c\u2500\u2500 Lightning.java \u2502 \u2502 \u251c\u2500\u2500 Puddle.java \u2502 \u2502 \u251c\u2500\u2500 RubbleDecal.java \u2502 \u2502 \u2514\u2500\u2500 ScorchDecal.java \u2502 \u251c\u2500\u2500 Effects.java \u2502 \u251c\u2500\u2500 Entities.java \u2502 \u251c\u2500\u2500 EntityCollisions.java \u2502 \u251c\u2500\u2500 EntityGroup.java \u2502 \u251c\u2500\u2500 Predict.java \u2502 \u251c\u2500\u2500 TargetPriority.java \u2502 \u251c\u2500\u2500 traits \u2502 \u2502 \u251c\u2500\u2500 AbsorbTrait.java \u2502 \u2502 \u251c\u2500\u2500 BelowLiquidTrait.java \u2502 \u2502 \u251c\u2500\u2500 BuilderMinerTrait.java \u2502 \u2502 \u251c\u2500\u2500 BuilderTrait.java \u2502 \u2502 \u251c\u2500\u2500 DamageTrait.java \u2502 \u2502 \u251c\u2500\u2500 DrawTrait.java \u2502 \u2502 \u251c\u2500\u2500 Entity.java \u2502 \u2502 \u251c\u2500\u2500 HealthTrait.java \u2502 \u2502 \u251c\u2500\u2500 KillerTrait.java \u2502 \u2502 \u251c\u2500\u2500 MinerTrait.java \u2502 \u2502 \u251c\u2500\u2500 MoveTrait.java \u2502 \u2502 \u251c\u2500\u2500 Saveable.java \u2502 \u2502 \u251c\u2500\u2500 SaveTrait.java \u2502 \u2502 \u251c\u2500\u2500 ScaleTrait.java \u2502 \u2502 \u251c\u2500\u2500 ShooterTrait.java \u2502 \u2502 \u251c\u2500\u2500 SolidTrait.java \u2502 \u2502 \u251c\u2500\u2500 SpawnerTrait.java \u2502 \u2502 \u251c\u2500\u2500 SyncTrait.java \u2502 \u2502 \u251c\u2500\u2500 TargetTrait.java \u2502 \u2502 \u251c\u2500\u2500 TeamTrait.java \u2502 \u2502 \u251c\u2500\u2500 TimeTrait.java \u2502 \u2502 \u251c\u2500\u2500 TypeTrait.java \u2502 \u2502 \u2514\u2500\u2500 VelocityTrait.java \u2502 \u251c\u2500\u2500 type \u2502 \u2502 \u251c\u2500\u2500 base \u2502 \u2502 \u2502 \u251c\u2500\u2500 BaseDrone.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 BuilderDrone.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 FlyingUnit.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 GroundUnit.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 HoverUnit.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 MinerDrone.java \u2502 \u2502 \u2502 \u2514\u2500\u2500 RepairDrone.java \u2502 \u2502 \u251c\u2500\u2500 BaseEntity.java \u2502 \u2502 \u251c\u2500\u2500 BaseUnit.java \u2502 \u2502 \u251c\u2500\u2500 Bullet.java \u2502 \u2502 \u251c\u2500\u2500 DestructibleEntity.java \u2502 \u2502 \u251c\u2500\u2500 EffectEntity.java \u2502 \u2502 \u251c\u2500\u2500 Player.java \u2502 \u2502 \u251c\u2500\u2500 SolidEntity.java \u2502 \u2502 \u251c\u2500\u2500 TileEntity.java \u2502 \u2502 \u251c\u2500\u2500 TimedEntity.java \u2502 \u2502 \u2514\u2500\u2500 Unit.java \u2502 \u251c\u2500\u2500 units \u2502 \u2502 \u251c\u2500\u2500 StateMachine.java \u2502 \u2502 \u251c\u2500\u2500 Statuses.java \u2502 \u2502 \u251c\u2500\u2500 UnitCommand.java \u2502 \u2502 \u251c\u2500\u2500 UnitDrops.java \u2502 \u2502 \u2514\u2500\u2500 UnitState.java \u2502 \u2514\u2500\u2500 Units.java \u251c\u2500\u2500 game \u2502 \u251c\u2500\u2500 DefaultWaves.java \u2502 \u251c\u2500\u2500 Difficulty.java \u2502 \u251c\u2500\u2500 EventType.java \u2502 \u251c\u2500\u2500 Gamemode.java \u2502 \u251c\u2500\u2500 GlobalData.java \u2502 \u251c\u2500\u2500 LoopControl.java \u2502 \u251c\u2500\u2500 MusicControl.java \u2502 \u251c\u2500\u2500 Objective.java \u2502 \u251c\u2500\u2500 Objectives.java \u2502 \u251c\u2500\u2500 Rules.java \u2502 \u251c\u2500\u2500 Saves.java \u2502 \u251c\u2500\u2500 Schematic.java \u2502 \u251c\u2500\u2500 Schematics.java \u2502 \u251c\u2500\u2500 SoundLoop.java \u2502 \u251c\u2500\u2500 SpawnGroup.java \u2502 \u251c\u2500\u2500 Stats.java \u2502 \u251c\u2500\u2500 Team.java \u2502 \u251c\u2500\u2500 Teams.java \u2502 \u2514\u2500\u2500 Tutorial.java \u251c\u2500\u2500 graphics \u2502 \u251c\u2500\u2500 BlockRenderer.java \u2502 \u251c\u2500\u2500 Bloom.java \u2502 \u251c\u2500\u2500 CacheLayer.java \u2502 \u251c\u2500\u2500 Drawf.java \u2502 \u251c\u2500\u2500 FloorRenderer.java \u2502 \u251c\u2500\u2500 IndexedRenderer.java \u2502 \u251c\u2500\u2500 Layer.java \u2502 \u251c\u2500\u2500 LightRenderer.java \u2502 \u251c\u2500\u2500 MenuRenderer.java \u2502 \u251c\u2500\u2500 MinimapRenderer.java \u2502 \u251c\u2500\u2500 MultiPacker.java \u2502 \u251c\u2500\u2500 OverlayRenderer.java \u2502 \u251c\u2500\u2500 Pal.java \u2502 \u251c\u2500\u2500 Pixelator.java \u2502 \u2514\u2500\u2500 Shaders.java \u251c\u2500\u2500 input \u2502 \u251c\u2500\u2500 Binding.java \u2502 \u251c\u2500\u2500 DesktopInput.java \u2502 \u251c\u2500\u2500 InputHandler.java \u2502 \u251c\u2500\u2500 MobileInput.java \u2502 \u251c\u2500\u2500 Placement.java \u2502 \u2514\u2500\u2500 PlaceMode.java \u251c\u2500\u2500 io \u2502 \u251c\u2500\u2500 JsonIO.java \u2502 \u251c\u2500\u2500 LegacyMapIO.java \u2502 \u251c\u2500\u2500 MapIO.java \u2502 \u251c\u2500\u2500 SaveFileReader.java \u2502 \u251c\u2500\u2500 SaveIO.java \u2502 \u251c\u2500\u2500 SaveMeta.java \u2502 \u251c\u2500\u2500 SavePreviewLoader.java \u2502 \u251c\u2500\u2500 SaveVersion.java \u2502 \u251c\u2500\u2500 TypeIO.java \u2502 \u2514\u2500\u2500 versions \u2502 \u251c\u2500\u2500 LegacyTypeTable.java \u2502 \u251c\u2500\u2500 Save1.java \u2502 \u251c\u2500\u2500 Save2.java \u2502 \u2514\u2500\u2500 Save3.java \u251c\u2500\u2500 maps \u2502 \u251c\u2500\u2500 filters \u2502 \u2502 \u251c\u2500\u2500 BlendFilter.java \u2502 \u2502 \u251c\u2500\u2500 ClearFilter.java \u2502 \u2502 \u251c\u2500\u2500 DistortFilter.java \u2502 \u2502 \u251c\u2500\u2500 FilterOption.java \u2502 \u2502 \u251c\u2500\u2500 GenerateFilter.java \u2502 \u2502 \u251c\u2500\u2500 MedianFilter.java \u2502 \u2502 \u251c\u2500\u2500 MirrorFilter.java \u2502 \u2502 \u251c\u2500\u2500 NoiseFilter.java \u2502 \u2502 \u251c\u2500\u2500 OreFilter.java \u2502 \u2502 \u251c\u2500\u2500 OreMedianFilter.java \u2502 \u2502 \u251c\u2500\u2500 RiverNoiseFilter.java \u2502 \u2502 \u251c\u2500\u2500 ScatterFilter.java \u2502 \u2502 \u2514\u2500\u2500 TerrainFilter.java \u2502 \u251c\u2500\u2500 generators \u2502 \u2502 \u251c\u2500\u2500 BasicGenerator.java \u2502 \u2502 \u251c\u2500\u2500 Generator.java \u2502 \u2502 \u251c\u2500\u2500 MapGenerator.java \u2502 \u2502 \u2514\u2500\u2500 RandomGenerator.java \u2502 \u251c\u2500\u2500 MapException.java \u2502 \u251c\u2500\u2500 Map.java \u2502 \u251c\u2500\u2500 MapPreviewLoader.java \u2502 \u251c\u2500\u2500 Maps.java \u2502 \u2514\u2500\u2500 zonegen \u2502 \u251c\u2500\u2500 DesertWastesGenerator.java \u2502 \u2514\u2500\u2500 OvergrowthGenerator.java \u251c\u2500\u2500 mod \u2502 \u251c\u2500\u2500 ClassAccess.java \u2502 \u251c\u2500\u2500 ContentParser.java \u2502 \u251c\u2500\u2500 Mod.java \u2502 \u251c\u2500\u2500 ModLoadingSound.java \u2502 \u251c\u2500\u2500 Mods.java \u2502 \u2514\u2500\u2500 Scripts.java \u251c\u2500\u2500 net \u2502 \u251c\u2500\u2500 Administration.java \u2502 \u251c\u2500\u2500 ArcNetProvider.java \u2502 \u251c\u2500\u2500 CrashSender.java \u2502 \u251c\u2500\u2500 Host.java \u2502 \u251c\u2500\u2500 Interpolator.java \u2502 \u251c\u2500\u2500 NetConnection.java \u2502 \u251c\u2500\u2500 Net.java \u2502 \u251c\u2500\u2500 NetworkIO.java \u2502 \u251c\u2500\u2500 Packet.java \u2502 \u251c\u2500\u2500 Packets.java \u2502 \u251c\u2500\u2500 Registrator.java \u2502 \u251c\u2500\u2500 Streamable.java \u2502 \u2514\u2500\u2500 ValidateException.java \u251c\u2500\u2500 plugin \u2502 \u2514\u2500\u2500 Plugin.java \u251c\u2500\u2500 type \u2502 \u251c\u2500\u2500 Category.java \u2502 \u251c\u2500\u2500 ErrorContent.java \u2502 \u251c\u2500\u2500 Item.java \u2502 \u251c\u2500\u2500 ItemStack.java \u2502 \u251c\u2500\u2500 ItemType.java \u2502 \u251c\u2500\u2500 Liquid.java \u2502 \u251c\u2500\u2500 LiquidStack.java \u2502 \u251c\u2500\u2500 Mech.java \u2502 \u251c\u2500\u2500 Publishable.java \u2502 \u251c\u2500\u2500 StatusEffect.java \u2502 \u251c\u2500\u2500 TypeID.java \u2502 \u251c\u2500\u2500 UnitType.java \u2502 \u251c\u2500\u2500 Weapon.java \u2502 \u251c\u2500\u2500 WeatherEvent.java \u2502 \u2514\u2500\u2500 Zone.java \u251c\u2500\u2500 ui \u2502 \u251c\u2500\u2500 Bar.java \u2502 \u251c\u2500\u2500 BorderImage.java \u2502 \u251c\u2500\u2500 Cicon.java \u2502 \u251c\u2500\u2500 ContentDisplay.java \u2502 \u251c\u2500\u2500 dialogs \u2502 \u2502 \u251c\u2500\u2500 AboutDialog.java \u2502 \u2502 \u251c\u2500\u2500 AdminsDialog.java \u2502 \u2502 \u251c\u2500\u2500 BansDialog.java \u2502 \u2502 \u251c\u2500\u2500 ColorPicker.java \u2502 \u2502 \u251c\u2500\u2500 ContentInfoDialog.java \u2502 \u2502 \u251c\u2500\u2500 ControlsDialog.java \u2502 \u2502 \u251c\u2500\u2500 CustomGameDialog.java \u2502 \u2502 \u251c\u2500\u2500 CustomRulesDialog.java \u2502 \u2502 \u251c\u2500\u2500 DatabaseDialog.java \u2502 \u2502 \u251c\u2500\u2500 DeployDialog.java \u2502 \u2502 \u251c\u2500\u2500 DiscordDialog.java \u2502 \u2502 \u251c\u2500\u2500 FileChooser.java \u2502 \u2502 \u251c\u2500\u2500 FloatingDialog.java \u2502 \u2502 \u251c\u2500\u2500 GameOverDialog.java \u2502 \u2502 \u251c\u2500\u2500 HostDialog.java \u2502 \u2502 \u251c\u2500\u2500 JoinDialog.java \u2502 \u2502 \u251c\u2500\u2500 LanguageDialog.java \u2502 \u2502 \u251c\u2500\u2500 LoadDialog.java \u2502 \u2502 \u251c\u2500\u2500 LoadoutDialog.java \u2502 \u2502 \u251c\u2500\u2500 MapPlayDialog.java \u2502 \u2502 \u251c\u2500\u2500 MapsDialog.java \u2502 \u2502 \u251c\u2500\u2500 MinimapDialog.java \u2502 \u2502 \u251c\u2500\u2500 ModsDialog.java \u2502 \u2502 \u251c\u2500\u2500 PaletteDialog.java \u2502 \u2502 \u251c\u2500\u2500 PausedDialog.java \u2502 \u2502 \u251c\u2500\u2500 SaveDialog.java \u2502 \u2502 \u251c\u2500\u2500 SchematicsDialog.java \u2502 \u2502 \u251c\u2500\u2500 SettingsMenuDialog.java \u2502 \u2502 \u251c\u2500\u2500 TechTreeDialog.java \u2502 \u2502 \u251c\u2500\u2500 TraceDialog.java \u2502 \u2502 \u2514\u2500\u2500 ZoneInfoDialog.java \u2502 \u251c\u2500\u2500 Fonts.java \u2502 \u251c\u2500\u2500 fragments \u2502 \u2502 \u251c\u2500\u2500 BlockConfigFragment.java \u2502 \u2502 \u251c\u2500\u2500 BlockInventoryFragment.java \u2502 \u2502 \u251c\u2500\u2500 ChatFragment.java \u2502 \u2502 \u251c\u2500\u2500 FadeInFragment.java \u2502 \u2502 \u251c\u2500\u2500 Fragment.java \u2502 \u2502 \u251c\u2500\u2500 HudFragment.java \u2502 \u2502 \u251c\u2500\u2500 LoadingFragment.java \u2502 \u2502 \u251c\u2500\u2500 MenuFragment.java \u2502 \u2502 \u251c\u2500\u2500 OverlayFragment.java \u2502 \u2502 \u251c\u2500\u2500 PlacementFragment.java \u2502 \u2502 \u251c\u2500\u2500 PlayerListFragment.java \u2502 \u2502 \u2514\u2500\u2500 ScriptConsoleFragment.java \u2502 \u251c\u2500\u2500 GridImage.java \u2502 \u251c\u2500\u2500 IconSize.java \u2502 \u251c\u2500\u2500 IntFormat.java \u2502 \u251c\u2500\u2500 ItemDisplay.java \u2502 \u251c\u2500\u2500 ItemImage.java \u2502 \u251c\u2500\u2500 ItemsDisplay.java \u2502 \u251c\u2500\u2500 layout \u2502 \u2502 \u251c\u2500\u2500 BranchTreeLayout.java \u2502 \u2502 \u251c\u2500\u2500 RadialTreeLayout.java \u2502 \u2502 \u2514\u2500\u2500 TreeLayout.java \u2502 \u251c\u2500\u2500 Links.java \u2502 \u251c\u2500\u2500 LiquidDisplay.java \u2502 \u251c\u2500\u2500 Minimap.java \u2502 \u251c\u2500\u2500 MobileButton.java \u2502 \u251c\u2500\u2500 MultiReqImage.java \u2502 \u251c\u2500\u2500 ReqImage.java \u2502 \u2514\u2500\u2500 Styles.java \u251c\u2500\u2500 Vars.java \u2514\u2500\u2500 world \u251c\u2500\u2500 Block.java \u251c\u2500\u2500 blocks \u2502 \u251c\u2500\u2500 Attributes.java \u2502 \u251c\u2500\u2500 Autotiler.java \u2502 \u251c\u2500\u2500 BlockPart.java \u2502 \u251c\u2500\u2500 BuildBlock.java \u2502 \u251c\u2500\u2500 defense \u2502 \u2502 \u251c\u2500\u2500 DeflectorWall.java \u2502 \u2502 \u251c\u2500\u2500 Door.java \u2502 \u2502 \u251c\u2500\u2500 ForceProjector.java \u2502 \u2502 \u251c\u2500\u2500 MendProjector.java \u2502 \u2502 \u251c\u2500\u2500 OverdriveProjector.java \u2502 \u2502 \u251c\u2500\u2500 ShockMine.java \u2502 \u2502 \u251c\u2500\u2500 SurgeWall.java \u2502 \u2502 \u251c\u2500\u2500 turrets \u2502 \u2502 \u2502 \u251c\u2500\u2500 ArtilleryTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 BurstTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 ChargeTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 CooledTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 DoubleTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 ItemTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 LaserTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 LiquidTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 PowerTurret.java \u2502 \u2502 \u2502 \u2514\u2500\u2500 Turret.java \u2502 \u2502 \u2514\u2500\u2500 Wall.java \u2502 \u251c\u2500\u2500 distribution \u2502 \u2502 \u251c\u2500\u2500 ArmoredConveyor.java \u2502 \u2502 \u251c\u2500\u2500 BufferedItemBridge.java \u2502 \u2502 \u251c\u2500\u2500 Conveyor.java \u2502 \u2502 \u251c\u2500\u2500 ExtendingItemBridge.java \u2502 \u2502 \u251c\u2500\u2500 ItemBridge.java \u2502 \u2502 \u251c\u2500\u2500 Junction.java \u2502 \u2502 \u251c\u2500\u2500 MassDriver.java \u2502 \u2502 \u251c\u2500\u2500 OverflowGate.java \u2502 \u2502 \u251c\u2500\u2500 Router.java \u2502 \u2502 \u2514\u2500\u2500 Sorter.java \u2502 \u251c\u2500\u2500 DoubleOverlayFloor.java \u2502 \u251c\u2500\u2500 Floor.java \u2502 \u251c\u2500\u2500 ItemSelection.java \u2502 \u251c\u2500\u2500 liquid \u2502 \u2502 \u251c\u2500\u2500 ArmoredConduit.java \u2502 \u2502 \u251c\u2500\u2500 Conduit.java \u2502 \u2502 \u251c\u2500\u2500 LiquidBridge.java \u2502 \u2502 \u251c\u2500\u2500 LiquidExtendingBridge.java \u2502 \u2502 \u251c\u2500\u2500 LiquidJunction.java \u2502 \u2502 \u251c\u2500\u2500 LiquidOverflowGate.java \u2502 \u2502 \u251c\u2500\u2500 LiquidRouter.java \u2502 \u2502 \u2514\u2500\u2500 LiquidTank.java \u2502 \u251c\u2500\u2500 LiquidBlock.java \u2502 \u251c\u2500\u2500 logic \u2502 \u2502 \u251c\u2500\u2500 LogicBlock.java \u2502 \u2502 \u2514\u2500\u2500 MessageBlock.java \u2502 \u251c\u2500\u2500 OreBlock.java \u2502 \u251c\u2500\u2500 OverlayFloor.java \u2502 \u251c\u2500\u2500 power \u2502 \u2502 \u251c\u2500\u2500 Battery.java \u2502 \u2502 \u251c\u2500\u2500 BurnerGenerator.java \u2502 \u2502 \u251c\u2500\u2500 ConditionalConsumePower.java \u2502 \u2502 \u251c\u2500\u2500 DecayGenerator.java \u2502 \u2502 \u251c\u2500\u2500 ImpactReactor.java \u2502 \u2502 \u251c\u2500\u2500 ItemLiquidGenerator.java \u2502 \u2502 \u251c\u2500\u2500 LightBlock.java \u2502 \u2502 \u251c\u2500\u2500 NuclearReactor.java \u2502 \u2502 \u251c\u2500\u2500 PowerDiode.java \u2502 \u2502 \u251c\u2500\u2500 PowerDistributor.java \u2502 \u2502 \u251c\u2500\u2500 PowerGenerator.java \u2502 \u2502 \u251c\u2500\u2500 PowerGraph.java \u2502 \u2502 \u251c\u2500\u2500 PowerNode.java \u2502 \u2502 \u251c\u2500\u2500 SingleTypeGenerator.java \u2502 \u2502 \u251c\u2500\u2500 SolarGenerator.java \u2502 \u2502 \u2514\u2500\u2500 ThermalGenerator.java \u2502 \u251c\u2500\u2500 PowerBlock.java \u2502 \u251c\u2500\u2500 production \u2502 \u2502 \u251c\u2500\u2500 Cultivator.java \u2502 \u2502 \u251c\u2500\u2500 Drill.java \u2502 \u2502 \u251c\u2500\u2500 Fracker.java \u2502 \u2502 \u251c\u2500\u2500 GenericCrafter.java \u2502 \u2502 \u251c\u2500\u2500 GenericSmelter.java \u2502 \u2502 \u251c\u2500\u2500 Incinerator.java \u2502 \u2502 \u251c\u2500\u2500 LiquidConverter.java \u2502 \u2502 \u251c\u2500\u2500 Pump.java \u2502 \u2502 \u251c\u2500\u2500 Separator.java \u2502 \u2502 \u2514\u2500\u2500 SolidPump.java \u2502 \u251c\u2500\u2500 RespawnBlock.java \u2502 \u251c\u2500\u2500 Rock.java \u2502 \u251c\u2500\u2500 sandbox \u2502 \u2502 \u251c\u2500\u2500 ItemSource.java \u2502 \u2502 \u251c\u2500\u2500 ItemVoid.java \u2502 \u2502 \u251c\u2500\u2500 LiquidSource.java \u2502 \u2502 \u251c\u2500\u2500 PowerSource.java \u2502 \u2502 \u2514\u2500\u2500 PowerVoid.java \u2502 \u251c\u2500\u2500 StaticWall.java \u2502 \u251c\u2500\u2500 storage \u2502 \u2502 \u251c\u2500\u2500 CoreBlock.java \u2502 \u2502 \u251c\u2500\u2500 LaunchPad.java \u2502 \u2502 \u251c\u2500\u2500 StorageBlock.java \u2502 \u2502 \u251c\u2500\u2500 Unloader.java \u2502 \u2502 \u2514\u2500\u2500 Vault.java \u2502 \u251c\u2500\u2500 TreeBlock.java \u2502 \u2514\u2500\u2500 units \u2502 \u251c\u2500\u2500 CommandCenter.java \u2502 \u251c\u2500\u2500 MechPad.java \u2502 \u251c\u2500\u2500 RallyPoint.java \u2502 \u251c\u2500\u2500 RepairPoint.java \u2502 \u2514\u2500\u2500 UnitFactory.java \u251c\u2500\u2500 BlockStorage.java \u251c\u2500\u2500 Build.java \u251c\u2500\u2500 CachedTile.java \u251c\u2500\u2500 consumers \u2502 \u251c\u2500\u2500 ConsumeItemFilter.java \u2502 \u251c\u2500\u2500 ConsumeItems.java \u2502 \u251c\u2500\u2500 Consume.java \u2502 \u251c\u2500\u2500 ConsumeLiquidBase.java \u2502 \u251c\u2500\u2500 ConsumeLiquidFilter.java \u2502 \u251c\u2500\u2500 ConsumeLiquid.java \u2502 \u251c\u2500\u2500 ConsumePower.java \u2502 \u251c\u2500\u2500 Consumers.java \u2502 \u2514\u2500\u2500 ConsumeType.java \u251c\u2500\u2500 DirectionalItemBuffer.java \u251c\u2500\u2500 Edges.java \u251c\u2500\u2500 ItemBuffer.java \u251c\u2500\u2500 LegacyColorMapper.java \u251c\u2500\u2500 meta \u2502 \u251c\u2500\u2500 Attribute.java \u2502 \u251c\u2500\u2500 BlockBars.java \u2502 \u251c\u2500\u2500 BlockFlag.java \u2502 \u251c\u2500\u2500 BlockGroup.java \u2502 \u251c\u2500\u2500 BlockStat.java \u2502 \u251c\u2500\u2500 BlockStats.java \u2502 \u251c\u2500\u2500 BuildVisibility.java \u2502 \u251c\u2500\u2500 PowerType.java \u2502 \u251c\u2500\u2500 Producers.java \u2502 \u251c\u2500\u2500 StatCategory.java \u2502 \u251c\u2500\u2500 StatUnit.java \u2502 \u251c\u2500\u2500 StatValue.java \u2502 \u2514\u2500\u2500 values \u2502 \u251c\u2500\u2500 AmmoListValue.java \u2502 \u251c\u2500\u2500 BooleanValue.java \u2502 \u251c\u2500\u2500 BoosterListValue.java \u2502 \u251c\u2500\u2500 ItemFilterValue.java \u2502 \u251c\u2500\u2500 ItemListValue.java \u2502 \u251c\u2500\u2500 LiquidFilterValue.java \u2502 \u251c\u2500\u2500 LiquidValue.java \u2502 \u251c\u2500\u2500 NumberValue.java \u2502 \u2514\u2500\u2500 StringValue.java \u251c\u2500\u2500 modules \u2502 \u251c\u2500\u2500 BlockModule.java \u2502 \u251c\u2500\u2500 ConsumeModule.java \u2502 \u251c\u2500\u2500 ItemModule.java \u2502 \u251c\u2500\u2500 LiquidModule.java \u2502 \u2514\u2500\u2500 PowerModule.java \u251c\u2500\u2500 Pos.java \u251c\u2500\u2500 producers \u2502 \u251c\u2500\u2500 ProduceItem.java \u2502 \u2514\u2500\u2500 Produce.java \u251c\u2500\u2500 StaticTree.java \u251c\u2500\u2500 Tile.java \u2514\u2500\u2500 WorldContext.java","title":"Modding"},{"location":"modding/#modding","text":"Mindustry mods are simply directories of assests. There are many ways to use the modding API, depending on exactly what you want to do, and how far you're willing to go to do it. You could just resprite existing game content, you can create new game content with the simpler Json API (which is the main focus of this documentation), you can add custom sounds (or reuse existing ones). It's possible to add maps to campaign mode, and add scripts to program special behavior into your mod, like custom effects. Sharing your mod is as simple as giving someone your project directory; mods are also cross platfrom to any platform that supports them. Realistically speaking you'll want to use GitHub , you should also checkout the Example Mod repository on GitHub: https://github.com/Anuken/ExampleMod To make mods all you really need is any computer with a text editor.","title":"Modding"},{"location":"modding/#directory-structure","text":"Your project directory should look something like this: project \u251c\u2500\u2500 mod.json \u251c\u2500\u2500 content \u2502 \u251c\u2500\u2500 items \u2502 \u251c\u2500\u2500 blocks \u2502 \u251c\u2500\u2500 mechs \u2502 \u251c\u2500\u2500 liquids \u2502 \u251c\u2500\u2500 units \u2502 \u2514\u2500\u2500 zones \u251c\u2500\u2500 maps \u251c\u2500\u2500 bundles \u251c\u2500\u2500 sounds \u251c\u2500\u2500 schematics \u251c\u2500\u2500 scripts \u251c\u2500\u2500 sprites-override \u2514\u2500\u2500 sprites mod.json (required) metadata file for your mod, content/* directories for game Content , maps/ directory for Zone maps, bundles/ directory for Bundles , sounds/ directory for Sound files, schematics/ directory for Schematic files, scripts/ directory for Scripts , sprites-override/ Sprites directory for overriding ingame content, sprites/ Sprites directory for your content, Every platform has a different user application data directory, and this is where your mods should be placed: Linux: ~/.local/share/Mindustry/mods/ Steam: steam/steamapps/common/Mindustry/mods/ Windows: %appdata%/Mindustry/mods/ Apple: ~/Library/Application Support/Mindustry/mods/ Note that your filenames should be lowercased and hyphen separated: correct: my-custom-block.json incorrect: My Custom Block.json","title":"Directory Structure"},{"location":"modding/#hjson","text":"Mindustry uses Hjson , which for anyone who knows Json, is simply a superset of the very popular serialization language known as Json . \u2013 This means that any valid Json will work, but you get extra useful stuff: # single line comment // single line comment /* multiline comment */ key1: single line string key2: ''' multiline string ''' key3: [ value 1 value 2 value 3 ] key4: { key1: string key2: 0 } If you don't know any of those words. \u2013 A serialization language, is simply a language which encodes information for a program, and encode means to translate informantion from one form to another, and in this case, to translate text into Java data structures.","title":"Hjson"},{"location":"modding/#modjson","text":"At the root of your project directory, you must have a mod.json which defines the basic metadata for your project. This file can also be (optionally) named mod.hjson to potentially help your text editor pick better syntax highlighting. name: Mod Name displayName: Mod [red]Name[] author: Yourself description: This is a useless description. version: \"1.0\" minGameVersion: \"100.3\" dependencies: [ ] name will be used to reference to your mod, so name it carefully; displayName this will be used as a display name for the UI, which you can use to add formatting to said name; description of the mod will be rendered in the ingame mod manager, so keep it short and to the point; dependencies is optional, if you want to know more about that, go to the dependencies section; minGameVersion is the minimum build version of the game.","title":"mod.json"},{"location":"modding/#content","text":"At the root of your project directory you can have a content/ directory, and this is where all the Json/Hjson data goes. Inside of content/ you have subdirectories for the various kinds of content, these are the current common ones: content/items/ for items , like copper and surge-alloy ; content/blocks/ for blocks , like turrets and floors; content/mechs/ for mechs , like tau and glaive ; content/liquids/ for liquids , like water and slag ; content/units/ for flying or ground units , like reaper and dagger ; content/zones/ for zones , configuration of campaign maps. Note that each one of these subdirectories needs a specific content type. The filenames of these files is important, because the stem name of your path (filename without the extension) is used to reference it. Furthermore the files within these content/<content-type>/* directories may be arbitrarly nested into other sub-directories of any name, to help you organize them further, for example: content/items/metals/iron.hjson , which would respectively create an item named iron . The content of these files will tend to look something like this: type: TypeOfThing name: Name Of Thing description: Description of thing. # ... more fields here ... field type notes type String Content type of this object. name String Displayed name of content. description String Displayed description of content. Other fields included will be the fields of the type itself.","title":"Content"},{"location":"modding/#types","text":"Types have numerous fields, but the important one is type ; this is a special field used by the content parser, that changes which type your object is. A Router type can't be a Turret type , as they're just completely different. Types extend each other, so if MissileBulletType extends BasicBulletType , you'll have access to all the fields of BasicBulletType inside of MissileBulletType like damage , lifetime and speed . Fields are case sensitive: hitSize =/= hitsize . What you can expect a field to do is up to the specific type, some types do absolutely nothing with their fields, and work mostly as a base types will extend from. One such type is Block . type can be refer to the actual type field of the object. A type may also refer to other things like float is a type so it means you can type 0.3 in a field. Here you can see, the type of the top level object is Revenant , but the type of the bullet is BulletType so you can use MissileBulletType , because MissileBulletType extends BulletType . type: Revenant weapon: { bullet: { type: MissileBulletType damage: 9000 } }","title":"Types"},{"location":"modding/#tech-tree","text":"Much like type there exist another magical field known as research which can go at the root of any block object to put it in the techtree. research: duo This would put your block after duo in the techtree, and to put it after your own mods block you would write your <block-name> , a mod name prefix is only required if you're using the content from another mod. Research cost will be 40 + round(requirements ^ 1.25) * 6 rounded down to the nearest 10 , where requirements is the build cost of your block. (in otherwords you can't set requirements and research cost individually)","title":"Tech Tree"},{"location":"modding/#sprites","text":"All you need to make sprites, is an image editor that supports transparency (aka: not paint). Block sprites should be 32 * size , so a 2x2 block would require a 64x64 image. Images must be .png files with 32 bit depth. Sprites can simply be dropped in the sprites/ subdirectory. The content parser will look through it recursively, so you can organize them how ever you feel. Content is going to look for sprites relative to it's own name. content/blocks/my-hail.json has the name my-hail and similarly sprites/my-hail.png has the name my-hail , so it'll be used by this content. Content may look for multiple sprites. my-hail could be a turret, and it could look for the suffix <name>-heat and what this means is it'll look for my-hail-heat . You can find all the vanilla sprites here: https://github.com/Anuken/Mindustry/tree/master/core/assets-raw/sprites Another thing to know about sprites is that some of them are modified by the game. Turrets specifically have a black border added to them, so you must account for that while making your sprites, leaving transparent space around turrets for example: Ripple To override ingame content sprites, you can simply put them in sprites-override/ .","title":"Sprites"},{"location":"modding/#sound","text":"Custom sounds can be added through the modding system by dropping them in the sounds/ subdirectory. It doesn't matter where you put them. Two formats are needed: .ogg required for Desktop/Android .mp3 required for iOS Just like any other assets, you reference them by the stem of your filenames, so pewpew.ogg and pewpew.mp3 can be referenced with pewpew from a field of type Sound . Here's a list of built-in sounds: artillery back bang beam bigshot boom break build buttonClick click conveyor corexplode door drill empty explosionbig explosion fire flame2 flame laserbig laser machine message missile pew place press release respawning respawn shootBig shoot shootSnap shotgun spark splash spray thruster unlock wave windowHide","title":"Sound"},{"location":"modding/#dependencies","text":"You can add dependencies to your mod by simple adding other mods name in your mod.json : dependencies: [ other-mod-name not-a-mod ] The name of dependencies are lower-cased and spaces are replaced with - hyphens, for example Other MOD NamE becomes other-mod-name . To reference the other mods assets, you must prefix the asset with the other mods name: other-mod-name-not-copper would reference not-copper in other-mod-name other-mod-name-angry-dagger would reference angry-dagger in other-mod-name not-a-mod-angry-dagger would reference angry-dagger in not-a-mod","title":"Dependencies"},{"location":"modding/#bundles","text":"An optional addition to your mod is called bundles. The main use of bundles are give translations of your content, but there's no reason you couldn't use them in English. These are plaintext files which go in the bundles/ subdirectory, and they should be named something like bundle_ru.properties (for Russian). The contents of this file is very simple: block.example-mod-silver-wall.name = \u0421\u0435\u0440\u0435\u0431\u0440\u044f\u043d\u0430\u044f \u0421\u0442\u0435\u043d\u0430 block.example-mod-silver-wall.description = \u0421\u0442\u0435\u043d\u0430 \u0438\u0437 \u0441\u0435\u0440\u0435\u0431\u0440\u0430. If you've read the first few sections of this guide, you'll spot it right away: <content type>.<mod name>-<content name>.name <content type>.<mod name>-<content name>.description Notes: mod/content names are lowercased and hyphen separated. List of content type: item block mech bullet liquid status unit weather effect zone loadout typeid List of filenames relative to languages: English bundle.properties Czech bundle_cs.properties German bundle_de.properties Spanish bundle_es.properties Estonian bundle_et.properties Basque bundle_eu.properties French BE bundle_fr_BE.properties French bundle_fr.properties Bergabung bundle_in_ID.properties Italian bundle_it.properties Japanese bundle_ja.properties Korean bundle_ko.properties Dutch BE bundle_nl_BE.properties Dutch bundle_nl.properties Polish bundle_pl.properties Portuguese BR bundle_pt_BR.properties Portuguese bundle_pt.properties Russian bundle_ru.properties Danish bundle_sv.properties Turkman bundle_tk.properties Turkish bundle_tr.properties Ukrainian bundle_uk_UA.properties Chinese CN bundle_zh_CN.properties Chinese TW bundle_zh_TW.properties","title":"Bundles"},{"location":"modding/#markup","text":"The text renderer uses a simple makeup language for coloring text. [name] sets the color by name, there's a few built-in colors ; [#rrggbb] / [#rrggbbaa] sets the color by hex value, with each value being anything from 00 to ff : rr is the red value, gg is the green value, bb is the blue value, aa is the alpha value; [] sets the color back to the previous color; [[ escapes the left bracket, so you can write [[red] to write and it'll render as [red] . Notes: erros/unknown colors will be silently ignored. Example: [red]red [#ff0000]full-red [#ff000066]half-red [#ff000033]half-half-red [#00ff00]green []half-half-red","title":"Markup"},{"location":"modding/#built-in-colors","text":"[clear]clear [black]black [white]white [lightgray]lightgray [gray]gray [darkgray]darkgray [blue]blue [navy]navy [royal]royal [slate]slate [sky]sky [cyan]cyan [teal]teal [green]green [acid]acid [lime]lime [forest]forest [olive]olive [yellow]yellow [gold]gold [goldenrod]goldenrod [orange]orange [brown]brown [tan]tan [brick]brick [red]red [scarlet]scarlet [coral]coral [salmon]salmon [pink]pink [magenta]magenta [purple]purple [violet]violet [maroon]maroon","title":"Built-in Colors"},{"location":"modding/#schematic","text":"Fields that require the type Schematic can either take a built-in loadout (see the Zone section) a base64 string, or the stem name of a .msch file in the schematics/ subdirectory. As of now, the only purpose of schematics is to give a zone a loadout.","title":"Schematic"},{"location":"modding/#scripts","text":"Scripting in Mindustry is done with the Rhino JavaScript runtime. Scripts may be added to your mod by putting them in scripts/ . Using the built-in extendContent function, you can extend existing Java types from JS, using allowed classes which are injected into your namespace. For example: scripts/silo.js // create a simple shockwave effect const siloLaunchEffect = newEffect(20, e => { // color goes from white to light gray Draw.color(Color.white, Color.lightGray, e.fin()); // line thickness goes from 3 to 0 Lines.stroke(e.fout() * 3); // draw a circle whose radius goes from 0 to 100 Lines.circle(e.x, e.y, e.fin() * 100); }); // create the block type const silo = extendContent(Block, \"scatter-silo\", { // override the method to build configuration buildConfiguration(tile, table) { table.addImageButton( Icon.arrowUpSmall, Styles.clearTransi, // configure the tile to signal that it has been // pressed (this sync on client to server) run(() => tile.configure(0)) ).size(50); }, // override configure event configured(tile, value) { // make sure this silo has the items it needs to fire if (tile.entity.cons.valid()) { // make this effect occur at the tile location Effects.effect(siloLaunchEffect, tile); // create 10 bullets at this tile's location with // random rotation and velocity/lifetime for (var i = 0; i < 10; i++) { Calls.createBullet( Bullets.flakExplosive, tile.getTeam(), tile.drawx(), tile.drawy(), Mathf.random(360), Mathf.random(0.5, 1.0), Mathf.random(0.2, 1.0) ); } // triggering consumption makes it use up the // items it requires tile.entity.cons.trigger(); } } }); content/blocks/scatter-silo.hjson localizedName: \"Scatter Silo\" description: \"A player-activatable block that scatters bullets everywhere upon use.\" category: turret size: 2 update: true solid: true hasItems: true configurable: true requirements: [ \"graphite/75\" \"titanium/30\" ] consumes: { items: { items: [ \"scrap/10\" ] } } More examples: entity-lib","title":"Scripts"},{"location":"modding/#github","text":"Once you have a mod of some kind, you'll want to actually share it, and you may even want to work with other people on it, and to do that you can use GitHub . If you don't know what Git (or GitHub) is at all, then you should look into GitHub Desktop , otherwise simply use your favorite command line tool or text editor plugin. All you need understand is how to open repositories on GitHub, stage and commit changes in your local repository, and push changes to the GitHub repository. Once your project is on GitHub, there are three ways to share it: with the endpoint, for example Anuken/ExampleMod , which could then be typed in the ingame GitHub interface, and that would download it; with the zip file, for example https://github.com/Anuken/ExampleMod/archive/master.zip , which would download the repository as a zip file, and put in mod directory (unzipping is not required); add the typic/tags mindustry-mod on your repository, which should cause the #mods Discord bot to pick it up and render it in it's listh.","title":"GitHub"},{"location":"modding/#faq","text":"time in game is calculated through ticks ; ticks sometimes called frames , are assumed to be 60/1 second; tilesize is 8 units internally; to calculate range out of lifetime and speed you can do lifetime * speed = range ; Abstract what is abstract ? all you need to know about abstract types, is this is a Java specific term, which means you cannot instantiate/initialize this specific type by itself. If you do so you'll probably get an \"initialization exception\" of some kind; what is a NullPointerException ? This is an error message that indicates a field is null and shouldn't be null, meaning one of the required fields may be missing; bleeding-edge what is bleeding-edge ? This is the developer version of Mindustry, specifically it's refering to the Github master branch. Changes on bleeding-edge usually make it into Mindustry in the next release.","title":"FAQ"},{"location":"modding/#change-log","text":"This is a log of changes done on the Mindustry Master branch that affected the modding API. The sections are ordered by date commited, and provide a description of what was changed, with a link to the diff on Github.","title":"Change Log"},{"location":"modding/#2020","text":"","title":"2020"},{"location":"modding/#mar-5","text":"[ commit Tech tree balance ] updated research cost formula","title":"Mar 5"},{"location":"modding/#feb-11","text":"[ commit improved battery brightness display ] added <name>-top region for battery;","title":"Feb 11"},{"location":"modding/#jan-24","text":"[ commit fixed #1436 / fixed crawlers not exploding ] added instantDisappear to BulletType ;","title":"Jan 24"},{"location":"modding/#jan-23","text":"[ commit implemented #1093 ] added attribute to ThermalGenerator ;","title":"Jan 23"},{"location":"modding/#jan-22","text":"[ commit added default ore flags for modded ores ] added oreDefault , oreThreshold and oreScale to Floor ;","title":"Jan 22"},{"location":"modding/#jan-19","text":"[ commit cleanup of scripts ] added killShooter attribute for BulletType ;","title":"Jan 19"},{"location":"modding/#jan-14","text":"[ commit visual tweaks ] added -spinner region to Separator ; removed spinnerRadius , spinnerLength , spinnerThickness , color from Separator ;","title":"Jan 14"},{"location":"modding/#jan-08","text":"[ commit make rebuildable a block attribute (#1338) ] added rebuildable to Block ;","title":"Jan 08"},{"location":"modding/#jan-07","text":"[ commit cleanup ] added drawCell , drawItems and drawLight to Mech ;","title":"Jan 07"},{"location":"modding/#jan-04","text":"[ commit merge remote-tracking branch 'origin/master' ] added targetDistance to Weapon ;","title":"Jan 04"},{"location":"modding/#jan-03","text":"[ commit use findAll to iterate through mod content ] content/ support for organizing .hjson files into directories;","title":"Jan 03"},{"location":"modding/#2019","text":"","title":"2019"},{"location":"modding/#dec-12","text":"[ commit add liquid void block ] added LiquidVoid block;","title":"Dec 12"},{"location":"modding/#dec-09","text":"[ commit Removed unnecessary unit types ] changed unit types names: Draug \u2192 MinerDrone ; Spirit \u2192 RepairDrone ; Phantom \u2192 BuilderDrone ; [ Dagger Crawler Titan Fortress Eruptor ] \u2192 GroundUnit ; [ Wraith Ghoul ] \u2192 FlyingUnit ; Revenant \u2192 HoverUnit ;","title":"Dec 09"},{"location":"modding/#dec-08","text":"[ commit Merge branches master and rhino-js-suffering ] scripts/ sub-directory and Rhino JS runtime was added; displayName can now be used as field name in mod.json","title":"Dec 08"},{"location":"modding/#dec-04","text":"[ commit Added experimental server block syncing ] sync field for Block type was added;","title":"Dec 04"},{"location":"modding/#nov-26","text":"[ commit Texture overrides / Potential mod texture binding optimizations ] sprites-override/ subdirectory can now be used to override existing ingame sprites;","title":"Nov 26"},{"location":"modding/#nov-22","text":"[ commit Switched to hjson extension ] .hjson can now be used as a file extension;","title":"Nov 22"},{"location":"modding/#nov-22_1","text":"[ commit Added optional mod minimum game version ] minGameVersion can now be used within mod.json ;","title":"Nov 22"},{"location":"modding/#nov-20","text":"[ commit Better mod parsing ] liquid/amount can now be used as a string for LiquidStack ; item/amount can now be used as a string for ItemStack ; mod.json now supports hjson;","title":"Nov 20"},{"location":"modding/#world","text":"","title":"World"},{"location":"modding/#block","text":"Extends BlockStorage Block is the base type of all blocks in the game. All blocks have at least one sprite, which is picked relative to the blocks name. Fields for all objects that are blocks. field type default notes update boolean whether this block has a tile entity that updates destructible boolean whether this block has health and can be destroyed unloadable boolean true whether unloaders work on this block solid boolean whether this is solid solidifes boolean whether this block CAN be solid. rotate boolean whether this is rotateable breakable boolean whether you can break this with rightclick rebuildable boolean true whether to add this block to brokenblocks or not (like ShockMine or NuclearReactor ) placeableOn boolean true whether this floor can be placed on. insulated boolean false whether this block has insulating properties. health int -1 tile entity health baseExplosiveness float 0 base block explosiveness floating boolean false whether this block can be placed on edges of liquids. size int 1 multiblock size; 1 makes the block 1x1, 2 makes the block 2x2, and so on. expanded boolean false Whether to draw this block in the expanded draw range. timers int 0 Max of timers used. cacheLayer CacheLayer normal Cache layer. Only used for 'cached' rendering. fillesTile true Special flag; if false, floor will be drawn under this block even if it is cached. alwaysReplace boolean false whether this block can be replaced in all cases group BlockGroup none Unless canReplace is overriden, blocks in the same group can replace each other. priority TargetPriority base Targeting priority of this block, as seen by enemies. configurable boolean Whether the block can be tapped and selected to configure. consumesTap boolean Whether this block consumes touchDown events when tapped. drawLiquidLight boolean true Whether to draw the glow of the liquid for this block, if it has one. posConfig boolean Whether the config is positional and needs to be shifted. sync boolean Whether to periodically sync this block across the network. targetable boolean true Whether units target this block. canOverdrive boolean true Whether the overdrive core has any effect on this block. outlineColor Color 404049 Outlined icon color. outlineIcon boolean false Whether the icon region has an outline added. hasShadow boolean true Whether this block has a shadow under it. breakSound Sound boom Sounds made when this block breaks. activeSound Sound none The sound that this block makes while active. One sound loop. Do not overuse. activeSoundVolume float 0.5 Active sound base volume. idleSound Sound none The sound that this block makes while idle. Uses one sound loop for all blocks. idleSoundVolume float 0.5 Idle sound base volume. requirements [ ItemStack ] Cost of constructing and researching this block. category Category distribution Category in place menu. buildCost float Cost of building this block; do not modify directly! buildVisibility BuildVisibility hidden Whether this block is visible and can currently be built. buildCostMultiplier float 1 Multiplier for speed of building this block. instantTransfer boolean false Whether this block has instant transfer. alwaysUnlocked boolean false layer Layer null Layer to draw extra stuff on. layer2 Layer null Extra layer to draw extra stuff on. Sprites: <name> the main sprite for the block.","title":"Block"},{"location":"modding/#consumers","text":"This type is commonly used in block type with it's field consumes , it's a type that allows your block to consume something, and how this field works is up to the specific type extension you're using. field type notes item String shorthand for items items ConsumeItems consume a number of different items liquid ConsumeLiquid consume a single liquid power float or ConsumePower consume or buffer power powerBuffered float amount of power buffered Notes: you shouldn't have power and powerBuffered . For example with ConsumeItems and ConsumeLiquid : items: { items: [ copper/10 surge-alloy/5 ] booster: true optional: true } liquid: { water/1.0 }","title":"Consumers"},{"location":"modding/#consume","text":"Abstract type which defines a type of resource that a block can consume. field type default notes optional boolean consumer will not influence consumer validity. booster boolean consumer will be displayed as a boost input. update boolean true","title":"Consume"},{"location":"modding/#consumeitems","text":"Extends Consume Type to consume ItemStacks. field type items [ ItemStack ]","title":"ConsumeItems"},{"location":"modding/#consumeliquid","text":"Extends Consume Type to consume a LiquidStack. field type default notes liquid String the name of liquid type consumed amount float amount used per frame timePeriod float 60 how much time is taken to use this liquid, example: a normal ConsumeLiquid with 10/s and a 10 second timePeriod would display as 100 seconds , but without a time override it would display as 10 liquid/second . This is used for generic crafters.","title":"ConsumeLiquid"},{"location":"modding/#consumepower","text":"Extends Consume Type to consume or buffer power. field type notes usage float The maximum amount of power which can be processed per tick. This might influence efficiency or load a buffer capacity float The maximum power capacity in power units. buffered boolean True if the module can store power.","title":"ConsumePower"},{"location":"modding/#blockstorage","text":"Abstract type that extends Content Type for blocks which may store a buffer of items or liquid. field type default hasItems boolean hasLiquids boolean hasPower boolean outputsLiquid boolean false consumesPower boolean true outputsPower boolean false itemCapacity int 10 liquidCapacity float 10 item float 10 liquidPressure float 1 consumes Consumers","title":"BlockStorage"},{"location":"modding/#environment","text":"Environmental blocks are blocks that must be placed from the editor, and they're the ones that will generally dictate how the game can or will be played. These blocks wont appear on a map unless you've built a map to support them.","title":"Environment"},{"location":"modding/#floor","text":"Extends Block Type used for floors themselves or extended to make ores and other things. field type default notes variants int 3 number of different variant regions to use. edge String stone edge fallback, used mainly for ores. speedMultiplier float 1 multiplies unit velocity by this when walked on. dragMultiplier float 0 multiplies unit drag by this when walked on. damageTaken float 0 damage taken per tick on this tile. drownTime float 0 how many ticks it takes to drown on this. walkEffect Effect ripple effect when walking on this floor . drownUpdateEffect Effect bubble effect displayed when drowning on this floor . status StatusEffect none status effect applied when walking on. statusDuration float 60 intensity of applied status effect. liquidDrop Liquid liquids that drop from this block, used for pumps. itemDrop Item item that drops from this block, used for drills. isLiquid boolean whether this block can be drowned in. playerUnmineable boolean false block cannot be mined by players if true. blendGroup Block this group of blocks that this block does not draw edges on. updateEffect Effect none effect displayed when randomly updated. attributes Attributes array of affinities to certain things. oreDefault boolean false whether this ore generates in maps by default. oreScale float 24 ore generation param, for example thorium is 25.38 , copper is 23.47 . oreThreshold float 0.828 ore generation param, for example thorium is 0.882 , copper is 0.81 . Notes: this type requires a sprite to be visible from the map editor. Sprites: <name><1..> for variant sprites of the floor; <name>-edge optional edge sprite.","title":"Floor"},{"location":"modding/#overlayfloor","text":"Extends Floor For example: tendrils","title":"OverlayFloor"},{"location":"modding/#doubleoverlayfloor","text":"Extends OverlayFloor For example: pebbles","title":"DoubleOverlayFloor"},{"location":"modding/#oreblock","text":"Extends OverlayFloor field default variants 3","title":"OreBlock"},{"location":"modding/#rock","text":"Extends Block field type variants int Defaults: field default breakable true alwaysReplace true","title":"Rock"},{"location":"modding/#staticwall","text":"Extends Rock Defaults: field default breakable false alwaysReplace false solid true variants 2 Sprites: <name>-large.png which is a 2x2 variant of the block.","title":"StaticWall"},{"location":"modding/#statictree","text":"Extends StaticWall For example: spore-pine snow-pine pine shrubs","title":"StaticTree"},{"location":"modding/#treeblock","text":"Extends Block Defaults: field default solid true layer power expanded true","title":"TreeBlock"},{"location":"modding/#crafting","text":"","title":"Crafting"},{"location":"modding/#genericcrafter","text":"Extends Block field type default notes outputItem ItemStack one item stack outputLiquid LiquidStack one liquid stack craftTime float 80 craftEffect Effect none updateEffect Effect none updateEffectChance float 0.04 Defaults: field default update true solid true hasItems true health 60 idleSound machine idleSoundVolume 0.03 sync true","title":"GenericCrafter"},{"location":"modding/#genericsmelter","text":"Extends GenericCrafter A GenericCrafter with a new glowing region drawn on top. field type default flameColor Color ffc999 Sprite suffix: <name>-top","title":"GenericSmelter"},{"location":"modding/#separator","text":"Extends Block Separator takes liquid as an input, and will produce items from it's stack randomly, using the amount of items in the stack as probability. Separator can't accept items as input, as it will output all the items you put in it, regardless of what you put in results . field type default notes results [ ItemStack ] [required] craftTime float spinnerSpeed float 3 color Color 858585 Defaults: field default update true solid true hasItems true hasLiquids true Sprite suffixes: <name>-liquid <name>-spinner","title":"Separator"},{"location":"modding/#sandbox","text":"","title":"Sandbox"},{"location":"modding/#powervoid","text":"Extends PowerBlock Deafults: field default consumesPower","title":"PowerVoid"},{"location":"modding/#powersource","text":"Extends PowerNode Defaults: field default maxNodes 100 outputsPower true consumesPower false","title":"PowerSource"},{"location":"modding/#itemsource","text":"Extends Block Defaults: field default hasItems true update true solid true group transportation configurable true","title":"ItemSource"},{"location":"modding/#itemvoid","text":"Extends Block Defaults: field default update true solid true","title":"ItemVoid"},{"location":"modding/#liquidsource","text":"Extends Block Defaults: field default hasLiquids true update true solid true liquidCapacity 100 configurable true outputsLiquid true","title":"LiquidSource"},{"location":"modding/#liquidvoid","text":"Extends Block Defaults: field default hasLiquids true solid true update true","title":"LiquidVoid"},{"location":"modding/#logic","text":"","title":"Logic"},{"location":"modding/#messageblock","text":"Extends Block field type default maxTextLength int 220 maxNewlines int 24 Defaults: field default solid true configurable true destructible true","title":"MessageBlock"},{"location":"modding/#defense","text":"","title":"Defense"},{"location":"modding/#wall","text":"Extends Block field type default variants int 0 Defaults: field default solid true destructible true group walls buildCostMultiplier 5","title":"Wall"},{"location":"modding/#deflectorwall","text":"Extends Wall \u2013 Wall that deflects low damage bullets. field type default hitTime float 10 maxDamageDeflect float 10","title":"DeflectorWall"},{"location":"modding/#surgewall","text":"Extends Wall \u2013 Wall that creates lightning when shot. field type default lightningChance float 0.05 lightningDamage float 15 lightningLength int 17","title":"SurgeWall"},{"location":"modding/#door","text":"Extends Wall field type default openfx Effect dooropen closefx Effect doorclose Defaults: field default solid false solidfies true consumesTap true Sprites: <name>-open","title":"Door"},{"location":"modding/#mendprojector","text":"Extends Block field type default color Color 84f491 phase Color ffd59e reload float 250 range float 60 healPercent float 12 phaseBoost float 12 phaseRangeBoost float 50 useTime float 400 Sprites: <name>-top","title":"MendProjector"},{"location":"modding/#overdriveprojector","text":"Extends Block field type default color Color feb380 phase Color ffd59e reload float 60 range float 80 speedBoost float 1.5 speedBoostPhase float 0.75 useTime float 400 phaseRangeBoost float 20 Defaults: field default solid true update true hasPower true hasItems true canOverdrive false Sprites: <name>-top","title":"OverdriveProjector"},{"location":"modding/#forceprojector","text":"Extends Block field type default phaseUseTime float 350 phaseRadiusBoost float 80 radius float 101.7 breakage float 550 cooldownNormal float 1.75 cooldownLiquid float 1.5 cooldownBrokenBase float 0.35 basePowerDraw float 0.2 Defaults: field default update true solid true hasPower true canOverdrive false hasLiquids true hasItems true consumes cold-liquid Sprites: <name>-top","title":"ForceProjector"},{"location":"modding/#cold-liquid","text":"temperature less then 0.5 flammability less then 0.1 booster true optional true update false","title":"cold-liquid"},{"location":"modding/#shockmine","text":"Extends Block field type default cooldown float 80 tileDamage float 5 damage float 13 length int 10 tendrils int 6 Defaults: field default update false destructible true solid false targetable false layer overlay rebuildable false","title":"ShockMine"},{"location":"modding/#turrets","text":"This section is for turret types. All turrets shoot BulletType , and this means LiquidTurret can shoot MissileBulletType and ItemTurret can shoot LiquidBulletType .","title":"Turrets"},{"location":"modding/#turret","text":"Abstract type which extends Block The purpose of a turret type is to be a Block that shoots bullets. Turret is the base type for all turrets, it's abstract meaning it shouldn't be used directly, but everything which extends it will get it's fields. field type default notes heatColor Color turretHeat The color of the -heat sprite. shootEffect Effect none An effect fired on tile in the direction the turret is aiming when it shoots. smokeEffect Effect none An effect fired on tile in the direction the turret is aiming when it shoots. ammoUseEffect Effect none An effect fired on the tile, when ammo is consumed. shootSound Sound shoot A sound created from the tile when a bullet is fired. ammoPerShot int 1 The amount of ammo used per shot. ammoEjectBack float 1 The eject angle of shells in radians. range float 50 The range at which the turret can target enemies. Range is in tilesize so 8 is 1 tile. reload float 10 The amount of ticks it takes to reload. inaccuracy float 0 The degrees of inaccuracy. shots int 1 The numbers of bullets fired at once. spread float 4 The angular spread of multiple bullets when shot. recoil float 1 The recoil of the turret when fired. restitution float 0.02 The restitution from recoil after shooting. (time taken to recenter) cooldown float 0.02 The amount of time it takes for the -heat sprite to become transparent. rotatespeed float 5 The degrees per tick at which the turret can rotate. shootCone float 8 The angle used to determine whether the turret should be shooting. shootShake float 0 The amount of camera shake. xRand float 0 The random x axis multiplier, to make bullets appear to come out of multiple places. Used in Swarmer for example. targetAir boolean true Whether this target can target air units. targetGround boolean true Whether this turret can target ground units or blocks. Defaults: field default priority turret update true solid true layer turret group turrets outlineIcon true Sprites: <name> the turret sprite, <name>-heat the heat map. Sprites-Override: block-<1..> global turret base override, where the number is the turrets size. Can be used to override existing turret bases, as well as adding larger ones.","title":"Turret"},{"location":"modding/#cooledturret","text":"Extends Turret \u2013 This is a base type that turrets which use Liquid to cool themselves extend from. field type default notes coolantMultiplier float 5 How much reload is lowered by for each unit of liquid of heat capacity. coolEffect Effect shoot Notes: doesn't take flammable fluid doesn't take hot fluid","title":"CooledTurret"},{"location":"modding/#itemturret","text":"Extends CooledTurret This type is a turret that uses items as ammo. The key to the ammo field should be the name of an Item , while the value may be any Built-in Bullets or a BulletType itself. type: ItemTurret ammo: { copper: standardCopper metaglass: { type: MissileBulletType damage: 2 } surge-alloy: { type: LiquidBulletType damage: 3 } } Here we're using copper to shoot standardCopper (built-in bullet) and metalglass to shoot a custom bullet of type MissileBulletType . field type default notes maxAmmo int 30 ammo { String: BulletType } String is the name of an Item , which will be used to select the type of bullet which will be shot. Defaults: field default hasItems true","title":"ItemTurret"},{"location":"modding/#liquidturret","text":"Extends Turret This type is just a turret that uses liquid as ammo. The key to ammo must be the name of a Liquid , while the value may either be the name of any Built-in Bullets or a BulletType itself. For example you could do something like this: type: LiquidTurret ammo: { water: { type: MissileBulletType damage: 9000 } slag: { type: LiquidBulletType damage: 0 } } fields type notes ammo { String: BulletType } object with Liquid names to bullet types. Defaults: fields default hasLiquids true activeSound spray","title":"LiquidTurret"},{"location":"modding/#doubleturret","text":"Extends ItemTurret ItemTurret that shoots from two side-by-side barrels. field type default shotWidth float 2 Default: field default shots 2","title":"DoubleTurret"},{"location":"modding/#artilleryturret","text":"Extends ItemTurret \u2013 Artillery turrets have special shooting calculations done to hit targets. field default targetAir false","title":"ArtilleryTurret"},{"location":"modding/#burstturret","text":"Extends ItemTurret \u2013 Turrets capable of bursts of specially spaced bullets, separated by long reload times. field type default burstSpacing float 5","title":"BurstTurret"},{"location":"modding/#powerturret","text":"Extends CooledTurret \u2013 Turret which uses power has ammo to shoot. field type default notes shootType BulletType [required] powerUse float 1 Defaults: field default hasPower true","title":"PowerTurret"},{"location":"modding/#chargeturret","text":"Extends PowerTurret field type default chargeTime float 30 chargeEffects int 5 chargeMaxDelay float 10 chargeEffect Effect none chargeBeginEffect Effect none","title":"ChargeTurret"},{"location":"modding/#laserturret","text":"Extends PowerTurret field type default notes firingMoveFract float 0.25 rotatespeed fraction when turret is shooting shootDuration float 100 Defaults: field default canOverdrive false coolantMultiplier 1 Doesn't update shoot if: liquid temperature greater or equal to 0.5 liquid flammability greater then 0.1","title":"LaserTurret"},{"location":"modding/#distribution","text":"","title":"Distribution"},{"location":"modding/#conveyor","text":"Extends Block field type default speed float 0 Default: field default rotate true update true layer overlay group transportation hasItems true itemCapacity 4 idleSound conveyor idleSoundVolume 0.004 unloadable false Sprite suffix: -<0..4>-<0..3> example: Conveyors-sprites","title":"Conveyor"},{"location":"modding/#armoredconveyor","text":"Extends Conveyor -A type of conveyor don't accept item coming from side","title":"ArmoredConveyor"},{"location":"modding/#router","text":"Extends Block Defaults: field default solid true update true hasItems true itemCapacity 1 group transportation uploadable false","title":"Router"},{"location":"modding/#junction","text":"Extends Block field type default notes speed float 26 frames taken to go through this junction capacity capacity 6 Defaults: field default update true solid true group transportation unloadable false","title":"Junction"},{"location":"modding/#itembridge","text":"Extends Block field type default range int transportTime float 2 Defaults: field default update true solid true hasPower true layer power expanded true itemCapacity 10 posConfig true configurable true hasItems true unloadable false group transportation Sprites: <name>-end example: bridge-conveyor-end <name>-bridge example: bridge-conveyor-bridge <name>-arrow example: bridge-conveyor-arrow","title":"ItemBridge"},{"location":"modding/#extendingitembridge","text":"Extends ItemBridge Defaults: field default hasItems true","title":"ExtendingItemBridge"},{"location":"modding/#buffereditembridge","text":"Extends ExtendingItemBridge field type default speed float 40 bufferCapacity int 50 Defaults: field default hasItems true hasPower false","title":"BufferedItemBridge"},{"location":"modding/#sorter","text":"Extends Block field type default notes invert boolean [optional] Defaults: field default update true solid true instantTransfer true group transportation configurable true unloadable false","title":"Sorter"},{"location":"modding/#overflowgate","text":"Extends Block Type used for overflow and underflow gates. field type default notes speed float 1 delta time multiplier for whether an item can be moved after an update cycle invert boolean false true makes it underflow Defaults: field default hasItems true solid true update true group transportation unloadable false","title":"OverflowGate"},{"location":"modding/#massdriver","text":"Extends Block \u2013 Uses driverBolt to transfer items. field type default range float rotateSpeed float 0.04 translation float 7 minDistribute int 10 knockback float 4 reloadTime float 100 shootEffect Effect shootBig2 smokeEffect Effect shootBigSmoke2 recieveEffect Effect mineBig shake float 3 Notes: range is limited by driverBolt 's max range, which is hard coded, so you cannot change it. Defaults: field default update true solid true posConfig true configurable true hasItems true layer turret hasPower true outlineIcon true Sprites: <name>-base","title":"MassDriver"},{"location":"modding/#liquid-blocks","text":"","title":"Liquid Blocks"},{"location":"modding/#liquidblock","text":"Extends Block \u2013 For blocks that can carry liquids. Apart from the better defaults, it also fetches extra sprites. Defaults: field default update true solid true hasLiquids true group liquids outputsLiquid true Sprites: <name>-liquid <name>-top <name>-bottom","title":"LiquidBlock"},{"location":"modding/#pump","text":"Extends LiquidBlock field type default pumpAmount float 1 field default layer overlay group liquids floating true","title":"Pump"},{"location":"modding/#conduit","text":"Extends LiquidBlock field type leakResistance float Defaults: field default rotate true solid false floating true Sprites: <name>-top-<0..6>","title":"Conduit"},{"location":"modding/#armoredconduit","text":"Extends Conduit Defaults: field default leakResistance 10 Sprites: <name>-cap","title":"ArmoredConduit"},{"location":"modding/#liquidoverflowgate","text":"Extends LiquidBlock Defaults: field default rotate true Sprites: <name>-top","title":"LiquidOverflowGate"},{"location":"modding/#liquidrouter","text":"Extends LiquidBlock","title":"LiquidRouter"},{"location":"modding/#liquidtank","text":"Extends LiquidRouter","title":"LiquidTank"},{"location":"modding/#liquidjunction","text":"Extends LiquidBlock","title":"LiquidJunction"},{"location":"modding/#liquidbridge","text":"Extends LiquidBridge field default hasItems false hasLiquids true outputsLiquid true group liquids","title":"LiquidBridge"},{"location":"modding/#liquidextendingbridge","text":"Extends ExtendingItemBridge field default hasItems false hasLiquids true outputsLiquid true group liquids","title":"LiquidExtendingBridge"},{"location":"modding/#power","text":"","title":"Power"},{"location":"modding/#powerblock","text":"Abstract type which extends Block Defaults: field default update true solid true hasPower true group power","title":"PowerBlock"},{"location":"modding/#powernode","text":"Extends PowerBlock field type default laserRange float 6 maxNodes int 3 Defaults: field default expanded true layer power configurable true consumesPower false outputsPower false","title":"PowerNode"},{"location":"modding/#powerdistributor","text":"Extends PowerBlock Defaults: field default consumesPower false outputsPower true","title":"PowerDistributor"},{"location":"modding/#battery","text":"Extends PowerDistributor field type default emptyLightColor Color f8c266 fullLightColor Color fb9567 Defauts: field default outputsPower true consumesPower true Sprites: <name>-top light region on top of the battery.","title":"Battery"},{"location":"modding/#powergenerator","text":"Extends PowerDistributor Power generators will produce power with their Consumers type. field type notes powerProduction float Power produced per tick at 100% ( 1.0 ) efficiency; 1 powerProduction is approximately 60 pu/s . Defaults: field default baseExplosiveness 5 sync true","title":"PowerGenerator"},{"location":"modding/#thermalgenerator","text":"Extends PowerGenerator \u2013 Generates power with the attribute of a tile. Power production is powerProduction * attribute , and attribute must be greater then 0.01 . field type default notes generateEffect Effect none attribute Attribute heat The attribute used to vary efficiency.","title":"ThermalGenerator"},{"location":"modding/#itemliquidgenerator","text":"Extends PowerGenerator \u2013 Base of power generation blocks. Notes: item efficiency is always 0.0 liquid efficiency is always 0.0 (this type doesn't produce power) field type default notes minItemEfficiency float 0.2 itemDuration float 70 number of ticks during which a single item will produce power. minLiquidEfficiency float 0.2 maxLiquidGenerate float 0.4 Maximum liquid used per frame. generateEffect Effect generatespark explodeEffect Effect generatespark heatColor Color ff9b59 randomlyExplode boolean true defaults boolean false Extra sprites: <name>-top if hasItems is true <name>-liquid","title":"ItemLiquidGenerator"},{"location":"modding/#singletypegenerator","text":"Extends ItemLiquidGenerator \u2013 Generates power from an item.","title":"SingleTypeGenerator"},{"location":"modding/#burnergenerator","text":"Extends ItemLiquidGenerator \u2013 Generates power from item flamability.","title":"BurnerGenerator"},{"location":"modding/#decaygenerator","text":"Extends ItemLiquidGenerator \u2013 Generates power from item radioactivity. Defaults: field default hasItems true hasLiquids false","title":"DecayGenerator"},{"location":"modding/#solargenerator","text":"Extends PowerGenerator \u2013 A generator that always produces 100% efficiency power. Notes: Lower targetting priority then other generators.","title":"SolarGenerator"},{"location":"modding/#nuclearreactor","text":"Extends PowerGenerator \u2013 Generates power relative to how many items are in storage, and explodes if it runs out of coolant. field type default notes lightColor Color 7f19ea coolColor Color ffffff00 hotColor Color ff9575a3 itemDuration float 120 time to consume 1 fuel heating float 0.01 heating per frame * fullness smokeThreshold float 0.3 heat at which blocks start smoking explosionRadius int 40 explosionDamage int 1350 flashThreshold float 0.46 heat at which lights start flashing coolantPower float 0.5 Defaults: field default itemCapacity 30 liquidCapacity 30 hasItems true hasLiquids true rebuildable false Extra Sprites: <name>-center top region <name>-lights lights region","title":"NuclearReactor"},{"location":"modding/#impactreactor","text":"Extends PowerGenerator \u2013 Generator that uses power and has a startup time. field type default notes plasmas int 4 number of plasma sprites warmupSpeed float 0.001 itemDuration float 60 explosionRadius int 50 explosionDamage int 2000 plasma1 Color ffd06b plasma2 Color ff361b Defaults: field default hasPower true hasLiquids true liquidCapacity 30 hasItems true outputsPower true consumesPower true Sprites: <name>-bottom bottom region <name>-plasma-<i> plasma regions, where i is 0 to plasmas - 1 .","title":"ImpactReactor"},{"location":"modding/#powerdiode","text":"Extends Block Defaults: field default rotate true update true solid true insulated true Sprites: <name>-arrow","title":"PowerDiode"},{"location":"modding/#lightblock","text":"Extends Block field type default brightness float 0.9 radius float 200 Defaults: field default hasPower true update true configurable true Sprites: <name>-top","title":"LightBlock"},{"location":"modding/#production","text":"","title":"Production"},{"location":"modding/#drill","text":"Extends Block \u2013 Types which can be placed on ore blocks to extract the OreBlock 's item. field type default notes tier int Maximum tier of blocks this drill can mine. drillTime float 300 Base time to drill one ore, in frames. liquidBoostIntensity float 1.6 How many times faster the drill will progress when boosted by liquid. warmupSpeed float 0.02 Speed at which the drill speeds up. drawMineItem boolean false Whether to draw the item this drill is mining. drillEffect Effect mine Effect played when an item is produced. This is colored. rotateSpeed float 2 Speed the drill bit rotates at. updateEffect Effect pulverizeSmall Effect randomly played while drilling. updateEffectChance float 0.02 Chance the update effect will appear. drawRim boolean false heatColor Color ff5512 Defaults: field default update true solid true layer overlay group drills hasLiquids true liquidCapacity 5 hasItems true idleSound drill idleSoundVolume 0.003 Sprites: <name>-rim <name>-rotator <name>-top","title":"Drill"},{"location":"modding/#solidpump","text":"Extends Pump \u2013 Pump that makes liquid from solids and takes in power. Only works on solid floor blocks. field type default result Liquid water updateEffect Effect none updateEffectChance float 0.02 rotateSpeed float 1 attribute Attribute Defaults: field default hasPower true Sprites: <name>-liquid","title":"SolidPump"},{"location":"modding/#cultivator","text":"Extends GenericCrafter field type default recurrence float 6 Defaults: field default craftEffect none Sprites: <name>-middle <name>-top","title":"Cultivator"},{"location":"modding/#fracker","text":"Extends SolidPump field default itemUseTime 100 Defaults: field default hasItems true Sprites: <name>-liquid <name>-rotater <name>-top","title":"Fracker"},{"location":"modding/#incinerator","text":"Extends Block field type default effect Effect fuelburn flameColor Color ffad9d Defaults: field default hasPower true hasLiquid true update true solid true","title":"Incinerator"},{"location":"modding/#unit-blocks","text":"","title":"Unit Blocks"},{"location":"modding/#repairpoint","text":"Extends Block \u2013 Block which can repair units within range, with a laser. field type default repairRadius float 50 repairSpeed float 0.3 powerUse float Defaults: field default update true solid true hasPower true outlineIcon true layer turret layer2 power Extra sprites: <name>-base","title":"RepairPoint"},{"location":"modding/#unitfactory","text":"Extends block \u2013 A block can produce units field type default produceTime float 1000 launchVelocity float 0 maxSpawn int 4 unitType UnitType none Defaults: field default update true hasPower true hasItems true solid false flags producer Sprite suffix: -top","title":"UnitFactory"},{"location":"modding/#commandcenter","text":"Extends Block \u2013 A block which can issue commands to your unit. field type default topColor Color command bottomColor Color 5e5e5e effect Effect commandSend Defaults: field default flags comandCenter destructible true solid true configurable true","title":"CommandCenter"},{"location":"modding/#mechpad","text":"Extends Block \u2013 A block which will spawn a player in a mech. field type default mech Mech none buildTime float 60 * 5 Defaults: field default update true solid true hasPower true layer overlay flags mechpad","title":"MechPad"},{"location":"modding/#storage","text":"","title":"Storage"},{"location":"modding/#storageblock","text":"Abstract type which extends Block Defaults: field default hasItems true","title":"StorageBlock"},{"location":"modding/#coreblock","text":"Extends StorageBlock field type default mech Mech starter Defaults: field default solid true update true hasItems true activeSound respawning activeSoundVolume 1 layer overlay","title":"CoreBlock"},{"location":"modding/#vault","text":"Extends StorageBlock Defaults: field default solid true destructible true update false","title":"Vault"},{"location":"modding/#unloader","text":"Extends Block A block which can take items from StorageBlock , like Vault , CoreBlock or Crafters . field type default speed float 1 Defaults: field default solid true health 70 update false hasItems true confugurable true Sprites: <name>-center","title":"Unloader"},{"location":"modding/#launchpad","text":"Extends StroageBlock A block which can launch materials. field type default launchTime float none Defaults: field default update true hasItems true solid true","title":"LaunchPad"},{"location":"modding/#attributes","text":"An object with an array of attribute . Used in the Floor type to give a tile specific properties, like hottness or sporness for efficiency of various systems, like ThermalPumps and WaterExtractors. array has 4 items: index 0 is heat , index 1 is spores , index 2 is water , index 3 is oil . For example, this would give you 100 heat, 1 spores, 0.5 water and 0.1 oil. { \"array\": [ 100, 1, 0.5, 0.1] } You could use it inside of Floor type as such: { \"type\": \"Floor\", \"name\": \"magma\", \"attributes\": { \"array\": [ 0.75, 0, 0, 0 ] } }","title":"Attributes"},{"location":"modding/#attribute","text":"New attributes cannot be added. List of built-in attributes: heat spores water oil","title":"Attribute"},{"location":"modding/#buildvisibility","text":"A flag used by the game to change a few special-case things. It may be one of the following strings: hidden shown debugOnly sandboxOnly campaignOnly lightingOnly","title":"BuildVisibility"},{"location":"modding/#blockgroup","text":"Groups for blocks to build on top of each other: none walls turrets transportation power liquids drills","title":"BlockGroup"},{"location":"modding/#type","text":"","title":"Type"},{"location":"modding/#item","text":"Extends Content \u2013 It's the object that can ride conveyors, sorters and be stored in containers, and is commonly used in crafters. field type default notes color Color black hex string of color type ItemType resource used for tabs and core acceptance explosiveness float 0 how explosive this item is. flammability float 0 flammability above 0.3 makes this eleigible for item burners. radioactivity float how radioactive this item is. 0=none, 1=chernobyl ground zero hardness int 0 drill hardness of the item cost float 1 used for calculating place times; 1 cost = 1 tick added to build time alwaysUnlocked boolean false If true, item is always unlocked.","title":"Item"},{"location":"modding/#itemtype","text":"resource can't go in the core; material can go in the core.","title":"ItemType"},{"location":"modding/#itemstack","text":"A ItemStack can be a string or an object. It's used to describe the type and amount of items to a machine. As a string : copper/5 As an object : item: copper amount: 5 field type notes item string The name of an Item . amount int The amount of said item.","title":"ItemStack"},{"location":"modding/#liquid","text":"Extends Content Type which defines the properties of a liquid. Like Item this will go into it's own subdirectory content/liquids/liquid-name.json , and from it's stem name you can reuse it from your other mod content. field type default notes color Color [required] color of liquid barColor Color [optional] color used in bars. lightColor Color Color used to draw lights. Note that the alpha channel is used to dictate brightness. flammability float 0 to 1; 0 is completely inflammable, above that may catch fire when exposed to heat. temperature float 0.5 0.5 is 'room' temperature, 0 is very cold, 1 is molten hot heatCapacity float 0.5 used in cooling; water is 0.4, cryofluid is 0.9. viscosity float 0.5 how thick this liquid is; water is 0.5, oil is 0.7. explosiveness float explosiveness when heated; 0 is nothing, 1 is nuke effect StatusEffect none the associated status effect. Sprites: <name> , the sprite used when displaying the liquid from a menu.","title":"Liquid"},{"location":"modding/#liquidstack","text":"A LiquidStack can be a string or an object. It's used to describe the type and amount of liquid to a machine. As a string : water/0.5 As an object : liquid: water amount: 0.5 field type notes liquid string The name of a Liquid . amount float The amount of said liquid.","title":"LiquidStack"},{"location":"modding/#weapon","text":"Weapons are used by units and mechs alike. A weapon is a type used to shoot bullets bullets just like turrets (except that they don't have an ammo mapping) . Weapons can only shoot one type of bullet, which you define in the bullet field. field type default notes name String used to fetch the sprite of the weapon nimPlayerDist float 20 minimum cursor distance from player, fixes 'cross-eyed' shooting. sequenceNum int 0 bullet BulletType bullet shot ejectEffect Effect none shell ejection effect reload float weapon reload in frames shots int 1 amount of shots per fire spacing float 12 spacing in degrees between multiple shots, if applicable inaccuracy float 0 inaccuracy of degrees of each shot shake float 0 intensity and duration of each shot's screen shake recoil float 1.5 visual weapon knockback. length float 3 shoot barrel y offset width float 4 shoot barrel x offset. velocityRnd float 0 fraction of velocity that is random alternate bool false shoot one arm after another, rather than all at once lengthRand float 0 randomization of shot length shotDelay float 0 delay in ticks between shots ignoreRotation boolean false whether shooter rotation is ignored when shooting. targetDistance float 1 if turnCursor is false for a mech, how far away will the weapon target. shootSound Sound pew Sprite: <name> or <name>-equip","title":"Weapon"},{"location":"modding/#unittype","text":"Extends Content field type default type BaseUnit health float 60 hitsize float 7 hitsizeTile float 4 speed float 0.4 range float 0 attackLength float 150 rotatespeed float 0.2 baseRotateSpeed float 0.1 shootCone float 15 mass float 1 flying boolean targetAir boolean true rotateWeapon boolean false drag float 0.1 maxVelocity float 5 retreatPercent float 0.6 itemCapacity int 30 buildPower float 0.3 minePower float 0.7 weapon Weapon weaponOffsetY float engineOffset float engineSize float Sprites: <name> <name>-leg <name>-base","title":"UnitType"},{"location":"modding/#mech","text":"Extends Content Mechs are the player controlled entities. They shoot bullets just like turrets from their weapon . field type default notes flying boolean speed float 1.1 maxSpeed float 10 boostSpeed float 0.75 drag float 0.4 mass float 1 shake float 0 health float 200 hitsize float 6 cellTrnsY float 0 mineSpeed float 1 drillPower int -1 buildPower float 1 engineColor Color boostTo itemCapacity int 30 turnCursor boolean true canHeal boolean false compoundSpeed float 5 compoundSpeedBoost float 5 drawCell boolean true draw the health and team indicator drawItems boolean true draw the items on its back drawLight boolean true draw the engine light if it's flying/boosting weaponOffsetY float 5 engineOffset float 5 engineSize float 2.5 weapon Weapon null Sprites: <name> <name>-leg <name>-base","title":"Mech"},{"location":"modding/#category","text":"Categories for building menu: turret Offensive turrets; production Blocks that produce raw resources, such as drills; distribution Blocks that move items around; liquid Blocks that move liquids around; power Blocks that generate or transport power; defense Walls and other defensive structures; crafting Blocks that craft things; units Blocks that create units; upgrade Things that upgrade the player such as mech pads; effect Things for storage or passive effects.","title":"Category"},{"location":"modding/#zone","text":"Extends Content A Zone is a type that takes a map (named the same as the json's filename) and puts it into campaign. (a zone isn't a map) Every Zone has a Generator , which once initialized, MapGenerator will run through the map and do initialization related stuff. One of those notable things, is deleting all cores on in your map and placing a loadout on top of a random one of them. This allows your campaign map to have multiple core locations. (it doesn't matter which core was previously on the map, loadout will dictate that) It is entirely possible to produce a custom schematic, but take note that this schematic must contain a CoreBlock within it. field type default notes baseLaunchCost [ ItemStack ] launchCost [ ItemStack ] startingItems [ ItemStack ] Items you start with on the map. conditionWave int alwaysUnlocked boolean false Whether this map is always unlocked launchPeriod int 10 Rate of waves at which the core may be launched. loadout Schematic basicShard Core layout placed by MapGenerators. resources [ String ] Array of item names. requirements [ Objective ] An array of requirements to unlock configuration. configureObjective Objective ZoneWave 15 defaultStartingItems [ ItemStack ] Sprites: zone-<name> preview <name>-zone preview Built-in loadouts: basicShard bXNjaAB4nD2K2wqAIBiD5ymibnoRn6YnEP1BwUMoBL19FuJ2sbFvUFgYZDaJsLeQrkinN9UJHImsNzlYE7WrIUastuSbnlKx2VJJt+8IQGGKdfO/8J5yrGJSMegLg+YUIA== advancedShard bXNjaAB4nD2LjQqAIAyET7OMIOhFfJqeYMxBgSkYCL199gu33fFtB4tOwUTaBCP5QpHFzwtl32DahBeKK1NwPq8hoOcUixwpY+CUxe3XIwBbB/pa6tadVCUP02hgHvp5vZq/0b7pBHPYFOQ= basicFoundation bXNjaAB4nD1OSQ6DMBBzFhVu8BG+0X8MQyoiJTNSukj8nlCi2Adbtg/GA4OBF8oB00rvyE/9ykafqOIw58A7SWRKy1ZiShhZ5RcOLZhYS1hefQ1gRIeptH9jq/qW2lvc1d2tgWsOfVX/tOwE86AYBA== basicNucleus bXNjaAB4nD2MUQqAIBBEJy0s6qOLdJXuYNtCgikYBd2+LNmdj308hkGHtkId7M4YFns4mk/yfB4a48602eDI+mlNznu0FMPFd0wYKCaewl8F0EOueqM+yKSLVfJrNKWnSw/FZGzEGXFG9sy/px4gEBW1 Built-in zones: nuclearComplexe desolateRift tarFields overgrowth stainedMountains frozenForest saltFlats desertWastes groundZero","title":"Zone"},{"location":"modding/#statuseffect","text":"Extends Content Not be be confused with Effect , a status effect will give an entity special properties. Status effects are used as transitions between intermediate effects. If some a wet unit gets shocked it then gets 20 damage. field type default notes damageMultiplier float 1 armorMultiplier float 1 speedMultiplier float 1 color Color white damage float Damage (or healing) per frame. effect Effect none Random effect (0.15% per frame), on affected units. opposites: effect which reduces anothers lifetime. Built-in status effects: none \u2013 Does nothing. burning field value damage 0.06 effect burning opposites: wet freezing tarred: 1 damage and keeps burning freezing field value speedMultiplier 0.6 armorMultiplier 0.8 effect freezing opposites: melting burning wet field value speedMultiplier 0.9 effect wet opposites: burning shocked: 20 damage melting field value speedMultiplier 0.8 armorMultiplier 0.8 damage 0.3 effect melting opposites: wet freezing tarred: keeps melting tarred field value speedMultiplier 0.6 effect oily burning: keeps burning melting: keeps burning overdrive field value armorMultiplier 0.95 speedMultiplier 1.15 damageMultiplier 1.4 damage -0.01 effect overdriven shielded field value armorMultiplier 3 boss field value armorMultiplier 3 damageMultiplier 3 speedMultiplier 1.1 shocked \u2013 Does nothing. corroded field value damage 0.1","title":"StatusEffect"},{"location":"modding/#graphics","text":"","title":"Graphics"},{"location":"modding/#layer","text":"Layers is an enumeration type, which the renderer will use to group rendering order: block , base block layer; placement , for placement; overlay , first overlay stuff like conveyor items; turret , \"high\" blocks like turrets; power power lasers","title":"Layer"},{"location":"modding/#color","text":"Color is a hexadecimal string, <rr><gg><bb> for example: ff0000 is red, 00ff00 is green, 0000ff is blue, ffff00 is yellow, 00ffff is cyan, ect..","title":"Color"},{"location":"modding/#cachelayer","text":"Flags used by for cache render: normal normal layer; walls walls layer; water water layer, adding tile water shaders, and giving wave reflections; tar tar layer, adding tar shaders, making it darker and giving it some bubble reflections;","title":"CacheLayer"},{"location":"modding/#entities","text":"","title":"Entities"},{"location":"modding/#bullettype","text":"Abstract type which extends Content BulletType can either be an object {} or a \"string\" , where a string would be reusing Built-in Bullets and an object would be making a custom one. There are two major categories of bullet types: BasicBulletType and, other special bullets. Here's an example of a custom bullet: { \"type\": \"MissileBulletType\", \"lifetime\": 1000, \"speed\": 2, \"splashDamageRadius\": 2, \"splashDamage\": 9, \"frontColor\": \"ffff00\", \"backColor\": \"00ffff\", \"homingPower\": 1, \"homingRange\": 20, \"fragBullets\": 3, \"fragBullet\": { \"type\": \"LiquidBulletType\", \"liquid\": \"oil\", \"lifetime\": 2, \"speed\": 1, \"fragBullets\": 2, \"fragBullet\": { \"type\": \"LiquidBulletType\", \"liquid\": \"slag\", \"lifetime\": 1, \"speed\": 2, \"damage\": 1, } } } field type default notes lifetime float amount of ticks the bullet will last speed float inital speed of bullet damage float collision damage hitSize float 4 collision radius drawSize float 40 drag float 0 decelleration per tick pierce boolean whether it can collide hitEffect Effect created when bullet hits something despawnEffect Effect created when bullet despawns shootEffect Effect created when shooting smokeEffect Effect created when shooting hitSound Sound made when hitting something or getting removed inaccuracy float 0 extra inaccuracy ammoMultiplier float 2 how many bullets get created per item/liquid reloadMultiplier float 1 multiplied by turret reload speed recoil float recoil from shooter entities killShooter float whether to kill the shooter when this is shot. (for suicide bombers) knockback float Knockback in velocity. hitTiles boolean true Whether this bullet hits tiles. status StatusEffect none Status effect applied on hit. statusDuration float 600 Intensity of applied status effect in terms of duration. collidesTiles boolean true Whether this bullet type collides with tiles. collidesTeam boolean false Whether this bullet type collides with tiles that are of the same team. collidesAir boolean true Whether this bullet type collides with air units. collides boolean true Whether this bullet types collides with anything at all. keepVelocity boolean true Whether velocity is inherited from the shooter. fragBullets int 9 Number of frag bullets created. fragVelocityMin float 0.2 Minimum random multiplier. fragVelocityMax float 1 Maximum random multiplier. fragBullet BulletType null The frag bullet that will be created, may be a string, an object or null. If field is null, no frag bullet is created. instantDisappear boolean Whether to instantly make the bullet disappear. (used in crawlers to make sure they explode) splashDamage float 0 Area of effect damage when the bullet despawns or hits a target. Damage is calculated with linear interpolation , also known as lerp. splashDamageRadius float -1 Use a negative value to disable splash damage. splashDamageRadius is a value used in the equation lerp(1 - distance / radius, 1, 0.4) which is a multiplier for splashDamage . incendAmount int 0 incendSpread float 8 incendChance float 1 homingPower float 0 Doesn't do anything complicated; if homingPower larger then 0.01 it gets rendered in the UI, if homingPower is larger then 0.0001 it allows homingRange to work. homingRange float 50 How close the bullet needs from a target in order to home/seek said target. lightining int lightningLength int 5 hitShake float 0","title":"BulletType"},{"location":"modding/#basicbullettype","text":"Extends BulletType This types purpose is to give basic bullets their sprites. The bulletSprite will be used as the shape of the bullet. The visible pixels in your sprites will be tinted with backColor and frontColor respectively. For example if you had sprites router.png and router-back.png where Test Mod was your mods name, you could do this to include your bulletSprite : { \"type\": \"BasicBulletType\", \"bulletSprite\": \"test-mod-router\" } field type default bulletWidth float 5 bulletHeight float 7 bulletShrink float 0.5 Used to squishify the bullet as it gets closer to the target, where 0 is no shrink -0.5 is stretching and 0.5 is shrinking. frontColor Color bulletYellow Color of front sprite. backColor Color bulletYellowBack Color of back sprite. bulletSprite String bullet Mapping sprite used to make the shape of the bullet. Sprites: <mod-name>-<sprite-name> top layer bulletSprite <mod-name>-<sprite-name>-back bottom layer bulletSprite Built-in bulletSprites : bullet bullet-back missile missile-back shell shell-back","title":"BasicBulletType"},{"location":"modding/#artillerybullettype","text":"Extends BasicBulletType Makes special calculations to give the effect that the bullet is going up and back down. field type default trailEffect Effect artilleryTrail Defaults: field default collidesTiles false collides false collidesAir false hitShake 1 hitSound explosion bulletSprite shell","title":"ArtilleryBulletType"},{"location":"modding/#flakbullettype","text":"Extends BasicBulletType field type default notes explodeRange float 30 The range at which the bullets explode from enemies. Defaults: field type splashDamage 15 splashDamageRadius 34 hitEffect flakExplosionBig bulletWidth 8 bulletHeight 10","title":"FlakBulletType"},{"location":"modding/#missilebullettype","text":"Extends BasicBulletType Weave is simple a sin wave with the following equation. rotation = sin(time/scale) * magnitude field type default notes trailColor Color missileYellowBack Color of the trail effect. weaveScale float 0 A larger weaveScale means a longer wave. weaveMag float -1 A higher weaveMag means a higher (wider) wave. Defaults: field default bulletSprite missile","title":"MissileBulletType"},{"location":"modding/#bombbullettype","text":"Extends BasicBulletType Defaults: field default collidesTiles false collides false bulletShrink 0.7 lifetime 30 drag 0.05 keepVelocity false collidesAir false hitSound explosion","title":"BombBulletType"},{"location":"modding/#healbullettype","text":"Extends BulletType \u2013 Bullets that can heal blocks of the same team as the shooter. field type default healPercent float 3 Defaults: field default shootEffect shootHeal smokeEffect hitLaser hitEffect hitLaser despawnEffect hitLaser collidesTeam true","title":"HealBulletType"},{"location":"modding/#liquidbullettype","text":"Extends BulletType field type default notes liquid String null [required] name of Liquid Defaults: field default lifetime 74 statusDuration 90 despawnEffect none hitEffect hitLiquid smokeEffect none shootEffect none drag 0.009 knockback 0.55","title":"LiquidBulletType"},{"location":"modding/#massdriverbolt","text":"Extends BulletType Defaults: field default collidesTiles false lifetime 200 despawnEffect smeltsmoke hitEffect hitBulletBig drag 0.005","title":"MassDriverBolt"},{"location":"modding/#built-in-bullets","text":"artillery: artilleryDense artilleryPlastic artilleryPlasticFrag artilleryHoming artlleryIncendiary artilleryExplosive artilleryUnit flak: flakScrap flakLead flakPlastic flakExplosive flakSurge flakGlass glassFrag missiles: missileExplosive missileIncendiary missileSurge missileJavelin missileSwarm missileRevenant standard: standardCopper standardDense standardThorium standardHoming standardIncendiary standardMechSmall standardGlaive standardDenseBig standardThoriumBig standardIncendiaryBig electric: lancerLaser meltdownLaser lightning arc damageLightning liquid: waterShot cryoShot slagShot oilShot environment & misc: fireball basicFlame pyraFlame driverBolt healBullet healBulletBig frag eruptorShot bombs: bombExplosive bombIncendiary bombOil","title":"Built-in Bullets"},{"location":"modding/#baseunit","text":"There are a few useful base unit types: FlyingUnit HoverUnit BuilderDrone MinerDrone RepairDrone GroundUnit","title":"BaseUnit"},{"location":"modding/#effect","text":"Type should be a string . You can't currently create custom effects. List of built-in effects are as follows: none placeBlock breakBlock smoke spawn tapBlock select vtolHover unitDrop unitPickup unitLand pickup healWave heal landShock reactorsmoke nuclearsmoke nuclearcloud redgeneratespark generatespark fuelburn plasticburn pulverize pulverizeRed pulverizeRedder pulverizeSmall pulverizeMedium producesmoke smeltsmoke formsmoke blastsmoke lava doorclose dooropen dooropenlarge doorcloselarge purify purifyoil purifystone generate mine mineBig mineHuge smelt teleportActivate teleport teleportOut ripple bubble launch healBlock healBlockFull healWaveMend overdriveWave overdriveBlockFull shieldBreak hitBulletSmall hitFuse hitBulletBig hitFlameSmall hitLiquid hitLaser hitLancer hitMeltdown despawn flakExplosion blastExplosion plasticExplosion artilleryTrail incendTrail missileTrail absorb flakExplosionBig plasticExplosionFlak burning fire fireSmoke steam fireballsmoke ballfire freezing melting wet oily overdriven dropItem shockwave bigShockwave nuclearShockwave explosion blockExplosion blockExplosionSmoke shootSmall shootHeal shootSmallSmoke shootBig shootBig2 shootBigSmoke shootBigSmoke2 shootSmallFlame shootPyraFlame shootLiquid shellEjectSmall shellEjectMedium shellEjectBig lancerLaserShoot lancerLaserShootSmoke lancerLaserCharge lancerLaserChargeBegin lightningCharge lightningShoot unitSpawn spawnShockwave magmasmoke impactShockwave impactcloud impactsmoke dynamicExplosion padlaunch commandSend coreLand","title":"Effect"},{"location":"modding/#targetpriority","text":"A higher ordinal means a higher priority. Higher priority blocks will always get targeted over those of lower priority, regardless of distance. base turret","title":"TargetPriority"},{"location":"modding/#objective","text":"Objective is a trait, which a few types implement, which is used by Zone to give campaign maps objectives. Types which implement Objective are as follows: ZoneWave \u2013 complete if best wave within zone is heigher then target wave field type notes zone String target Zone name wave int target wave to reach Launched \u2013 complete if core launched from zone field type notes zone String target Zone name Unlock \u2013 complete if block is unlocked field type notes block String target Block name","title":"Objective"},{"location":"modding/#other","text":"","title":"Other"},{"location":"modding/#mindustry-source-structure","text":"core/src/io/anuke/mindustry/ \u251c\u2500\u2500 ai \u2502 \u251c\u2500\u2500 BlockIndexer.java \u2502 \u251c\u2500\u2500 Pathfinder.java \u2502 \u2514\u2500\u2500 WaveSpawner.java \u251c\u2500\u2500 ClientLauncher.java \u251c\u2500\u2500 content \u2502 \u251c\u2500\u2500 Blocks.java \u2502 \u251c\u2500\u2500 Bullets.java \u2502 \u251c\u2500\u2500 Fx.java \u2502 \u251c\u2500\u2500 Items.java \u2502 \u251c\u2500\u2500 Liquids.java \u2502 \u251c\u2500\u2500 Loadouts.java \u2502 \u251c\u2500\u2500 Mechs.java \u2502 \u251c\u2500\u2500 StatusEffects.java \u2502 \u251c\u2500\u2500 TechTree.java \u2502 \u251c\u2500\u2500 TypeIDs.java \u2502 \u251c\u2500\u2500 UnitTypes.java \u2502 \u2514\u2500\u2500 Zones.java \u251c\u2500\u2500 core \u2502 \u251c\u2500\u2500 ContentLoader.java \u2502 \u251c\u2500\u2500 Control.java \u2502 \u251c\u2500\u2500 FileTree.java \u2502 \u251c\u2500\u2500 GameState.java \u2502 \u251c\u2500\u2500 Logic.java \u2502 \u251c\u2500\u2500 NetClient.java \u2502 \u251c\u2500\u2500 NetServer.java \u2502 \u251c\u2500\u2500 Platform.java \u2502 \u251c\u2500\u2500 Renderer.java \u2502 \u251c\u2500\u2500 UI.java \u2502 \u251c\u2500\u2500 Version.java \u2502 \u2514\u2500\u2500 World.java \u251c\u2500\u2500 ctype \u2502 \u251c\u2500\u2500 Content.java \u2502 \u251c\u2500\u2500 ContentList.java \u2502 \u251c\u2500\u2500 ContentType.java \u2502 \u251c\u2500\u2500 MappableContent.java \u2502 \u2514\u2500\u2500 UnlockableContent.java \u251c\u2500\u2500 editor \u2502 \u251c\u2500\u2500 DrawOperation.java \u2502 \u251c\u2500\u2500 EditorTile.java \u2502 \u251c\u2500\u2500 EditorTool.java \u2502 \u251c\u2500\u2500 MapEditorDialog.java \u2502 \u251c\u2500\u2500 MapEditor.java \u2502 \u251c\u2500\u2500 MapGenerateDialog.java \u2502 \u251c\u2500\u2500 MapInfoDialog.java \u2502 \u251c\u2500\u2500 MapLoadDialog.java \u2502 \u251c\u2500\u2500 MapRenderer.java \u2502 \u251c\u2500\u2500 MapResizeDialog.java \u2502 \u251c\u2500\u2500 MapSaveDialog.java \u2502 \u251c\u2500\u2500 MapView.java \u2502 \u251c\u2500\u2500 OperationStack.java \u2502 \u2514\u2500\u2500 WaveInfoDialog.java \u251c\u2500\u2500 entities \u2502 \u251c\u2500\u2500 bullet \u2502 \u2502 \u251c\u2500\u2500 ArtilleryBulletType.java \u2502 \u2502 \u251c\u2500\u2500 BasicBulletType.java \u2502 \u2502 \u251c\u2500\u2500 BombBulletType.java \u2502 \u2502 \u251c\u2500\u2500 BulletType.java \u2502 \u2502 \u251c\u2500\u2500 FlakBulletType.java \u2502 \u2502 \u251c\u2500\u2500 HealBulletType.java \u2502 \u2502 \u251c\u2500\u2500 LiquidBulletType.java \u2502 \u2502 \u251c\u2500\u2500 MassDriverBolt.java \u2502 \u2502 \u2514\u2500\u2500 MissileBulletType.java \u2502 \u251c\u2500\u2500 Damage.java \u2502 \u251c\u2500\u2500 effect \u2502 \u2502 \u251c\u2500\u2500 Decal.java \u2502 \u2502 \u251c\u2500\u2500 Fire.java \u2502 \u2502 \u251c\u2500\u2500 GroundEffectEntity.java \u2502 \u2502 \u251c\u2500\u2500 ItemTransfer.java \u2502 \u2502 \u251c\u2500\u2500 Lightning.java \u2502 \u2502 \u251c\u2500\u2500 Puddle.java \u2502 \u2502 \u251c\u2500\u2500 RubbleDecal.java \u2502 \u2502 \u2514\u2500\u2500 ScorchDecal.java \u2502 \u251c\u2500\u2500 Effects.java \u2502 \u251c\u2500\u2500 Entities.java \u2502 \u251c\u2500\u2500 EntityCollisions.java \u2502 \u251c\u2500\u2500 EntityGroup.java \u2502 \u251c\u2500\u2500 Predict.java \u2502 \u251c\u2500\u2500 TargetPriority.java \u2502 \u251c\u2500\u2500 traits \u2502 \u2502 \u251c\u2500\u2500 AbsorbTrait.java \u2502 \u2502 \u251c\u2500\u2500 BelowLiquidTrait.java \u2502 \u2502 \u251c\u2500\u2500 BuilderMinerTrait.java \u2502 \u2502 \u251c\u2500\u2500 BuilderTrait.java \u2502 \u2502 \u251c\u2500\u2500 DamageTrait.java \u2502 \u2502 \u251c\u2500\u2500 DrawTrait.java \u2502 \u2502 \u251c\u2500\u2500 Entity.java \u2502 \u2502 \u251c\u2500\u2500 HealthTrait.java \u2502 \u2502 \u251c\u2500\u2500 KillerTrait.java \u2502 \u2502 \u251c\u2500\u2500 MinerTrait.java \u2502 \u2502 \u251c\u2500\u2500 MoveTrait.java \u2502 \u2502 \u251c\u2500\u2500 Saveable.java \u2502 \u2502 \u251c\u2500\u2500 SaveTrait.java \u2502 \u2502 \u251c\u2500\u2500 ScaleTrait.java \u2502 \u2502 \u251c\u2500\u2500 ShooterTrait.java \u2502 \u2502 \u251c\u2500\u2500 SolidTrait.java \u2502 \u2502 \u251c\u2500\u2500 SpawnerTrait.java \u2502 \u2502 \u251c\u2500\u2500 SyncTrait.java \u2502 \u2502 \u251c\u2500\u2500 TargetTrait.java \u2502 \u2502 \u251c\u2500\u2500 TeamTrait.java \u2502 \u2502 \u251c\u2500\u2500 TimeTrait.java \u2502 \u2502 \u251c\u2500\u2500 TypeTrait.java \u2502 \u2502 \u2514\u2500\u2500 VelocityTrait.java \u2502 \u251c\u2500\u2500 type \u2502 \u2502 \u251c\u2500\u2500 base \u2502 \u2502 \u2502 \u251c\u2500\u2500 BaseDrone.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 BuilderDrone.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 FlyingUnit.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 GroundUnit.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 HoverUnit.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 MinerDrone.java \u2502 \u2502 \u2502 \u2514\u2500\u2500 RepairDrone.java \u2502 \u2502 \u251c\u2500\u2500 BaseEntity.java \u2502 \u2502 \u251c\u2500\u2500 BaseUnit.java \u2502 \u2502 \u251c\u2500\u2500 Bullet.java \u2502 \u2502 \u251c\u2500\u2500 DestructibleEntity.java \u2502 \u2502 \u251c\u2500\u2500 EffectEntity.java \u2502 \u2502 \u251c\u2500\u2500 Player.java \u2502 \u2502 \u251c\u2500\u2500 SolidEntity.java \u2502 \u2502 \u251c\u2500\u2500 TileEntity.java \u2502 \u2502 \u251c\u2500\u2500 TimedEntity.java \u2502 \u2502 \u2514\u2500\u2500 Unit.java \u2502 \u251c\u2500\u2500 units \u2502 \u2502 \u251c\u2500\u2500 StateMachine.java \u2502 \u2502 \u251c\u2500\u2500 Statuses.java \u2502 \u2502 \u251c\u2500\u2500 UnitCommand.java \u2502 \u2502 \u251c\u2500\u2500 UnitDrops.java \u2502 \u2502 \u2514\u2500\u2500 UnitState.java \u2502 \u2514\u2500\u2500 Units.java \u251c\u2500\u2500 game \u2502 \u251c\u2500\u2500 DefaultWaves.java \u2502 \u251c\u2500\u2500 Difficulty.java \u2502 \u251c\u2500\u2500 EventType.java \u2502 \u251c\u2500\u2500 Gamemode.java \u2502 \u251c\u2500\u2500 GlobalData.java \u2502 \u251c\u2500\u2500 LoopControl.java \u2502 \u251c\u2500\u2500 MusicControl.java \u2502 \u251c\u2500\u2500 Objective.java \u2502 \u251c\u2500\u2500 Objectives.java \u2502 \u251c\u2500\u2500 Rules.java \u2502 \u251c\u2500\u2500 Saves.java \u2502 \u251c\u2500\u2500 Schematic.java \u2502 \u251c\u2500\u2500 Schematics.java \u2502 \u251c\u2500\u2500 SoundLoop.java \u2502 \u251c\u2500\u2500 SpawnGroup.java \u2502 \u251c\u2500\u2500 Stats.java \u2502 \u251c\u2500\u2500 Team.java \u2502 \u251c\u2500\u2500 Teams.java \u2502 \u2514\u2500\u2500 Tutorial.java \u251c\u2500\u2500 graphics \u2502 \u251c\u2500\u2500 BlockRenderer.java \u2502 \u251c\u2500\u2500 Bloom.java \u2502 \u251c\u2500\u2500 CacheLayer.java \u2502 \u251c\u2500\u2500 Drawf.java \u2502 \u251c\u2500\u2500 FloorRenderer.java \u2502 \u251c\u2500\u2500 IndexedRenderer.java \u2502 \u251c\u2500\u2500 Layer.java \u2502 \u251c\u2500\u2500 LightRenderer.java \u2502 \u251c\u2500\u2500 MenuRenderer.java \u2502 \u251c\u2500\u2500 MinimapRenderer.java \u2502 \u251c\u2500\u2500 MultiPacker.java \u2502 \u251c\u2500\u2500 OverlayRenderer.java \u2502 \u251c\u2500\u2500 Pal.java \u2502 \u251c\u2500\u2500 Pixelator.java \u2502 \u2514\u2500\u2500 Shaders.java \u251c\u2500\u2500 input \u2502 \u251c\u2500\u2500 Binding.java \u2502 \u251c\u2500\u2500 DesktopInput.java \u2502 \u251c\u2500\u2500 InputHandler.java \u2502 \u251c\u2500\u2500 MobileInput.java \u2502 \u251c\u2500\u2500 Placement.java \u2502 \u2514\u2500\u2500 PlaceMode.java \u251c\u2500\u2500 io \u2502 \u251c\u2500\u2500 JsonIO.java \u2502 \u251c\u2500\u2500 LegacyMapIO.java \u2502 \u251c\u2500\u2500 MapIO.java \u2502 \u251c\u2500\u2500 SaveFileReader.java \u2502 \u251c\u2500\u2500 SaveIO.java \u2502 \u251c\u2500\u2500 SaveMeta.java \u2502 \u251c\u2500\u2500 SavePreviewLoader.java \u2502 \u251c\u2500\u2500 SaveVersion.java \u2502 \u251c\u2500\u2500 TypeIO.java \u2502 \u2514\u2500\u2500 versions \u2502 \u251c\u2500\u2500 LegacyTypeTable.java \u2502 \u251c\u2500\u2500 Save1.java \u2502 \u251c\u2500\u2500 Save2.java \u2502 \u2514\u2500\u2500 Save3.java \u251c\u2500\u2500 maps \u2502 \u251c\u2500\u2500 filters \u2502 \u2502 \u251c\u2500\u2500 BlendFilter.java \u2502 \u2502 \u251c\u2500\u2500 ClearFilter.java \u2502 \u2502 \u251c\u2500\u2500 DistortFilter.java \u2502 \u2502 \u251c\u2500\u2500 FilterOption.java \u2502 \u2502 \u251c\u2500\u2500 GenerateFilter.java \u2502 \u2502 \u251c\u2500\u2500 MedianFilter.java \u2502 \u2502 \u251c\u2500\u2500 MirrorFilter.java \u2502 \u2502 \u251c\u2500\u2500 NoiseFilter.java \u2502 \u2502 \u251c\u2500\u2500 OreFilter.java \u2502 \u2502 \u251c\u2500\u2500 OreMedianFilter.java \u2502 \u2502 \u251c\u2500\u2500 RiverNoiseFilter.java \u2502 \u2502 \u251c\u2500\u2500 ScatterFilter.java \u2502 \u2502 \u2514\u2500\u2500 TerrainFilter.java \u2502 \u251c\u2500\u2500 generators \u2502 \u2502 \u251c\u2500\u2500 BasicGenerator.java \u2502 \u2502 \u251c\u2500\u2500 Generator.java \u2502 \u2502 \u251c\u2500\u2500 MapGenerator.java \u2502 \u2502 \u2514\u2500\u2500 RandomGenerator.java \u2502 \u251c\u2500\u2500 MapException.java \u2502 \u251c\u2500\u2500 Map.java \u2502 \u251c\u2500\u2500 MapPreviewLoader.java \u2502 \u251c\u2500\u2500 Maps.java \u2502 \u2514\u2500\u2500 zonegen \u2502 \u251c\u2500\u2500 DesertWastesGenerator.java \u2502 \u2514\u2500\u2500 OvergrowthGenerator.java \u251c\u2500\u2500 mod \u2502 \u251c\u2500\u2500 ClassAccess.java \u2502 \u251c\u2500\u2500 ContentParser.java \u2502 \u251c\u2500\u2500 Mod.java \u2502 \u251c\u2500\u2500 ModLoadingSound.java \u2502 \u251c\u2500\u2500 Mods.java \u2502 \u2514\u2500\u2500 Scripts.java \u251c\u2500\u2500 net \u2502 \u251c\u2500\u2500 Administration.java \u2502 \u251c\u2500\u2500 ArcNetProvider.java \u2502 \u251c\u2500\u2500 CrashSender.java \u2502 \u251c\u2500\u2500 Host.java \u2502 \u251c\u2500\u2500 Interpolator.java \u2502 \u251c\u2500\u2500 NetConnection.java \u2502 \u251c\u2500\u2500 Net.java \u2502 \u251c\u2500\u2500 NetworkIO.java \u2502 \u251c\u2500\u2500 Packet.java \u2502 \u251c\u2500\u2500 Packets.java \u2502 \u251c\u2500\u2500 Registrator.java \u2502 \u251c\u2500\u2500 Streamable.java \u2502 \u2514\u2500\u2500 ValidateException.java \u251c\u2500\u2500 plugin \u2502 \u2514\u2500\u2500 Plugin.java \u251c\u2500\u2500 type \u2502 \u251c\u2500\u2500 Category.java \u2502 \u251c\u2500\u2500 ErrorContent.java \u2502 \u251c\u2500\u2500 Item.java \u2502 \u251c\u2500\u2500 ItemStack.java \u2502 \u251c\u2500\u2500 ItemType.java \u2502 \u251c\u2500\u2500 Liquid.java \u2502 \u251c\u2500\u2500 LiquidStack.java \u2502 \u251c\u2500\u2500 Mech.java \u2502 \u251c\u2500\u2500 Publishable.java \u2502 \u251c\u2500\u2500 StatusEffect.java \u2502 \u251c\u2500\u2500 TypeID.java \u2502 \u251c\u2500\u2500 UnitType.java \u2502 \u251c\u2500\u2500 Weapon.java \u2502 \u251c\u2500\u2500 WeatherEvent.java \u2502 \u2514\u2500\u2500 Zone.java \u251c\u2500\u2500 ui \u2502 \u251c\u2500\u2500 Bar.java \u2502 \u251c\u2500\u2500 BorderImage.java \u2502 \u251c\u2500\u2500 Cicon.java \u2502 \u251c\u2500\u2500 ContentDisplay.java \u2502 \u251c\u2500\u2500 dialogs \u2502 \u2502 \u251c\u2500\u2500 AboutDialog.java \u2502 \u2502 \u251c\u2500\u2500 AdminsDialog.java \u2502 \u2502 \u251c\u2500\u2500 BansDialog.java \u2502 \u2502 \u251c\u2500\u2500 ColorPicker.java \u2502 \u2502 \u251c\u2500\u2500 ContentInfoDialog.java \u2502 \u2502 \u251c\u2500\u2500 ControlsDialog.java \u2502 \u2502 \u251c\u2500\u2500 CustomGameDialog.java \u2502 \u2502 \u251c\u2500\u2500 CustomRulesDialog.java \u2502 \u2502 \u251c\u2500\u2500 DatabaseDialog.java \u2502 \u2502 \u251c\u2500\u2500 DeployDialog.java \u2502 \u2502 \u251c\u2500\u2500 DiscordDialog.java \u2502 \u2502 \u251c\u2500\u2500 FileChooser.java \u2502 \u2502 \u251c\u2500\u2500 FloatingDialog.java \u2502 \u2502 \u251c\u2500\u2500 GameOverDialog.java \u2502 \u2502 \u251c\u2500\u2500 HostDialog.java \u2502 \u2502 \u251c\u2500\u2500 JoinDialog.java \u2502 \u2502 \u251c\u2500\u2500 LanguageDialog.java \u2502 \u2502 \u251c\u2500\u2500 LoadDialog.java \u2502 \u2502 \u251c\u2500\u2500 LoadoutDialog.java \u2502 \u2502 \u251c\u2500\u2500 MapPlayDialog.java \u2502 \u2502 \u251c\u2500\u2500 MapsDialog.java \u2502 \u2502 \u251c\u2500\u2500 MinimapDialog.java \u2502 \u2502 \u251c\u2500\u2500 ModsDialog.java \u2502 \u2502 \u251c\u2500\u2500 PaletteDialog.java \u2502 \u2502 \u251c\u2500\u2500 PausedDialog.java \u2502 \u2502 \u251c\u2500\u2500 SaveDialog.java \u2502 \u2502 \u251c\u2500\u2500 SchematicsDialog.java \u2502 \u2502 \u251c\u2500\u2500 SettingsMenuDialog.java \u2502 \u2502 \u251c\u2500\u2500 TechTreeDialog.java \u2502 \u2502 \u251c\u2500\u2500 TraceDialog.java \u2502 \u2502 \u2514\u2500\u2500 ZoneInfoDialog.java \u2502 \u251c\u2500\u2500 Fonts.java \u2502 \u251c\u2500\u2500 fragments \u2502 \u2502 \u251c\u2500\u2500 BlockConfigFragment.java \u2502 \u2502 \u251c\u2500\u2500 BlockInventoryFragment.java \u2502 \u2502 \u251c\u2500\u2500 ChatFragment.java \u2502 \u2502 \u251c\u2500\u2500 FadeInFragment.java \u2502 \u2502 \u251c\u2500\u2500 Fragment.java \u2502 \u2502 \u251c\u2500\u2500 HudFragment.java \u2502 \u2502 \u251c\u2500\u2500 LoadingFragment.java \u2502 \u2502 \u251c\u2500\u2500 MenuFragment.java \u2502 \u2502 \u251c\u2500\u2500 OverlayFragment.java \u2502 \u2502 \u251c\u2500\u2500 PlacementFragment.java \u2502 \u2502 \u251c\u2500\u2500 PlayerListFragment.java \u2502 \u2502 \u2514\u2500\u2500 ScriptConsoleFragment.java \u2502 \u251c\u2500\u2500 GridImage.java \u2502 \u251c\u2500\u2500 IconSize.java \u2502 \u251c\u2500\u2500 IntFormat.java \u2502 \u251c\u2500\u2500 ItemDisplay.java \u2502 \u251c\u2500\u2500 ItemImage.java \u2502 \u251c\u2500\u2500 ItemsDisplay.java \u2502 \u251c\u2500\u2500 layout \u2502 \u2502 \u251c\u2500\u2500 BranchTreeLayout.java \u2502 \u2502 \u251c\u2500\u2500 RadialTreeLayout.java \u2502 \u2502 \u2514\u2500\u2500 TreeLayout.java \u2502 \u251c\u2500\u2500 Links.java \u2502 \u251c\u2500\u2500 LiquidDisplay.java \u2502 \u251c\u2500\u2500 Minimap.java \u2502 \u251c\u2500\u2500 MobileButton.java \u2502 \u251c\u2500\u2500 MultiReqImage.java \u2502 \u251c\u2500\u2500 ReqImage.java \u2502 \u2514\u2500\u2500 Styles.java \u251c\u2500\u2500 Vars.java \u2514\u2500\u2500 world \u251c\u2500\u2500 Block.java \u251c\u2500\u2500 blocks \u2502 \u251c\u2500\u2500 Attributes.java \u2502 \u251c\u2500\u2500 Autotiler.java \u2502 \u251c\u2500\u2500 BlockPart.java \u2502 \u251c\u2500\u2500 BuildBlock.java \u2502 \u251c\u2500\u2500 defense \u2502 \u2502 \u251c\u2500\u2500 DeflectorWall.java \u2502 \u2502 \u251c\u2500\u2500 Door.java \u2502 \u2502 \u251c\u2500\u2500 ForceProjector.java \u2502 \u2502 \u251c\u2500\u2500 MendProjector.java \u2502 \u2502 \u251c\u2500\u2500 OverdriveProjector.java \u2502 \u2502 \u251c\u2500\u2500 ShockMine.java \u2502 \u2502 \u251c\u2500\u2500 SurgeWall.java \u2502 \u2502 \u251c\u2500\u2500 turrets \u2502 \u2502 \u2502 \u251c\u2500\u2500 ArtilleryTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 BurstTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 ChargeTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 CooledTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 DoubleTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 ItemTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 LaserTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 LiquidTurret.java \u2502 \u2502 \u2502 \u251c\u2500\u2500 PowerTurret.java \u2502 \u2502 \u2502 \u2514\u2500\u2500 Turret.java \u2502 \u2502 \u2514\u2500\u2500 Wall.java \u2502 \u251c\u2500\u2500 distribution \u2502 \u2502 \u251c\u2500\u2500 ArmoredConveyor.java \u2502 \u2502 \u251c\u2500\u2500 BufferedItemBridge.java \u2502 \u2502 \u251c\u2500\u2500 Conveyor.java \u2502 \u2502 \u251c\u2500\u2500 ExtendingItemBridge.java \u2502 \u2502 \u251c\u2500\u2500 ItemBridge.java \u2502 \u2502 \u251c\u2500\u2500 Junction.java \u2502 \u2502 \u251c\u2500\u2500 MassDriver.java \u2502 \u2502 \u251c\u2500\u2500 OverflowGate.java \u2502 \u2502 \u251c\u2500\u2500 Router.java \u2502 \u2502 \u2514\u2500\u2500 Sorter.java \u2502 \u251c\u2500\u2500 DoubleOverlayFloor.java \u2502 \u251c\u2500\u2500 Floor.java \u2502 \u251c\u2500\u2500 ItemSelection.java \u2502 \u251c\u2500\u2500 liquid \u2502 \u2502 \u251c\u2500\u2500 ArmoredConduit.java \u2502 \u2502 \u251c\u2500\u2500 Conduit.java \u2502 \u2502 \u251c\u2500\u2500 LiquidBridge.java \u2502 \u2502 \u251c\u2500\u2500 LiquidExtendingBridge.java \u2502 \u2502 \u251c\u2500\u2500 LiquidJunction.java \u2502 \u2502 \u251c\u2500\u2500 LiquidOverflowGate.java \u2502 \u2502 \u251c\u2500\u2500 LiquidRouter.java \u2502 \u2502 \u2514\u2500\u2500 LiquidTank.java \u2502 \u251c\u2500\u2500 LiquidBlock.java \u2502 \u251c\u2500\u2500 logic \u2502 \u2502 \u251c\u2500\u2500 LogicBlock.java \u2502 \u2502 \u2514\u2500\u2500 MessageBlock.java \u2502 \u251c\u2500\u2500 OreBlock.java \u2502 \u251c\u2500\u2500 OverlayFloor.java \u2502 \u251c\u2500\u2500 power \u2502 \u2502 \u251c\u2500\u2500 Battery.java \u2502 \u2502 \u251c\u2500\u2500 BurnerGenerator.java \u2502 \u2502 \u251c\u2500\u2500 ConditionalConsumePower.java \u2502 \u2502 \u251c\u2500\u2500 DecayGenerator.java \u2502 \u2502 \u251c\u2500\u2500 ImpactReactor.java \u2502 \u2502 \u251c\u2500\u2500 ItemLiquidGenerator.java \u2502 \u2502 \u251c\u2500\u2500 LightBlock.java \u2502 \u2502 \u251c\u2500\u2500 NuclearReactor.java \u2502 \u2502 \u251c\u2500\u2500 PowerDiode.java \u2502 \u2502 \u251c\u2500\u2500 PowerDistributor.java \u2502 \u2502 \u251c\u2500\u2500 PowerGenerator.java \u2502 \u2502 \u251c\u2500\u2500 PowerGraph.java \u2502 \u2502 \u251c\u2500\u2500 PowerNode.java \u2502 \u2502 \u251c\u2500\u2500 SingleTypeGenerator.java \u2502 \u2502 \u251c\u2500\u2500 SolarGenerator.java \u2502 \u2502 \u2514\u2500\u2500 ThermalGenerator.java \u2502 \u251c\u2500\u2500 PowerBlock.java \u2502 \u251c\u2500\u2500 production \u2502 \u2502 \u251c\u2500\u2500 Cultivator.java \u2502 \u2502 \u251c\u2500\u2500 Drill.java \u2502 \u2502 \u251c\u2500\u2500 Fracker.java \u2502 \u2502 \u251c\u2500\u2500 GenericCrafter.java \u2502 \u2502 \u251c\u2500\u2500 GenericSmelter.java \u2502 \u2502 \u251c\u2500\u2500 Incinerator.java \u2502 \u2502 \u251c\u2500\u2500 LiquidConverter.java \u2502 \u2502 \u251c\u2500\u2500 Pump.java \u2502 \u2502 \u251c\u2500\u2500 Separator.java \u2502 \u2502 \u2514\u2500\u2500 SolidPump.java \u2502 \u251c\u2500\u2500 RespawnBlock.java \u2502 \u251c\u2500\u2500 Rock.java \u2502 \u251c\u2500\u2500 sandbox \u2502 \u2502 \u251c\u2500\u2500 ItemSource.java \u2502 \u2502 \u251c\u2500\u2500 ItemVoid.java \u2502 \u2502 \u251c\u2500\u2500 LiquidSource.java \u2502 \u2502 \u251c\u2500\u2500 PowerSource.java \u2502 \u2502 \u2514\u2500\u2500 PowerVoid.java \u2502 \u251c\u2500\u2500 StaticWall.java \u2502 \u251c\u2500\u2500 storage \u2502 \u2502 \u251c\u2500\u2500 CoreBlock.java \u2502 \u2502 \u251c\u2500\u2500 LaunchPad.java \u2502 \u2502 \u251c\u2500\u2500 StorageBlock.java \u2502 \u2502 \u251c\u2500\u2500 Unloader.java \u2502 \u2502 \u2514\u2500\u2500 Vault.java \u2502 \u251c\u2500\u2500 TreeBlock.java \u2502 \u2514\u2500\u2500 units \u2502 \u251c\u2500\u2500 CommandCenter.java \u2502 \u251c\u2500\u2500 MechPad.java \u2502 \u251c\u2500\u2500 RallyPoint.java \u2502 \u251c\u2500\u2500 RepairPoint.java \u2502 \u2514\u2500\u2500 UnitFactory.java \u251c\u2500\u2500 BlockStorage.java \u251c\u2500\u2500 Build.java \u251c\u2500\u2500 CachedTile.java \u251c\u2500\u2500 consumers \u2502 \u251c\u2500\u2500 ConsumeItemFilter.java \u2502 \u251c\u2500\u2500 ConsumeItems.java \u2502 \u251c\u2500\u2500 Consume.java \u2502 \u251c\u2500\u2500 ConsumeLiquidBase.java \u2502 \u251c\u2500\u2500 ConsumeLiquidFilter.java \u2502 \u251c\u2500\u2500 ConsumeLiquid.java \u2502 \u251c\u2500\u2500 ConsumePower.java \u2502 \u251c\u2500\u2500 Consumers.java \u2502 \u2514\u2500\u2500 ConsumeType.java \u251c\u2500\u2500 DirectionalItemBuffer.java \u251c\u2500\u2500 Edges.java \u251c\u2500\u2500 ItemBuffer.java \u251c\u2500\u2500 LegacyColorMapper.java \u251c\u2500\u2500 meta \u2502 \u251c\u2500\u2500 Attribute.java \u2502 \u251c\u2500\u2500 BlockBars.java \u2502 \u251c\u2500\u2500 BlockFlag.java \u2502 \u251c\u2500\u2500 BlockGroup.java \u2502 \u251c\u2500\u2500 BlockStat.java \u2502 \u251c\u2500\u2500 BlockStats.java \u2502 \u251c\u2500\u2500 BuildVisibility.java \u2502 \u251c\u2500\u2500 PowerType.java \u2502 \u251c\u2500\u2500 Producers.java \u2502 \u251c\u2500\u2500 StatCategory.java \u2502 \u251c\u2500\u2500 StatUnit.java \u2502 \u251c\u2500\u2500 StatValue.java \u2502 \u2514\u2500\u2500 values \u2502 \u251c\u2500\u2500 AmmoListValue.java \u2502 \u251c\u2500\u2500 BooleanValue.java \u2502 \u251c\u2500\u2500 BoosterListValue.java \u2502 \u251c\u2500\u2500 ItemFilterValue.java \u2502 \u251c\u2500\u2500 ItemListValue.java \u2502 \u251c\u2500\u2500 LiquidFilterValue.java \u2502 \u251c\u2500\u2500 LiquidValue.java \u2502 \u251c\u2500\u2500 NumberValue.java \u2502 \u2514\u2500\u2500 StringValue.java \u251c\u2500\u2500 modules \u2502 \u251c\u2500\u2500 BlockModule.java \u2502 \u251c\u2500\u2500 ConsumeModule.java \u2502 \u251c\u2500\u2500 ItemModule.java \u2502 \u251c\u2500\u2500 LiquidModule.java \u2502 \u2514\u2500\u2500 PowerModule.java \u251c\u2500\u2500 Pos.java \u251c\u2500\u2500 producers \u2502 \u251c\u2500\u2500 ProduceItem.java \u2502 \u2514\u2500\u2500 Produce.java \u251c\u2500\u2500 StaticTree.java \u251c\u2500\u2500 Tile.java \u2514\u2500\u2500 WorldContext.java","title":"Mindustry Source Structure"},{"location":"servers/","text":"Servers Servers are a large part of Mindustry in that they offer the ability to play the game with other people. There are two main types of servers; dedicated servers and local LAN servers. Dedicated Servers Dedicated servers are standalone, headless versions of the game that are focused only on providing a means for people to play Multiplayer. They are usually run on a computer as a separate program rather than in-game, and are operated from the terminal. These are usually stronger than a local LAN server as they have more resources available to them to support more than two or three players, and can be run 24/7. They are also more versatile and powerful in that they have many commands to provide the administrator with more control over it, and they can easily be modded to fit the administrator's needs. You can connect to one using the \"Join Game\" button under the \"Play\" menu. Unlike local LAN servers, you will have to enter the host's IP address and port. Also unlike local LAN servers, once you add a server, it will automatically show up on your server list when you open it, and the game will automatically check the server's status. To establish a dedicated server, a dedicated Linux or Windows machine is highly recommended. If you haven't already, install at least JRE and JDK 8. Download the desired server release from itch.io , or compile one yourself. Open a terminal or TTY session then change cd to the directory the JAR is placed in. Run java -jar server.jar using Command Prompt (on Windows) or your favorite terminal (on Linux and Mac). The commands are explained in the help command. Start hosting a map with host <mapname> [mode] after you configured your server. If you are using Windows to run your server, use your favorite search engine to look up how to add rules to your Windows Firewall, as it blocks that port most of the time. Make sure to allow port 6567 TCP and UDP . If you want your server to be publicly available around the world, then read the following. If not, then you are done! It is recommended and that you use a domain name or DNS service to mask your IP for public servers for ease of use, or even better, use a cloud service e.g. Amazon AWS or a dedicated server/VM from a hosting provider such as Linode or DigitalOcean, which is much safer. Do your research , and determine which option best fits your needs. About Running A Dedicated Server At Home Most importantly, never share your public IP with the public if your hosting from your home, unless you acknowledge the implications of doing so! Your public IP is tied to your household, and if it falls into the wrong hands, it can be used to easily find your approximate location, even down to the city or block you live in. There is more that can happen; such as DoS attacks, data and information exploitation and collection, and unwanted access to other open ports in your network. Exercise caution, do your research, and use a VPN if possible. Find the make/model of your router. This is usually on a sticker on the bottom or back of the router. Use your favorite search engine to search 'port forward [your router make/model/name here]' and use the guide to foward port 6567 TCP and UDP . These instructions are different for every router, so be sure to read your guide thoroughly! You can use a service such as You Get Signal to check if you have done your portforwarding correctly. Local LAN & Steam Servers A local LAN or Steam server is a server that is built into the game, and can be started using the \"Host Multiplayer Game\" button in the in-game menu. It is meant to be simple and straightforward, for sessions between a few players under a LAN network (aka in your household's WiFi network). It is not really meant for several players, as it takes more and more resources from your device to be able to use it that way; for that you will need a dedicated server mentioned above. It can only run when the game is open, and is immediately terminated when it is closed. You can connect to one using the \"Join Game\" button under the \"Play\" menu. Unlike dedicated servers, your device will automatically find the host device and it will ususally appear in the server list without you having to enter the host's IP address in.","title":"Servers"},{"location":"servers/#servers","text":"Servers are a large part of Mindustry in that they offer the ability to play the game with other people. There are two main types of servers; dedicated servers and local LAN servers.","title":"Servers"},{"location":"servers/#dedicated-servers","text":"Dedicated servers are standalone, headless versions of the game that are focused only on providing a means for people to play Multiplayer. They are usually run on a computer as a separate program rather than in-game, and are operated from the terminal. These are usually stronger than a local LAN server as they have more resources available to them to support more than two or three players, and can be run 24/7. They are also more versatile and powerful in that they have many commands to provide the administrator with more control over it, and they can easily be modded to fit the administrator's needs. You can connect to one using the \"Join Game\" button under the \"Play\" menu. Unlike local LAN servers, you will have to enter the host's IP address and port. Also unlike local LAN servers, once you add a server, it will automatically show up on your server list when you open it, and the game will automatically check the server's status. To establish a dedicated server, a dedicated Linux or Windows machine is highly recommended. If you haven't already, install at least JRE and JDK 8. Download the desired server release from itch.io , or compile one yourself. Open a terminal or TTY session then change cd to the directory the JAR is placed in. Run java -jar server.jar using Command Prompt (on Windows) or your favorite terminal (on Linux and Mac). The commands are explained in the help command. Start hosting a map with host <mapname> [mode] after you configured your server. If you are using Windows to run your server, use your favorite search engine to look up how to add rules to your Windows Firewall, as it blocks that port most of the time. Make sure to allow port 6567 TCP and UDP . If you want your server to be publicly available around the world, then read the following. If not, then you are done! It is recommended and that you use a domain name or DNS service to mask your IP for public servers for ease of use, or even better, use a cloud service e.g. Amazon AWS or a dedicated server/VM from a hosting provider such as Linode or DigitalOcean, which is much safer. Do your research , and determine which option best fits your needs.","title":"Dedicated Servers"},{"location":"servers/#about-running-a-dedicated-server-at-home","text":"Most importantly, never share your public IP with the public if your hosting from your home, unless you acknowledge the implications of doing so! Your public IP is tied to your household, and if it falls into the wrong hands, it can be used to easily find your approximate location, even down to the city or block you live in. There is more that can happen; such as DoS attacks, data and information exploitation and collection, and unwanted access to other open ports in your network. Exercise caution, do your research, and use a VPN if possible. Find the make/model of your router. This is usually on a sticker on the bottom or back of the router. Use your favorite search engine to search 'port forward [your router make/model/name here]' and use the guide to foward port 6567 TCP and UDP . These instructions are different for every router, so be sure to read your guide thoroughly! You can use a service such as You Get Signal to check if you have done your portforwarding correctly.","title":"About Running A Dedicated Server At Home"},{"location":"servers/#local-lan-steam-servers","text":"A local LAN or Steam server is a server that is built into the game, and can be started using the \"Host Multiplayer Game\" button in the in-game menu. It is meant to be simple and straightforward, for sessions between a few players under a LAN network (aka in your household's WiFi network). It is not really meant for several players, as it takes more and more resources from your device to be able to use it that way; for that you will need a dedicated server mentioned above. It can only run when the game is open, and is immediately terminated when it is closed. You can connect to one using the \"Join Game\" button under the \"Play\" menu. Unlike dedicated servers, your device will automatically find the host device and it will ususally appear in the server list without you having to enter the host's IP address in.","title":"Local LAN &amp; Steam Servers"},{"location":"blocks/crafting/alloy-smelter/","text":"\"Combines titanium, lead, silicon and copper to produce surge alloy.\" General Health 360 Size 3x3 Build Time 3.28 seconds Build Cost x80 x70 x80 Power Power Use 240 power units/second Items Item Capacity 10 items Input/Output Input x3 x4 x2 x3 Output x1 Production Time 1.25 seconds","title":"Alloy smelter"},{"location":"blocks/crafting/blast-mixer/","text":"\"Crushes and mixes clusters of spores with pyratite to produce blast compound.\" General Health 160 Size 2x2 Build Time 0.68 seconds Build Cost x30 x20 Power Power Use 24 power units/second Items Item Capacity 10 items Input/Output Input x1 x1 Output x1 Production Time 1.33 seconds","title":"Blast mixer"},{"location":"blocks/crafting/coal-centrifuge/","text":"\"Solidifes oil into chunks of coal.\" General Health 160 Size 2x2 Build Time 1.35 seconds Build Cost x30 x40 x20 Power Power Use 42 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 10 items Input/Output Input 6/sec Output x1 Production Time 0.5 seconds","title":"Coal centrifuge"},{"location":"blocks/crafting/cryofluid-mixer/","text":"\"Mixes water and fine titanium powder into cryofluid. Essential for thorium reactor usage.\" General Health 160 Size 2x2 Build Time 2.29 seconds Build Cost x65 x60 x40 Power Power Use 60 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 10 items Input/Output Input x1 12/sec Output 12/sec Production Time 2 seconds","title":"Cryofluid mixer"},{"location":"blocks/crafting/disassembler/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 7.17 seconds Build Cost x140 x100 x150 x70 Power Power Use 240 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 20 items Input/Output Input x1 7.2/sec Output / / / Production Time 0.25 seconds","title":"Disassembler"},{"location":"blocks/crafting/graphite-press/","text":"\"Compresses chunks of coal into pure sheets of graphite.\" General Health 160 Size 2x2 Build Time 0.98 seconds Build Cost x75 x30 Items Item Capacity 10 items Input/Output Input x2 Output x1 Production Time 1.5 seconds","title":"Graphite press"},{"location":"blocks/crafting/incinerator/","text":"\"Vaporizes any excess item or liquid it receives.\" General Health 90 Size 1x1 Build Time 0.26 seconds Build Cost x15 x5 Power Power Use 30 power units/second Liquids Liquid Capacity 10 liquid units","title":"Incinerator"},{"location":"blocks/crafting/kiln/","text":"\"Smelts sand and lead into the compound known as metaglass. Requires small amounts of power to run.\" General Health 160 Size 2x2 Build Time 1.35 seconds Build Cost x60 x30 x30 Power Power Use 36 power units/second Items Item Capacity 10 items Input/Output Input x1 x1 Output x1 Production Time 0.5 seconds","title":"Kiln"},{"location":"blocks/crafting/melter/","text":"\"Melts down scrap into slag for further processing or usage in wave turrets.\" General Health 200 Size 1x1 Build Time 1.41 seconds Build Cost x30 x35 x45 Power Power Use 60 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 10 items Input/Output Input x1 Output 12/sec Production Time 0.17 seconds","title":"Melter"},{"location":"blocks/crafting/multi-press/","text":"\"An upgraded version of the graphite press. Employs water and power to process coal quickly and efficiently.\" General Health 360 Size 3x3 Build Time 4 seconds Build Cost x100 x50 x100 x25 Power Power Use 108 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 10 items Input/Output Input x3 6/sec Output x2 Production Time 0.5 seconds","title":"Multi press"},{"location":"blocks/crafting/phase-weaver/","text":"\"Synthesizes phase fabric from radioactive thorium and sand. Requires massive amounts of power to function.\" General Health 160 Size 2x2 Build Time 4.51 seconds Build Cost x120 x75 x130 Power Power Use 300 power units/second Items Item Capacity 20 items Input/Output Input x4 x10 Output x1 Production Time 2 seconds","title":"Phase weaver"},{"location":"blocks/crafting/plastanium-compressor/","text":"\"Produces plastanium from oil and titanium.\" General Health 320 Size 2x2 Build Time 4.74 seconds Build Cost x115 x60 x80 x80 Power Power Use 180 power units/second Liquids Liquid Capacity 60 liquid units Items Item Capacity 10 items Input/Output Input x2 15/sec Output x1 Production Time 1 seconds","title":"Plastanium compressor"},{"location":"blocks/crafting/pulverizer/","text":"\"Crushes scrap into fine sand.\" General Health 40 Size 1x1 Build Time 0.54 seconds Build Cost x30 x25 Power Power Use 30 power units/second Items Item Capacity 10 items Input/Output Input x1 Output x1 Production Time 0.67 seconds","title":"Pulverizer"},{"location":"blocks/crafting/pyratite-mixer/","text":"\"Mixes coal, lead and sand into highly flammable pyratite.\" General Health 160 Size 2x2 Build Time 0.71 seconds Build Cost x50 x25 Power Power Use 12 power units/second Items Item Capacity 10 items Input/Output Input x1 x2 x2 Output x1 Production Time 1.33 seconds","title":"Pyratite mixer"},{"location":"blocks/crafting/separator/","text":"\"Separates slag into its mineral components. Outputs the cooled result.\" General Health 160 Size 2x2 Build Time 0.67 seconds Build Cost x30 x25 Power Power Use 60 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 10 items Input/Output Input 4.2/sec Output / / / Production Time 0.58 seconds","title":"Separator"},{"location":"blocks/crafting/silicon-crucible/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 5.56 seconds Build Cost x80 x120 x60 x35 Power Power Use 240 power units/second Items Item Capacity 30 items Input/Output Input x4 x6 x1 Output x8 Production Time 1.5 seconds Optional Enhancements Affinities [accent]+7% [accent]+11%","title":"Silicon crucible"},{"location":"blocks/crafting/silicon-smelter/","text":"\"Reduces sand with pure coal. Produces silicon.\" General Health 160 Size 2x2 Build Time 0.54 seconds Build Cost x30 x25 Power Power Use 30 power units/second Items Item Capacity 10 items Input/Output Input x1 x2 Output x1 Production Time 0.67 seconds","title":"Silicon smelter"},{"location":"blocks/crafting/spore-press/","text":"\"Compresses spore pods under extreme pressure to synthesize oil.\" General Health 320 Size 2x2 Build Time 0.81 seconds Build Cost x35 x30 Power Power Use 42 power units/second Liquids Liquid Capacity 60 liquid units Items Item Capacity 10 items Input/Output Input x1 Output 18/sec Production Time 0.33 seconds","title":"Spore press"},{"location":"blocks/defense/copper-wall-large/","text":"\"A cheap defensive block. Useful for protecting the core and turrets in the first few waves. Spans multiple tiles.\" General Health 1280 Size 2x2 Build Time 1.2 seconds Build Cost x24","title":"Copper wall large"},{"location":"blocks/defense/copper-wall/","text":"\"A cheap defensive block. Useful for protecting the core and turrets in the first few waves.\" General Health 320 Size 1x1 Build Time 0.3 seconds Build Cost x6","title":"Copper wall"},{"location":"blocks/defense/door-large/","text":"\"A large door. Can be opened and closed by tapping. Spans multiple tiles.\" General Health 1600 Size 2x2 Build Time 3.68 seconds Build Cost x24 x16","title":"Door large"},{"location":"blocks/defense/door/","text":"\"A small door. Can be opened or closed by tapping.\" General Health 400 Size 1x1 Build Time 0.92 seconds Build Cost x6 x4","title":"Door"},{"location":"blocks/defense/phase-wall-large/","text":"\"A wall coated with special phase-based reflective compound. Deflects most bullets upon impact. Spans multiple tiles.\" General Health 2400 Size 2x2 Build Time 3.12 seconds Build Cost x24 Base Deflect Chance 10","title":"Phase wall large"},{"location":"blocks/defense/phase-wall/","text":"\"A wall coated with special phase-based reflective compound. Deflects most bullets upon impact.\" General Health 600 Size 1x1 Build Time 0.78 seconds Build Cost x6 Base Deflect Chance 10","title":"Phase wall"},{"location":"blocks/defense/plastanium-wall-large/","text":"\"A special type of wall that absorbs electric arcs and blocks automatic power node connections. Spans multiple tiles.\" General Health 2080 Size 2x2 Build Time 3.8 seconds Build Cost x8 x20","title":"Plastanium wall large"},{"location":"blocks/defense/plastanium-wall/","text":"\"A special type of wall that absorbs electric arcs and blocks automatic power node connections.\" General Health 520 Size 1x1 Build Time 0.95 seconds Build Cost x2 x5","title":"Plastanium wall"},{"location":"blocks/defense/surge-wall-large/","text":"\"An extremely durable defensive block. Builds up charge on bullet contact, releasing it randomly. Spans multiple tiles.\" General Health 3680 Size 2x2 Build Time 2.4 seconds Build Cost x24 Lightning Chance 5 % Lightning Damage 20","title":"Surge wall large"},{"location":"blocks/defense/surge-wall/","text":"\"An extremely durable defensive block. Builds up charge on bullet contact, releasing it randomly.\" General Health 920 Size 1x1 Build Time 0.6 seconds Build Cost x6 Lightning Chance 5 % Lightning Damage 20","title":"Surge wall"},{"location":"blocks/defense/thorium-wall-large/","text":"\"A strong defensive block. Decent protection from enemies. Spans multiple tiles.\" General Health 3200 Size 2x2 Build Time 2.64 seconds Build Cost x24","title":"Thorium wall large"},{"location":"blocks/defense/thorium-wall/","text":"\"A strong defensive block. Decent protection from enemies.\" General Health 800 Size 1x1 Build Time 0.66 seconds Build Cost x6","title":"Thorium wall"},{"location":"blocks/defense/titanium-wall-large/","text":"\"A moderately strong defensive block. Provides moderate protection from enemies. Spans multiple tiles.\" General Health 1760 Size 2x2 Build Time 2.4 seconds Build Cost x24","title":"Titanium wall large"},{"location":"blocks/defense/titanium-wall/","text":"\"A moderately strong defensive block. Provides moderate protection from enemies.\" General Health 440 Size 1x1 Build Time 0.6 seconds Build Cost x6","title":"Titanium wall"},{"location":"blocks/distribution/armored-conveyor/","text":"\"Moves items at the same speed as titanium conveyors, but possesses more armor. Does not accept inputs from the sides from anything but other conveyor belts.\" General Health 180 Size 1x1 Build Time 0.06 seconds Build Cost x1 x1 x1 Items Item Capacity 4 items Move Speed 11 items/second","title":"Armored conveyor"},{"location":"blocks/distribution/bridge-conveyor/","text":"\"Advanced item transport block. Allows transporting items over up to 3 tiles of any terrain or building.\" General Health 40 Size 1x1 Build Time 0.08 seconds Build Cost x4 x4 Items Item Capacity 10 items","title":"Bridge conveyor"},{"location":"blocks/distribution/conveyor/","text":"\"Basic item transport block. Moves items forward and automatically deposits them into blocks. Rotatable.\" General Health 45 Size 1x1 Build Time 0.02 seconds Build Cost x1 Items Item Capacity 4 items Move Speed 4.2 items/second","title":"Conveyor"},{"location":"blocks/distribution/distributor/","text":"\"An advanced router. Splits items to up to 7 other directions equally.\" General Health 160 Size 2x2 Build Time 0.08 seconds Build Cost x4 x4 Items Item Capacity 1 items","title":"Distributor"},{"location":"blocks/distribution/inverted-sorter/","text":"\"Processes items like a standard sorter, but outputs selected items to the sides instead.\" General Health 40 Size 1x1 Build Time 0.12 seconds Build Cost x2 x2 Items Max Consecutive 2","title":"Inverted sorter"},{"location":"blocks/distribution/junction/","text":"\"Acts as a bridge for two crossing conveyor belts. Useful in situations with two different conveyors carrying different materials to different locations.\" General Health 30 Size 1x1 Build Time 0.1 seconds Build Cost x2","title":"Junction"},{"location":"blocks/distribution/mass-driver/","text":"\"The ultimate item transport block. Collects several items and then shoots them to another mass driver over a long range. Requires power to operate.\" General Health 360 Size 3x3 Build Time 5.46 seconds Build Cost x125 x125 x50 x75 Power Power Use 105 power units/second Items Item Capacity 120 items","title":"Mass driver"},{"location":"blocks/distribution/overflow-gate/","text":"\"Only outputs to the left and right if the front path is blocked.\" General Health 40 Size 1x1 Build Time 0.17 seconds Build Cost x4 x2 Items Item Capacity 1 items Max Consecutive 2","title":"Overflow gate"},{"location":"blocks/distribution/payload-conveyor/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 0.33 seconds Build Cost x20 x10","title":"Payload conveyor"},{"location":"blocks/distribution/payload-router/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 0.42 seconds Build Cost x20 x15","title":"Payload router"},{"location":"blocks/distribution/phase-conveyor/","text":"\"Advanced item transport block. Uses power to teleport items to a connected phase conveyor over several tiles.\" General Health 40 Size 1x1 Build Time 0.49 seconds Build Cost x10 x10 x7 x5 Power Power Use 18 power units/second Items Item Capacity 10 items","title":"Phase conveyor"},{"location":"blocks/distribution/plastanium-conveyor/","text":"\"Moves items in batches. Accepts items at the back, and unloads them in three directions at the front. Requires multiple loading and unloading points for peak throughput.\" General Health 75 Size 1x1 Build Time 0.05 seconds Build Cost x1 x1 x1 Items Item Capacity 10 items Move Speed 40 items/second","title":"Plastanium conveyor"},{"location":"blocks/distribution/router/","text":"*\"Accepts items, then outputs them to up to 3 other directions equally. Useful for splitting the materials from one source to multiple targets. [scarlet]Never use next to production inputs, as they will get clogged by output.[]\"* General Health 40 Size 1x1 Build Time 0.1 seconds Build Cost x3 Items Item Capacity 1 items","title":"Router"},{"location":"blocks/distribution/sorter/","text":"\"Sorts items. If an item matches the selection, it is allowed to pass. Otherwise, the item is outputted to the left and right.\" General Health 40 Size 1x1 Build Time 0.12 seconds Build Cost x2 x2 Items Max Consecutive 2","title":"Sorter"},{"location":"blocks/distribution/titanium-conveyor/","text":"\"Advanced item transport block. Moves items faster than standard conveyors.\" General Health 65 Size 1x1 Build Time 0.04 seconds Build Cost x1 x1 x1 Items Item Capacity 4 items Move Speed 11 items/second","title":"Titanium conveyor"},{"location":"blocks/distribution/underflow-gate/","text":"\"The opposite of an overflow gate. Outputs to the front if the left and right paths are blocked.\" General Health 40 Size 1x1 Build Time 0.17 seconds Build Cost x4 x2 Items Item Capacity 1 items Max Consecutive 2","title":"Underflow gate"},{"location":"blocks/effect/container/","text":"\"Stores a small amount of items of each type. An unloader block can be used to retrieve items from the container.\" General Health 160 Size 2x2 Build Time 1.67 seconds Build Cost x100 Items Item Capacity 300 items","title":"Container"},{"location":"blocks/effect/core-foundation/","text":"\"The second version of the core. Better armored. Stores more resources.\" General Health 3500 Size 4x4 Build Time 86.67 seconds 0 seconds Build Cost x3000 x3000 x2000 Items Item Capacity 9000 items","title":"Core foundation"},{"location":"blocks/effect/core-nucleus/","text":"\"The third and final iteration of the core capsule. Extremely well armored. Stores massive amounts of resources.\" General Health 6000 Size 5x5 Build Time 300 seconds 0 seconds Build Cost x8000 x8000 x4000 x5000 Items Item Capacity 13000 items","title":"Core nucleus"},{"location":"blocks/effect/force-projector/","text":"\"Creates a hexagonal force field around itself, protecting buildings and units inside from damage. Overheats if too much damage is sustained. Optionally uses coolant to prevent overheating. Phase fabric can be used to increase shield size.\" General Health 360 Size 3x3 Build Time 4.08 seconds Build Cost x100 x75 x125 Power Power Use 240 power units/second 12 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 10 items Function Shield Health 750 Cooldown Time 35 seconds Optional Enhancements Booster x1 6/sec / 6/sec Boost Effect 10 blocks 400 shield health","title":"Force projector"},{"location":"blocks/effect/mend-projector/","text":"\"An upgraded version of the Mender. Repairs blocks in its vicinity. Optionally uses phase fabric to boost range and efficiency.\" General Health 320 Size 2x2 Build Time 2.12 seconds Build Cost x100 x25 x40 Power Power Use 90 power units/second Items Item Capacity 10 items Function Block Full Repair Time 37 seconds Range 10.63 blocks Optional Enhancements Booster x1 Boost Effect 6.25 blocks 2.36 x speed","title":"Mend projector"},{"location":"blocks/effect/mender/","text":"\"Periodically repairs blocks in its vicinity. Keeps defenses repaired in-between waves. Optionally uses silicon to boost range and efficiency.\" General Health 80 Size 1x1 Build Time 0.56 seconds Build Cost x25 x30 Power Power Use 18 power units/second Items Item Capacity 10 items Function Block Full Repair Time 83 seconds Range 5 blocks Optional Enhancements Booster x1 Boost Effect 2.5 blocks 2 x speed","title":"Mender"},{"location":"blocks/effect/overdrive-dome/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 9.97 seconds Build Cost x200 x130 x130 x80 x120 Power Power Use 600 power units/second Items Item Capacity 10 items Input/Output Input x1 x1 Production Time 5 seconds Function Speed Increase 250 % Range 25 blocks","title":"Overdrive dome"},{"location":"blocks/effect/overdrive-projector/","text":"\"Increases the speed of nearby buildings. Optionally uses phase fabric to boost range and efficiency.\" General Health 160 Size 2x2 Build Time 4.07 seconds Build Cost x100 x75 x75 x30 Power Power Use 210 power units/second Items Item Capacity 10 items Input/Output Production Time 6.67 seconds Function Speed Increase 150 % Range 10 blocks Optional Enhancements Booster x1 Boost Effect 2.5 blocks 225 %","title":"Overdrive projector"},{"location":"blocks/effect/shock-mine/","text":"\"Damages enemies stepping on the mine. Nearly invisible to the enemy.\" General Health 50 Size 1x1 Build Time 0.45 seconds Build Cost x25 x12","title":"Shock mine"},{"location":"blocks/effect/unloader/","text":"\"Unloads items from any nearby non-transportation block. The type of item to be unloaded can be changed by tapping.\" General Health 70 Size 1x1 Build Time 0.82 seconds Build Cost x25 x30","title":"Unloader"},{"location":"blocks/effect/vault/","text":"\"Stores a large amount of items of each type. An unloader block can be used to retrieve items from the vault.\" General Health 360 Size 3x3 Build Time 6.46 seconds Build Cost x250 x125 Items Item Capacity 1000 items","title":"Vault"},{"location":"blocks/liquid/bridge-conduit/","text":"\"Advanced liquid transport block. Allows transporting liquids over up to 3 tiles of any terrain or building.\" General Health 40 Size 1x1 Build Time 0.27 seconds Build Cost x8 x4 Liquids Liquid Capacity 10 liquid units","title":"Bridge conduit"},{"location":"blocks/liquid/conduit/","text":"\"Basic liquid transport block. Moves liquids forward. Used in conjunction with pumps and other conduits.\" General Health 45 Size 1x1 Build Time 0.03 seconds Build Cost x1 Liquids Liquid Capacity 10 liquid units","title":"Conduit"},{"location":"blocks/liquid/liquid-junction/","text":"\"Acts as a bridge for two crossing conduits. Useful in situations with two different conduits carrying different liquids to different locations.\" General Health 40 Size 1x1 Build Time 0.08 seconds Build Cost x2 x2","title":"Liquid junction"},{"location":"blocks/liquid/liquid-router/","text":"\"Accepts liquids from one direction and outputs them to up to 3 other directions equally. Can also store a certain amount of liquid. Useful for splitting the liquids from one source to multiple targets.\" General Health 40 Size 1x1 Build Time 0.12 seconds Build Cost x2 x4 Liquids Liquid Capacity 20 liquid units","title":"Liquid router"},{"location":"blocks/liquid/liquid-tank/","text":"\"Stores a large amount of liquids. Use for creating buffers in situations with non-constant demand of materials or as a safeguard for cooling vital blocks.\" General Health 500 Size 3x3 Build Time 1.04 seconds Build Cost x25 x25 Liquids Liquid Capacity 1500 liquid units","title":"Liquid tank"},{"location":"blocks/liquid/mechanical-pump/","text":"\"A cheap pump with slow output, but no power consumption.\" General Health 40 Size 1x1 Build Time 0.38 seconds Build Cost x15 x10 Liquids Liquid Capacity 10 liquid units Input/Output Output 6.6 liquid units/second","title":"Mechanical pump"},{"location":"blocks/liquid/phase-conduit/","text":"\"Advanced liquid transport block. Uses power to teleport liquids to a connected phase conduit over several tiles.\" General Health 40 Size 1x1 Build Time 0.87 seconds Build Cost x20 x10 x7 x5 Power Power Use 18 power units/second Liquids Liquid Capacity 10 liquid units","title":"Phase conduit"},{"location":"blocks/liquid/plated-conduit/","text":"\"Moves liquids at the same rate as pulse conduits, but possesses more armor. Does not accept fluids from the sides by anything other than conduits. Does not leak.\" General Health 220 Size 1x1 Build Time 0.08 seconds Build Cost x1 x2 x1 Liquids Liquid Capacity 16 liquid units","title":"Plated conduit"},{"location":"blocks/liquid/pulse-conduit/","text":"\"An advanced liquid transport block. Transports liquids faster and stores more than standard conduits.\" General Health 90 Size 1x1 Build Time 0.06 seconds Build Cost x1 x2 Liquids Liquid Capacity 16 liquid units","title":"Pulse conduit"},{"location":"blocks/liquid/rotary-pump/","text":"\"An advanced pump. Pumps more liquid, but requires power.\" General Health 160 Size 2x2 Build Time 2.68 seconds Build Cost x70 x50 x35 x20 Power Power Use 18 power units/second Liquids Liquid Capacity 30 liquid units Input/Output Output 48 liquid units/second","title":"Rotary pump"},{"location":"blocks/liquid/thermal-pump/","text":"\"The ultimate pump.\" General Health 360 Size 3x3 Build Time 4.63 seconds Build Cost x80 x90 x40 x35 x30 Power Power Use 78 power units/second Liquids Liquid Capacity 40 liquid units Input/Output Output 118.8 liquid units/second","title":"Thermal pump"},{"location":"blocks/logic/hyper-processor/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 9.19 seconds Build Cost x450 x75 x130 x50 Liquids Liquid Capacity 10 liquid units Input/Output Input 4.8/sec Link Range 42 blocks Instructions 1500 /sec","title":"Hyper processor"},{"location":"blocks/logic/large-logic-display/","text":"\"Unknown...\" General Health 1440 Size 6x6 Display Size 176x176 Build Time 8.46 seconds Build Cost x200 x100 x150 x75","title":"Large logic display"},{"location":"blocks/logic/logic-display/","text":"\"Unknown...\" General Health 360 Size 3x3 Display Size 80x80 Build Time 3.08 seconds Build Cost x100 x50 x50","title":"Logic display"},{"location":"blocks/logic/logic-processor/","text":"\"Unknown...\" General Health 160 Size 2x2 Build Time 6.45 seconds Build Cost x320 x60 x50 x60 Input/Output Link Range 22 blocks Instructions 480 /sec","title":"Logic processor"},{"location":"blocks/logic/memory-bank/","text":"\"Unknown...\" General Health 160 Size 2x2 Build Time 3.05 seconds Build Cost x80 x80 x30 Memory Capacity 512","title":"Memory bank"},{"location":"blocks/logic/memory-cell/","text":"\"Unknown...\" General Health 40 Size 1x1 Build Time 0.9 seconds Build Cost x30 x30 Memory Capacity 64","title":"Memory cell"},{"location":"blocks/logic/message/","text":"\"Stores a message. Used for communication between allies.\" General Health 40 Size 1x1 Build Time 0.08 seconds Build Cost x5","title":"Message"},{"location":"blocks/logic/micro-processor/","text":"\"Unknown...\" General Health 40 Size 1x1 Build Time 1.65 seconds Build Cost x80 x50 x30 Input/Output Link Range 10 blocks Instructions 120 /sec","title":"Micro processor"},{"location":"blocks/logic/switch/","text":"\"Unknown...\" General Health 40 Size 1x1 Build Time 0.08 seconds Build Cost x5","title":"Switch"},{"location":"blocks/power/battery-large/","text":"\"Stores much more power than a regular battery.\" General Health 360 Size 3x3 Build Time 1.07 seconds Build Cost x40 x20 x20 Power Power Capacity 50000","title":"Battery large"},{"location":"blocks/power/battery/","text":"\"Stores power as a buffer in times of surplus energy. Outputs power in times of deficit.\" General Health 40 Size 1x1 Build Time 0.27 seconds Build Cost x4 x20 Power Power Capacity 4000","title":"Battery"},{"location":"blocks/power/combustion-generator/","text":"\"Generates power by burning flammable materials, such as coal.\" General Health 40 Size 1x1 Build Time 0.38 seconds Build Cost x25 x15 Power Base Power Generation 60 power units/second Items Item Capacity 10 items Input/Output Input / / / Production Time 2 seconds","title":"Combustion generator"},{"location":"blocks/power/differential-generator/","text":"\"Generates large amounts of energy. Utilizes the temperature difference between cryofluid and burning pyratite.\" General Health 360 Size 3x3 Build Time 4.7 seconds Build Cost x70 x100 x50 x50 x65 Power Base Power Generation 1080 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 10 items Input/Output Input x1 6/sec Production Time 3.67 seconds","title":"Differential generator"},{"location":"blocks/power/diode/","text":"\"Battery power can flow through this block in only one direction, but only if the other side has less power stored.\" General Health 40 Size 1x1 Build Time 0.49 seconds Build Cost x10 x10 x5","title":"Diode"},{"location":"blocks/power/impact-reactor/","text":"\"An advanced generator, capable of creating massive amounts of power at peak efficiency. Requires a significant power input to kickstart the process.\" General Health 900 Size 4x4 Build Time 28.75 seconds Build Cost x500 x250 x400 x100 x300 x250 Power Power Use 1500 power units/second Base Power Generation 7800 power units/second Liquids Liquid Capacity 30 liquid units Items Item Capacity 10 items Input/Output Input x1 15/sec Production Time 2.33 seconds","title":"Impact reactor"},{"location":"blocks/power/power-node-large/","text":"\"An advanced power node with greater range.\" General Health 160 Size 2x2 Build Time 0.24 seconds Build Cost x10 x5 x3 Power Power Range 9.5 blocks Max Connections 15","title":"Power node large"},{"location":"blocks/power/power-node/","text":"\"Transmits power to connected nodes. The node will receive power from or supply power to any adjacent blocks.\" General Health 40 Size 1x1 Build Time 0.04 seconds Build Cost x1 x3 Power Power Range 6 blocks Max Connections 10","title":"Power node"},{"location":"blocks/power/rtg-generator/","text":"\"A simple, reliable generator. Uses the heat of decaying radioactive compounds to produce energy at a slow rate.\" General Health 160 Size 2x2 Build Time 5.25 seconds Build Cost x100 x50 x75 x75 x25 Power Base Power Generation 270 power units/second Items Item Capacity 10 items Input/Output Input / Production Time 18 seconds","title":"Rtg generator"},{"location":"blocks/power/solar-panel-large/","text":"\"A significantly more efficient version of the standard solar panel.\" General Health 360 Size 3x3 Build Time 3.42 seconds Build Cost x100 x145 x15 Power Base Power Generation 57 power units/second","title":"Solar panel large"},{"location":"blocks/power/solar-panel/","text":"\"Provides a small amount of power from the sun.\" General Health 40 Size 1x1 Build Time 0.32 seconds Build Cost x10 x15 Power Base Power Generation 4.2 power units/second","title":"Solar panel"},{"location":"blocks/power/steam-generator/","text":"\"An advanced combustion generator. More efficient, but requires additional water for generating steam.\" General Health 160 Size 2x2 Build Time 1.58 seconds Build Cost x35 x40 x25 x30 Power Base Power Generation 330 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 10 items Input/Output Input / / / 6/sec Production Time 1.5 seconds","title":"Steam generator"},{"location":"blocks/power/surge-tower/","text":"\"An extremely long-range power node with fewer available connections.\" General Health 160 Size 2x2 Build Time 0.68 seconds Build Cost x10 x7 x15 x15 Power Power Range 40 blocks Max Connections 2","title":"Surge tower"},{"location":"blocks/power/thermal-generator/","text":"\"Generates power when placed in hot locations.\" General Health 160 Size 2x2 Build Time 2.97 seconds Build Cost x40 x50 x40 x35 x35 Power Base Power Generation 108 power units/second Input/Output Required Tiles [accent]+50% [accent]+75% [accent]+85%","title":"Thermal generator"},{"location":"blocks/power/thorium-reactor/","text":"\"Generates significant amounts of power from thorium. Requires constant cooling. Will explode violently if insufficient amounts of coolant are supplied. Power output depends on fullness, with base power generated at full capacity.\" General Health 700 Size 3x3 Build Time 12.67 seconds Build Cost x300 x50 x150 x150 x200 Power Base Power Generation 900 power units/second Liquids Liquid Capacity 30 liquid units Items Item Capacity 30 items Input/Output Input x1 2.4/sec Production Time 6 seconds","title":"Thorium reactor"},{"location":"blocks/production/blast-drill/","text":"\"The ultimate drill. Requires large amounts of power.\" General Health 640 Size 4x4 Build Time 3.55 seconds Build Cost x65 x50 x75 x60 Power Power Use 180 power units/second Liquids Liquid Capacity 5 liquid units Items Item Capacity 10 items Input/Output Drillables Sand Dark Sand Copper Lead Scrap Coal Titanium Thorium Base Drill Speed 3.43 items/second Optional Enhancements Booster 6/sec Boost Effect 3.24 x speed","title":"Blast drill"},{"location":"blocks/production/cultivator/","text":"\"Cultivates tiny concentrations of spores in the atmosphere into industry-ready pods.\" General Health 160 Size 2x2 Build Time 0.63 seconds Build Cost x25 x25 x10 Power Power Use 54 power units/second Liquids Liquid Capacity 10 liquid units Items Item Capacity 10 items Input/Output Input 12/sec Output x1 Production Time 2.33 seconds Optional Enhancements Affinities [accent]+15% [accent]+30%","title":"Cultivator"},{"location":"blocks/production/laser-drill/","text":"\"Allows drilling even faster through laser technology, but requires power. Capable of mining thorium.\" General Health 360 Size 3x3 Build Time 1.52 seconds Build Cost x35 x30 x20 x30 Power Power Use 66 power units/second Liquids Liquid Capacity 5 liquid units Items Item Capacity 10 items Input/Output Drillables Sand Dark Sand Copper Lead Scrap Coal Titanium Thorium Base Drill Speed 1.93 items/second Optional Enhancements Booster 4.8/sec Boost Effect 2.56 x speed","title":"Laser drill"},{"location":"blocks/production/mechanical-drill/","text":"\"A cheap drill. When placed on appropriate tiles, outputs items at a slow pace indefinitely. Only capable of mining basic resources.\" General Health 160 Size 2x2 Build Time 0.1 seconds Build Cost x12 Liquids Liquid Capacity 5 liquid units Items Item Capacity 10 items Input/Output Drillables Sand Dark Sand Copper Lead Scrap Coal Base Drill Speed 0.4 items/second Optional Enhancements Booster 3/sec Boost Effect 2.56 x speed","title":"Mechanical drill"},{"location":"blocks/production/oil-extractor/","text":"\"Uses large amounts of power, sand and water to drill for oil.\" General Health 360 Size 3x3 Build Time 8.62 seconds Build Cost x150 x115 x175 x115 x75 Power Power Use 180 power units/second Liquids Liquid Capacity 30 liquid units Items Item Capacity 10 items Input/Output Required Tiles [accent]+30% [accent]+70% [accent]+100% [accent]+150% Input x1 9/sec Output 15/sec Production Time 1 seconds","title":"Oil extractor"},{"location":"blocks/production/pneumatic-drill/","text":"\"An improved drill, capable of mining titanium. Mines at a faster pace than a mechanical drill.\" General Health 160 Size 2x2 Build Time 0.32 seconds Build Cost x18 x10 Liquids Liquid Capacity 5 liquid units Items Item Capacity 10 items Input/Output Drillables Sand Dark Sand Copper Lead Scrap Coal Titanium Base Drill Speed 0.6 items/second Optional Enhancements Booster 3.6/sec Boost Effect 2.56 x speed","title":"Pneumatic drill"},{"location":"blocks/production/water-extractor/","text":"\"Extracts groundwater. Used in locations with no surface water available.\" General Health 160 Size 2x2 Build Time 0.86 seconds Build Cost x25 x20 x25 Power Power Use 90 power units/second Liquids Liquid Capacity 30 liquid units Input/Output Output 6.6/sec Optional Enhancements Affinities [scarlet]-75% [scarlet]-50% [scarlet]-30% [scarlet]-25% [accent]+10% [accent]+20% [accent]+30% [accent]+40% [accent]+100%","title":"Water extractor"},{"location":"blocks/turret/arc/","text":"\"A small close-range electric turret. Fires arcs of electricity at enemies.\" General Health 260 Size 1x1 Build Time 0.88 seconds Build Cost x35 x50 Power Power Use 180 power units/second Liquids Liquid Capacity 20 liquid units Function Range 11.25 blocks Inaccuracy 0 degrees Shots/Second 1.71 Targets Air @no Targets Ground @yes Damage 20 Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Arc"},{"location":"blocks/turret/cyclone/","text":"\"A large anti-air and anti-ground turret. Fires explosive clumps of flak at nearby units.\" General Health 1305 Size 3x3 Build Time 5.48 seconds Build Cost x200 x125 x80 Liquids Liquid Capacity 20 liquid units Function Range 25 blocks Inaccuracy 10 degrees Shots/Second 7.5 Targets Air @yes Targets Ground @yes Ammo Metaglass \u2022 3 damage \u2022 18 area dmg ~ 2.0 tiles \u2022 3 x ammo multiplier \u2022 0.8 x fire rate @bullet.frag Blast Compound \u2022 5 damage \u2022 18 area dmg ~ 6.9 tiles \u2022 4 x ammo multiplier Plastanium \u2022 6 damage \u2022 25 area dmg ~ 5.0 tiles \u2022 2 x ammo multiplier @bullet.frag Surge Alloy \u2022 13 damage \u2022 50 area dmg ~ 5.0 tiles \u2022 4 x ammo multiplier @bullet.shock Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Cyclone"},{"location":"blocks/turret/duo/","text":"\"A small, cheap turret. Useful against ground units.\" General Health 250 Size 1x1 Build Time 0.29 seconds Build Cost x35 Liquids Liquid Capacity 20 liquid units Function Range 12.5 blocks Inaccuracy 2 degrees Shots/Second 6 Targets Air @yes Targets Ground @yes Ammo Copper \u2022 9 damage \u2022 2 x ammo multiplier Graphite \u2022 18 damage \u2022 4 x ammo multiplier \u2022 0.6 x fire rate Pyratite \u2022 11 damage \u2022 2 x ammo multiplier @bullet.incendiary Silicon \u2022 12 damage \u2022 5 x ammo multiplier \u2022 1.5 x fire rate @bullet.homing Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Duo"},{"location":"blocks/turret/foreshadow/","text":"\"Unknown...\" General Health 2400 Size 4x4 Build Time 40.67 seconds Build Cost x1000 x600 x600 x200 x300 Power Power Use 600 power units/second Liquids Liquid Capacity 20 liquid units Function Range 62.5 blocks Inaccuracy 0 degrees Shots/Second 0.3 Targets Air @yes Targets Ground @yes Ammo Surge Alloy \u2022 1,350 damage Optional Enhancements Booster 120/sec / 120/sec Water \u2022 1.1 x fire rate Cryofluid \u2022 1.2 x fire rate","title":"Foreshadow"},{"location":"blocks/turret/fuse/","text":"\"A large, close-range shrapnel turret. Fires three piercing blasts at nearby enemies.\" General Health 1980 Size 3x3 Build Time 7.46 seconds Build Cost x225 x225 x100 Liquids Liquid Capacity 20 liquid units Function Range 11.25 blocks Inaccuracy 0 degrees Shots/Second 5.14 Targets Air @yes Targets Ground @yes Ammo Titanium \u2022 66 damage \u2022 4 x ammo multiplier \u2022 1.3 x fire rate @bullet.infinitepierce Thorium \u2022 105 damage \u2022 5 x ammo multiplier @bullet.infinitepierce Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Fuse"},{"location":"blocks/turret/hail/","text":"\"A small, long-range artillery turret.\" General Health 260 Size 1x1 Build Time 0.62 seconds Build Cost x40 x17 Liquids Liquid Capacity 20 liquid units Function Range 28.75 blocks Inaccuracy 1 degrees Shots/Second 1 Targets Air @no Targets Ground @yes Ammo Graphite \u2022 33 area dmg ~ 3.1 tiles \u2022 2 x ammo multiplier \u2022 0.8 knockback Silicon \u2022 33 area dmg ~ 3.1 tiles \u2022 3 x ammo multiplier \u2022 1.2 x fire rate \u2022 0.8 knockback @bullet.homing Pyratite \u2022 35 area dmg ~ 3.1 tiles \u2022 2 x ammo multiplier \u2022 0.8 knockback @bullet.incendiary Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Hail"},{"location":"blocks/turret/lancer/","text":"\"A medium-sized anti-ground laser turret. Charges and fires powerful beams of energy.\" General Health 1120 Size 2x2 Build Time 1.39 seconds Build Cost x25 x50 x45 Power Power Use 360 power units/second Liquids Liquid Capacity 20 liquid units Function Range 19.38 blocks Inaccuracy 0 degrees Shots/Second 0.67 Targets Air @no Targets Ground @yes Damage 140 Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Lancer"},{"location":"blocks/turret/meltdown/","text":"\"A massive laser cannon. Charges and fires a persistent laser beam at nearby enemies. Requires coolant to operate.\" General Health 3200 Size 4x4 Build Time 28.83 seconds Build Cost x1200 x350 x300 x325 x325 Power Power Use 1020 power units/second Liquids Liquid Capacity 20 liquid units Input/Output Input 30/sec / 30/sec Water \u2022 1.0 x fire rate Cryofluid \u2022 2.3 x fire rate Function Range 23.75 blocks Inaccuracy 0 degrees Shots/Second 0.67 Targets Air @yes Targets Ground @yes Damage 840 /sec","title":"Meltdown"},{"location":"blocks/turret/parallax/","text":"\"Unknown...\" General Health 640 Size 2x2 Build Time 3.6 seconds Build Cost x30 x90 x120 Power Power Use 180 power units/second Function Range 20 blocks Targets Air @yes Targets Ground @no Damage 24 /sec","title":"Parallax"},{"location":"blocks/turret/ripple/","text":"\"An extremely powerful artillery turret. Shoots clusters of shells at enemies over long distances.\" General Health 1170 Size 3x3 Build Time 4.5 seconds Build Cost x150 x135 x60 Liquids Liquid Capacity 20 liquid units Function Range 36.25 blocks Inaccuracy 12 degrees Shots/Second 4 Targets Air @no Targets Ground @yes Ammo Graphite \u2022 33 area dmg ~ 3.1 tiles \u2022 2 x ammo multiplier \u2022 0.8 knockback Silicon \u2022 33 area dmg ~ 3.1 tiles \u2022 3 x ammo multiplier \u2022 1.2 x fire rate \u2022 0.8 knockback @bullet.homing Pyratite \u2022 35 area dmg ~ 3.1 tiles \u2022 2 x ammo multiplier \u2022 0.8 knockback @bullet.incendiary Blast Compound \u2022 50 area dmg ~ 5.6 tiles \u2022 4 x ammo multiplier \u2022 0.8 knockback Plastanium \u2022 45 area dmg ~ 4.4 tiles \u2022 2 x ammo multiplier \u2022 1.0 knockback @bullet.frag Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Ripple"},{"location":"blocks/turret/salvo/","text":"\"A larger, more advanced version of the Duo turret. Fires quick salvos of bullets at the enemy.\" General Health 960 Size 2x2 Build Time 3.46 seconds Build Cost x105 x95 x60 Liquids Liquid Capacity 20 liquid units Function Range 18.75 blocks Inaccuracy 0 degrees Shots/Second 6.32 Targets Air @yes Targets Ground @yes Ammo Copper \u2022 9 damage \u2022 2 x ammo multiplier Graphite \u2022 18 damage \u2022 4 x ammo multiplier \u2022 0.6 x fire rate Pyratite \u2022 11 damage \u2022 2 x ammo multiplier @bullet.incendiary Silicon \u2022 12 damage \u2022 5 x ammo multiplier \u2022 1.5 x fire rate @bullet.homing Thorium \u2022 29 damage \u2022 4 x ammo multiplier Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Salvo"},{"location":"blocks/turret/scatter/","text":"\"An essential anti-air turret. Sprays clumps of lead, scrap or metaglass flak at enemy units.\" General Health 800 Size 2x2 Build Time 1.23 seconds Build Cost x85 x45 Liquids Liquid Capacity 20 liquid units Function Range 20 blocks Inaccuracy 17 degrees Shots/Second 6.67 Targets Air @yes Targets Ground @no Ammo Scrap \u2022 3 damage \u2022 22 area dmg ~ 3.0 tiles \u2022 5 x ammo multiplier \u2022 0.5 x fire rate Lead \u2022 3 damage \u2022 27 area dmg ~ 1.9 tiles \u2022 4 x ammo multiplier Metaglass \u2022 3 damage \u2022 22 area dmg ~ 2.5 tiles \u2022 5 x ammo multiplier \u2022 0.8 x fire rate @bullet.frag Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Scatter"},{"location":"blocks/turret/scorch/","text":"\"Burns any ground enemies close to it. Highly effective at close range.\" General Health 400 Size 1x1 Build Time 0.57 seconds Build Cost x25 x22 Liquids Liquid Capacity 20 liquid units Function Range 7.5 blocks Inaccuracy 0 degrees Shots/Second 10 Targets Air @no Targets Ground @yes Ammo Coal \u2022 15 damage \u2022 3 x ammo multiplier @bullet.infinitepierce @bullet.incendiary Pyratite \u2022 22 damage \u2022 4 x ammo multiplier @bullet.infinitepierce @bullet.incendiary Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.1 x fire rate Cryofluid \u2022 1.3 x fire rate","title":"Scorch"},{"location":"blocks/turret/segment/","text":"\"Damages and destroys incoming projectiles. Laser projectiles are not targeted.\" General Health 250 Size 2x2 Build Time 4.07 seconds Build Cost x80 x130 x40 Power Power Use 480 power units/second Function Range 20 blocks Shots/Second 6.67","title":"Segment"},{"location":"blocks/turret/spectre/","text":"\"A massive dual-barreled cannon. Shoots large armor-piercing bullets at air and ground targets.\" General Health 2560 Size 4x4 Build Time 25.04 seconds Build Cost x900 x300 x250 x175 x250 Liquids Liquid Capacity 20 liquid units Function Range 25 blocks Inaccuracy 3 degrees Shots/Second 20 Targets Air @yes Targets Ground @yes Ammo Graphite \u2022 55 damage \u2022 2 x ammo multiplier Pyratite \u2022 60 damage \u2022 2 x ammo multiplier \u2022 2 x pierce @bullet.incendiary Thorium \u2022 80 damage \u2022 2 x ammo multiplier \u2022 2 x pierce Optional Enhancements Booster 120/sec / 120/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Spectre"},{"location":"blocks/turret/swarmer/","text":"\"A medium-sized missile turret. Attacks both air and ground enemies. Fires homing missiles.\" General Health 1200 Size 2x2 Build Time 2.54 seconds Build Cost x35 x35 x30 x45 Liquids Liquid Capacity 20 liquid units Function Range 23.75 blocks Inaccuracy 10 degrees Shots/Second 8 Targets Air @yes Targets Ground @yes Ammo Blast Compound \u2022 10 damage \u2022 30 area dmg ~ 3.8 tiles \u2022 4 x ammo multiplier @bullet.homing Pyratite \u2022 12 damage \u2022 20 area dmg ~ 2.5 tiles \u2022 2 x ammo multiplier @bullet.incendiary @bullet.homing Surge Alloy \u2022 18 damage \u2022 25 area dmg ~ 3.1 tiles \u2022 2 x ammo multiplier @bullet.homing @bullet.shock Optional Enhancements Booster 12/sec / 12/sec Water \u2022 1.4 x fire rate Cryofluid \u2022 1.9 x fire rate","title":"Swarmer"},{"location":"blocks/turret/tsunami/","text":"\"Unknown...\" General Health 2250 Size 3x3 Build Time 13.17 seconds Build Cost x400 x100 x250 x100 Liquids Liquid Capacity 40 liquid units Function Range 23.75 blocks Inaccuracy 4 degrees Shots/Second 60 Targets Air @yes Targets Ground @yes Ammo Water \u2022 0.1 damage \u2022 2 x ammo multiplier \u2022 1.7 knockback Slag \u2022 5 damage \u2022 2 x ammo multiplier \u2022 1.3 knockback @bullet.incendiary Cryofluid \u2022 0.1 damage \u2022 2 x ammo multiplier \u2022 1.3 knockback @bullet.freezing Oil \u2022 0.1 damage \u2022 2 x ammo multiplier \u2022 1.3 knockback @bullet.tarred","title":"Tsunami"},{"location":"blocks/turret/wave/","text":"\"A medium-sized turret. Shoots streams of liquid at enemies. Automatically extinguishes fires when supplied with water.\" General Health 1000 Size 2x2 Build Time 2 seconds Build Cost x75 x45 Liquids Liquid Capacity 10 liquid units Function Range 13.75 blocks Inaccuracy 5 degrees Shots/Second 30 Targets Air @yes Targets Ground @yes Ammo Water \u2022 0.7 knockback Slag \u2022 4 damage \u2022 0.6 knockback @bullet.incendiary Cryofluid \u2022 0.6 knockback @bullet.freezing Oil \u2022 0.6 knockback @bullet.tarred","title":"Wave"},{"location":"blocks/units/additive-reconstructor/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 4.27 seconds Build Cost x200 x120 x90 Power Power Use 180 power units/second Items Item Capacity 80 items Input/Output Input x40 x40 Output Nova \u2022 -> Pulsar Dagger \u2022 -> Mace Crawler \u2022 -> Atrax Flare \u2022 -> Horizon Mono \u2022 -> Poly Risso \u2022 -> Minke Production Time 10 seconds","title":"Additive reconstructor"},{"location":"blocks/units/air-factory/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 1.32 seconds Build Cost x60 x70 Power Power Use 72 power units/second Input/Output Output Flare Mono","title":"Air factory"},{"location":"blocks/units/command-center/","text":"\"Unknown...\" General Health 220 Size 2x2 Build Time 9.58 seconds Build Cost x200 x250 x100 x250","title":"Command center"},{"location":"blocks/units/exponential-reconstructor/","text":"\"Unknown...\" General Health 1960 Size 7x7 Build Time 106.5 seconds Build Cost x2000 x2000 x750 x1000 x450 x600 Power Power Use 780 power units/second Liquids Liquid Capacity 60 liquid units Items Item Capacity 1700 items Input/Output Input x850 x750 x650 60/sec Output Zenith \u2022 -> Antumbra Spiroct \u2022 -> Arkyid Fortress \u2022 -> Scepter Bryde \u2022 -> Sei Mega \u2022 -> Quad Quasar \u2022 -> Vela Production Time 90 seconds","title":"Exponential reconstructor"},{"location":"blocks/units/ground-factory/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 2.88 seconds Build Cost x50 x120 x80 Power Power Use 72 power units/second Input/Output Output Dagger Crawler Nova","title":"Ground factory"},{"location":"blocks/units/multiplicative-reconstructor/","text":"\"Unknown...\" General Health 1000 Size 5x5 Build Time 31.33 seconds Build Cost x650 x350 x650 x450 Power Power Use 360 power units/second Items Item Capacity 260 items Input/Output Input x130 x80 x40 Output Horizon \u2022 -> Zenith Mace \u2022 -> Fortress Poly \u2022 -> Mega Minke \u2022 -> Bryde Pulsar \u2022 -> Quasar Atrax \u2022 -> Spiroct Production Time 30 seconds","title":"Multiplicative reconstructor"},{"location":"blocks/units/naval-factory/","text":"\"Unknown...\" General Health 360 Size 3x3 Build Time 5.77 seconds Build Cost x150 x130 x120 Power Power Use 72 power units/second Input/Output Output Risso","title":"Naval factory"},{"location":"blocks/units/repair-point/","text":"\"Continuously heals the closest damaged unit in its vicinity.\" General Health 40 Size 1x1 Build Time 0.5 seconds Build Cost x15 x15 x15 Power Power Use 60 power units/second Function Range 8.13 blocks","title":"Repair point"},{"location":"blocks/units/tetrative-reconstructor/","text":"\"Unknown...\" General Health 3240 Size 9x9 Build Time 144.33 seconds Build Cost x4000 x1000 x3000 x600 x600 x800 Power Power Use 1500 power units/second Liquids Liquid Capacity 180 liquid units Items Item Capacity 2000 items Input/Output Input x1000 x600 x500 x350 180/sec Output Antumbra \u2022 -> Eclipse Arkyid \u2022 -> Toxopid Scepter \u2022 -> Reign Sei \u2022 -> Omura Quad \u2022 -> Oct Vela \u2022 -> Corvus Production Time 240 seconds","title":"Tetrative reconstructor"},{"location":"items/blast-compound/","text":"\"An unstable compound used in bombs and explosives. Synthesized from spore pods and other volatile substances. Use as fuel is not advised.\" Property Value Internal Name blast-compound Color ff795e Naturally Occurring No Build Cost 100% Hardness 0 Explosiveness 120 % Flammability 40 % Radioactivity 0 % Produced in Required for","title":"Blast compound"},{"location":"items/blast-compound/#produced-in","text":"","title":"Produced in "},{"location":"items/blast-compound/#required-for","text":"","title":"Required for      "},{"location":"items/coal/","text":"\"Fossilized plant matter, formed long before the seeding event. Used extensively for fuel and resource production.\" Property Value Internal Name coal Color 272727 Naturally Occurring Yes Build Cost 100% Hardness 2 Explosiveness 20 % Flammability 100 % Radioactivity 0 % Produced in Required for","title":"Coal"},{"location":"items/coal/#produced-in","text":"","title":"Produced in     "},{"location":"items/coal/#required-for","text":"","title":"Required for        "},{"location":"items/copper/","text":"\"The most basic structural material. Used extensively in all types of blocks.\" Property Value Internal Name copper Color d99d73 Naturally Occurring Yes Build Cost 50% Hardness 1 Explosiveness 0 % Flammability 0 % Radioactivity 0 % Produced in Required for Used to build","title":"Copper"},{"location":"items/copper/#produced-in","text":"","title":"Produced in    "},{"location":"items/copper/#required-for","text":"","title":"Required for    "},{"location":"items/copper/#used-to-build","text":"","title":"Used to build                                                               "},{"location":"items/graphite/","text":"\"Mineralized carbon, used for ammunition and electrical components.\" Property Value Internal Name graphite Color b2c6d2 Naturally Occurring No Build Cost 100% Hardness 0 Explosiveness 0 % Flammability 0 % Radioactivity 0 % Produced in Required for Used to build","title":"Graphite"},{"location":"items/graphite/#produced-in","text":"","title":"Produced in  "},{"location":"items/graphite/#required-for","text":"","title":"Required for      "},{"location":"items/graphite/#used-to-build","text":"","title":"Used to build                                      "},{"location":"items/lead/","text":"\"A basic starter material. Used extensively in electronics and liquid transportation blocks.\" Property Value Internal Name lead Color 8c7fa9 Naturally Occurring Yes Build Cost 70% Hardness 1 Explosiveness 0 % Flammability 0 % Radioactivity 0 % Produced in Required for Used to build","title":"Lead"},{"location":"items/lead/#produced-in","text":"","title":"Produced in    "},{"location":"items/lead/#required-for","text":"","title":"Required for    "},{"location":"items/lead/#used-to-build","text":"","title":"Used to build                                                                        "},{"location":"items/metaglass/","text":"\"A super-tough glass compound. Extensively used for liquid distribution and storage.\" Property Value Internal Name metaglass Color ebeef5 Naturally Occurring No Build Cost 150% Hardness 0 Explosiveness 0 % Flammability 0 % Radioactivity 0 % Produced in Required for Used to build","title":"Metaglass"},{"location":"items/metaglass/#produced-in","text":"","title":"Produced in "},{"location":"items/metaglass/#required-for","text":"","title":"Required for   "},{"location":"items/metaglass/#used-to-build","text":"","title":"Used to build                          "},{"location":"items/phase-fabric/","text":"\"A near-weightless substance used in advanced electronics and self-repairing technology.\" Property Value Internal Name phase-fabric Color f4ba6e Naturally Occurring No Build Cost 130% Hardness 0 Explosiveness 0 % Flammability 0 % Radioactivity 60 % Produced in Required for Used to build","title":"Phase fabric"},{"location":"items/phase-fabric/#produced-in","text":"","title":"Produced in "},{"location":"items/phase-fabric/#required-for","text":"","title":"Required for      "},{"location":"items/phase-fabric/#used-to-build","text":"","title":"Used to build           "},{"location":"items/plastanium/","text":"\"A light, ductile material used in advanced aircraft and fragmentation ammunition.\" Property Value Internal Name plastanium Color cbd97f Naturally Occurring No Build Cost 130% Hardness 0 Explosiveness 20 % Flammability 10 % Radioactivity 0 % Produced in Required for Used to build","title":"Plastanium"},{"location":"items/plastanium/#produced-in","text":"","title":"Produced in "},{"location":"items/plastanium/#required-for","text":"","title":"Required for    "},{"location":"items/plastanium/#used-to-build","text":"","title":"Used to build                "},{"location":"items/pyratite/","text":"\"An extremely flammable substance used in incendiary weapons.\" Property Value Internal Name pyratite Color ffaa5f Naturally Occurring No Build Cost 100% Hardness 0 Explosiveness 40 % Flammability 140 % Radioactivity 0 % Produced in Required for","title":"Pyratite"},{"location":"items/pyratite/#produced-in","text":"","title":"Produced in "},{"location":"items/pyratite/#required-for","text":"","title":"Required for            "},{"location":"items/sand/","text":"\"A common material that is used extensively in smelting, both in alloying and as a flux.\" Property Value Internal Name sand Color f7cba4 Naturally Occurring Yes Build Cost 100% Hardness 0 Explosiveness 0 % Flammability 0 % Radioactivity 0 % Produced in Required for","title":"Sand"},{"location":"items/sand/#produced-in","text":"","title":"Produced in     "},{"location":"items/sand/#required-for","text":"","title":"Required for      "},{"location":"items/scrap/","text":"\"Leftover remnants of old structures and units. Contains trace amounts of many different metals.\" Property Value Internal Name scrap Color 777777 Naturally Occurring Yes Build Cost 100% Hardness 0 Explosiveness 0 % Flammability 0 % Radioactivity 0 % Produced in Required for Used to build","title":"Scrap"},{"location":"items/scrap/#produced-in","text":"","title":"Produced in    "},{"location":"items/scrap/#required-for","text":"","title":"Required for    "},{"location":"items/scrap/#used-to-build","text":"","title":"Used to build    "},{"location":"items/silicon/","text":"\"An extremely useful semiconductor. Applications in solar panels, complex electronics and homing turret ammunition.\" Property Value Internal Name silicon Color 53565c Naturally Occurring No Build Cost 80% Hardness 0 Explosiveness 0 % Flammability 0 % Radioactivity 0 % Produced in Required for Used to build","title":"Silicon"},{"location":"items/silicon/#produced-in","text":"","title":"Produced in  "},{"location":"items/silicon/#required-for","text":"","title":"Required for           "},{"location":"items/silicon/#used-to-build","text":"","title":"Used to build                                                               "},{"location":"items/spore-pod/","text":"\"A pod of synthetic spores, synthesized from atmospheric concentrations for industrial purposes. Used for conversion into oil, explosives and fuel.\" Property Value Internal Name spore-pod Color 7457ce Naturally Occurring No Build Cost 100% Hardness 0 Explosiveness 0 % Flammability 115 % Radioactivity 0 % Produced in Required for","title":"Spore pod"},{"location":"items/spore-pod/#produced-in","text":"","title":"Produced in "},{"location":"items/spore-pod/#required-for","text":"","title":"Required for    "},{"location":"items/surge-alloy/","text":"\"An advanced alloy with unique electrical properties.\" Property Value Internal Name surge-alloy Color f3e979 Naturally Occurring No Build Cost 100% Hardness 0 Explosiveness 0 % Flammability 0 % Radioactivity 0 % Produced in Required for Used to build","title":"Surge alloy"},{"location":"items/surge-alloy/#produced-in","text":"","title":"Produced in "},{"location":"items/surge-alloy/#required-for","text":"","title":"Required for    "},{"location":"items/surge-alloy/#used-to-build","text":"","title":"Used to build           "},{"location":"items/thorium/","text":"\"A dense, radioactive metal used as structural support and nuclear fuel.\" Property Value Internal Name thorium Color f9a3c7 Naturally Occurring Yes Build Cost 110% Hardness 4 Explosiveness 20 % Flammability 0 % Radioactivity 100 % Produced in Required for Used to build","title":"Thorium"},{"location":"items/thorium/#produced-in","text":"","title":"Produced in  "},{"location":"items/thorium/#required-for","text":"","title":"Required for      "},{"location":"items/thorium/#used-to-build","text":"","title":"Used to build                           "},{"location":"items/titanium/","text":"\"A rare super-light metal used extensively in liquid transportation, drills and aircraft.\" Property Value Internal Name titanium Color 8da1e3 Naturally Occurring Yes Build Cost 100% Hardness 3 Explosiveness 0 % Flammability 0 % Radioactivity 0 % Produced in Required for Used to build","title":"Titanium"},{"location":"items/titanium/#produced-in","text":"","title":"Produced in   "},{"location":"items/titanium/#required-for","text":"","title":"Required for      "},{"location":"items/titanium/#used-to-build","text":"","title":"Used to build                                         "},{"location":"liquids/cryofluid/","text":"\"An inert, non-corrosive liquid created from water and titanium. Has extremely high heat capacity. Extensively used as coolant.\" Property Value Internal Name cryofluid Color 6ecdecff Explosiveness 0 % Flammability 0 % Heat Capacity 90 % Viscosity 50 % Temperature 25 % Produced in Required for","title":"Cryofluid"},{"location":"liquids/cryofluid/#produced-in","text":"","title":"Produced in "},{"location":"liquids/cryofluid/#required-for","text":"","title":"Required for                       "},{"location":"liquids/oil/","text":"\"A liquid used in advanced material production. Can be converted into coal as fuel, or sprayed and set on fire as a weapon.\" Property Value Internal Name oil Color 313131ff Explosiveness 120 % Flammability 120 % Heat Capacity 70 % Viscosity 70 % Temperature 50 % Produced in Required for","title":"Oil"},{"location":"liquids/oil/#produced-in","text":"","title":"Produced in      "},{"location":"liquids/oil/#required-for","text":"","title":"Required for    "},{"location":"liquids/slag/","text":"\"Various different types of molten metal mixed together. Can be separated into its constituent minerals, or sprayed at enemy units as a weapon.\" Property Value Internal Name slag Color ffa166ff Explosiveness 0 % Flammability 0 % Heat Capacity 50 % Viscosity 80 % Temperature 100 % Produced in Required for","title":"Slag"},{"location":"liquids/slag/#produced-in","text":"","title":"Produced in      "},{"location":"liquids/slag/#required-for","text":"","title":"Required for    "},{"location":"liquids/water/","text":"\"The most useful liquid. Commonly used for cooling machines and waste processing.\" Property Value Internal Name water Color 596ab8ff Explosiveness 0 % Flammability 0 % Heat Capacity 40 % Viscosity 50 % Temperature 50 % Produced in Required for","title":"Water"},{"location":"liquids/water/#produced-in","text":"","title":"Produced in     "},{"location":"liquids/water/#required-for","text":"","title":"Required for                          "},{"location":"units/alpha/","text":"\"Unknown...\" Property Value Flying Yes Health 150 Speed 3 Build Speed 50 % Mine Speed 600 % Mine Tier Copper Lead Scrap Command Limit 3 Item Capacity 30 Range 19 blocks","title":"Alpha"},{"location":"units/antumbra/","text":"\"Unknown...\" Property Value Flying Yes Health 7000 Speed 0.8 Command Limit 8 Item Capacity 220 Range 25 blocks","title":"Antumbra"},{"location":"units/arkyid/","text":"\"Unknown...\" Property Value Flying No Health 8000 Speed 0.5 Build Speed 100 % Command Limit 8 Item Capacity 80 Range 18 blocks","title":"Arkyid"},{"location":"units/atrax/","text":"\"Unknown...\" Property Value Flying No Health 600 Speed 0.5 Command Limit 8 Item Capacity 40 Range 8 blocks","title":"Atrax"},{"location":"units/beta/","text":"\"Unknown...\" Property Value Flying Yes Health 170 Speed 3.3 Build Speed 75 % Mine Speed 700 % Mine Tier Copper Lead Scrap Command Limit 5 Item Capacity 50 Range 23 blocks","title":"Beta"},{"location":"units/bryde/","text":"\"Unknown...\" Property Value Flying No Health 900 Speed 0.85 Command Limit 8 Abilities Shield Regen Field Item Capacity 60 Range 41 blocks","title":"Bryde"},{"location":"units/corvus/","text":"\"Unknown...\" Property Value Flying No Health 18000 Speed 0.3 Command Limit 8 Item Capacity 110 Range 59 blocks","title":"Corvus"},{"location":"units/crawler/","text":"\"Unknown...\" Property Value Flying No Health 180 Speed 1 Command Limit 8 Item Capacity 30 Range 1 blocks Created in","title":"Crawler"},{"location":"units/crawler/#created-in","text":"","title":"Created in "},{"location":"units/dagger/","text":"\"Unknown...\" Property Value Flying No Health 140 Speed 0.5 Command Limit 8 Item Capacity 30 Range 19 blocks Created in","title":"Dagger"},{"location":"units/dagger/#created-in","text":"","title":"Created in "},{"location":"units/eclipse/","text":"\"Unknown...\" Property Value Flying Yes Health 20000 Speed 0.52 Command Limit 8 Item Capacity 230 Range 28 blocks","title":"Eclipse"},{"location":"units/flare/","text":"\"Unknown...\" Property Value Flying Yes Health 75 Speed 3 Command Limit 8 Item Capacity 20 Range 19 blocks Created in","title":"Flare"},{"location":"units/flare/#created-in","text":"","title":"Created in "},{"location":"units/fortress/","text":"\"Unknown...\" Property Value Flying No Health 790 Speed 0.38 Command Limit 8 Item Capacity 50 Range 28 blocks","title":"Fortress"},{"location":"units/gamma/","text":"\"Unknown...\" Property Value Flying Yes Health 220 Speed 3.55 Build Speed 100 % Mine Speed 800 % Mine Tier Copper Lead Scrap Coal Command Limit 7 Item Capacity 70 Range 31 blocks","title":"Gamma"},{"location":"units/horizon/","text":"\"Unknown...\" Property Value Flying Yes Health 350 Speed 2 Command Limit 8 Item Capacity 30 Range 3 blocks","title":"Horizon"},{"location":"units/mace/","text":"\"Unknown...\" Property Value Flying No Health 500 Speed 0.4 Command Limit 8 Item Capacity 30 Range 6 blocks","title":"Mace"},{"location":"units/mega/","text":"\"Unknown...\" Property Value Flying Yes Health 500 Speed 2.4 Build Speed 250 % Mine Speed 100 % Mine Tier Copper Lead Scrap Coal Titanium Payload Capacity 4 blocks\u00b2 Command Limit 8 Item Capacity 60 Range 26 blocks","title":"Mega"},{"location":"units/minke/","text":"\"Unknown...\" Property Value Flying No Health 600 Speed 0.9 Command Limit 8 Abilities Status Field Item Capacity 40 Range 32 blocks","title":"Minke"},{"location":"units/mono/","text":"\"Unknown...\" Property Value Flying Yes Health 100 Speed 2 Mine Speed 260 % Mine Tier Copper Lead Scrap Command Limit 8 Item Capacity 20 Range 0 blocks Created in","title":"Mono"},{"location":"units/mono/#created-in","text":"","title":"Created in "},{"location":"units/nova/","text":"\"Unknown...\" Property Value Flying No Health 110 Speed 0.55 Build Speed 80 % Command Limit 8 Abilities Repair Field Item Capacity 30 Range 26 blocks Created in","title":"Nova"},{"location":"units/nova/#created-in","text":"","title":"Created in "},{"location":"units/oct/","text":"\"Unknown...\" Property Value Flying Yes Health 24000 Speed 0.8 Build Speed 400 % Payload Capacity 28.09 blocks\u00b2 Command Limit 6 Abilities Force Field Repair Field Item Capacity 240 Range 0 blocks","title":"Oct"},{"location":"units/omura/","text":"\"Unknown...\" Property Value Flying No Health 22000 Speed 0.62 Command Limit 8 Abilities Flare Factory Item Capacity 200 Range 70 blocks","title":"Omura"},{"location":"units/poly/","text":"\"Unknown...\" Property Value Flying Yes Health 400 Speed 2.6 Build Speed 50 % Mine Speed 350 % Mine Tier Copper Lead Scrap Coal Command Limit 8 Abilities Repair Field Item Capacity 30 Range 28 blocks","title":"Poly"},{"location":"units/pulsar/","text":"\"Unknown...\" Property Value Flying No Health 300 Speed 0.7 Build Speed 90 % Mine Speed 500 % Mine Tier Copper Lead Scrap Coal Command Limit 8 Abilities Shield Regen Field Item Capacity 40 Range 8 blocks","title":"Pulsar"},{"location":"units/quad/","text":"\"Unknown...\" Property Value Flying Yes Health 6000 Speed 1.4 Build Speed 250 % Payload Capacity 9 blocks\u00b2 Command Limit 8 Item Capacity 120 Range 5 blocks","title":"Quad"},{"location":"units/quasar/","text":"\"Unknown...\" Property Value Flying No Health 650 Speed 0.4 Build Speed 170 % Mine Speed 600 % Mine Tier Copper Lead Scrap Coal Titanium Command Limit 10 Abilities Force Field Item Capacity 40 Range 20 blocks","title":"Quasar"},{"location":"units/reign/","text":"\"Unknown...\" Property Value Flying No Health 24000 Speed 0.35 Command Limit 8 Item Capacity 100 Range 26 blocks","title":"Reign"},{"location":"units/risso/","text":"\"Unknown...\" Property Value Flying No Health 280 Speed 1.1 Command Limit 8 Item Capacity 30 Range 27 blocks Created in","title":"Risso"},{"location":"units/risso/#created-in","text":"","title":"Created in "},{"location":"units/scepter/","text":"\"Unknown...\" Property Value Flying No Health 9000 Speed 0.35 Command Limit 8 Item Capacity 80 Range 23 blocks","title":"Scepter"},{"location":"units/sei/","text":"\"Unknown...\" Property Value Flying No Health 10000 Speed 0.73 Command Limit 8 Item Capacity 150 Range 31 blocks","title":"Sei"},{"location":"units/spiroct/","text":"\"Unknown...\" Property Value Flying No Health 760 Speed 0.4 Build Speed 75 % Command Limit 8 Item Capacity 40 Range 10 blocks","title":"Spiroct"},{"location":"units/toxopid/","text":"\"Unknown...\" Property Value Flying No Health 22000 Speed 0.5 Build Speed 100 % Command Limit 8 Item Capacity 80 Range 31 blocks","title":"Toxopid"},{"location":"units/vela/","text":"\"Unknown...\" Property Value Flying No Health 7000 Speed 0.35 Command Limit 8 Item Capacity 90 Range 20 blocks","title":"Vela"},{"location":"units/zenith/","text":"\"Unknown...\" Property Value Flying Yes Health 700 Speed 1.7 Command Limit 8 Item Capacity 80 Range 23 blocks","title":"Zenith"}]}